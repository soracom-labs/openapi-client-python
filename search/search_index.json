{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"api/","text":"soracom-api \u00b6 SORACOM API v1 This Python package is automatically generated by the OpenAPI Generator project: API version: VERSION_PLACEHOLDER Package version: 1.0.0 Build package: org.openapitools.codegen.languages.PythonClientCodegen Requirements. \u00b6 Python >=3.6 Installation & Usage \u00b6 pip install \u00b6 If the python package is hosted on a repository, you can install directly using: pip install git+https://github.com/soracom-labs/openapi-client-python.git (you may need to run pip with root permission: sudo pip install git+https://github.com/soracom-labs/openapi-client-python.git ) Then import the package: import soracom_api Setuptools \u00b6 Install via Setuptools . python setup.py install --user (or sudo python setup.py install to install the package for all users) Then import the package: import soracom_api Getting Started \u00b6 Please follow the installation procedure and then run the following: import time import soracom_api from pprint import pprint from soracom_api.api import audit_log_api from soracom_api.model.api_audit_log_entry import APIAuditLogEntry from soracom_api.model.napter_audit_log_entry import NapterAuditLogEntry # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) api_kind = \"api_kind_example\" # str | Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). (optional) from_epoch_ms = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to_epoch_ms = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) try: # Retrieve audit logs for API calls api_response = api_instance.get_api_audit_logs(api_kind=api_kind, from_epoch_ms=from_epoch_ms, to_epoch_ms=to_epoch_ms, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_api_audit_logs: %s\\n\" % e) Documentation for API Endpoints \u00b6 All URIs are relative to https://api.soracom.io/v1 Class Method HTTP request Description AuditLogApi get_api_audit_logs GET /audit_logs/api Retrieve audit logs for API calls AuditLogApi get_napter_audit_logs GET /audit_logs/napter Retrieve audit logs for Napter AuthApi auth POST /auth Performs authentication to access to the SORACOM API. AuthApi issue_password_reset_token POST /auth/password_reset_token/issue Issues a password reset token for the operator. AuthApi verify_password_reset_token POST /auth/password_reset_token/verify Verifies the password reset token and updates password. BillingApi export_billing POST /bills/{yyyyMM}/export Output billing CSV file to S3. BillingApi export_latest_billing POST /bills/latest/export Export latest billing CSV file to S3. BillingApi get_billing GET /bills/{yyyyMM} Get bill. BillingApi get_billing_history GET /bills Get billing history. BillingApi get_billing_per_day GET /bills/{yyyyMM}/daily Get bill per day. BillingApi get_latest_billing GET /bills/latest Get latest bill. CellLocationApi batch_get_cell_locations POST /cell_locations List location information for multiple cell towers. CellLocationApi get_cell_location GET /cell_locations Get location information for a cell tower. CredentialApi create_credential POST /credentials/{credentials_id} Create a credential. CredentialApi delete_credential DELETE /credentials/{credentials_id} Delete a credential. CredentialApi list_credentials GET /credentials List of credentials. CredentialApi update_credential PUT /credentials/{credentials_id} Update a credential. DataEntryApi delete_data_entry DELETE /data/{resource_type}/{resource_id}/{time} Deletes a data entry DataEntryApi get_data_entries GET /data/{resource_type}/{resource_id} Get data sent from a resource. DataEntryApi get_data_entry GET /data/{resource_type}/{resource_id}/{time} Gets a data entry DataEntryApi list_data_source_resources GET /data/resources Get the list of data source resources DeviceApi create_device POST /devices Creates a new Device DeviceApi delete_device DELETE /devices/{device_id} Delete Device DeviceApi delete_device_tag DELETE /devices/{device_id}/tags/{tag_name} Delete device tag DeviceApi execute_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/execute Executes a resource of a device DeviceApi get_data_from_device GET /devices/{device_id}/data Get data sent from a device. DeviceApi get_device GET /devices/{device_id} Returns a Device identified by device ID DeviceApi list_devices GET /devices Returns a list of Devices DeviceApi observe_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/observe Triggers observation of the specified resource of a device DeviceApi observe_device_resources POST /devices/{device_id}/{object}/{instance}/observe Triggers observation of resources under an object instance of a device DeviceApi put_device_tags PUT /devices/{device_id}/tags Updates device tags DeviceApi read_device_resource GET /devices/{device_id}/{object}/{instance}/{resource} Get the specified resource of a device DeviceApi read_device_resources GET /devices/{device_id}/{object}/{instance} Get resources under an object instance of a device DeviceApi set_device_group POST /devices/{device_id}/set_group Lets a device join a group DeviceApi unobserve_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/unobserve Stops observation of a resource of a device DeviceApi unobserve_device_resources POST /devices/{device_id}/{object}/{instance}/unobserve Stops observation of resources under an object instance of a device DeviceApi unset_device_group POST /devices/{device_id}/unset_group Lets a device leave from a group DeviceApi write_device_resource PUT /devices/{device_id}/{object}/{instance}/{resource} Write value to a resource of a device DeviceObjectModelApi create_device_object_model POST /device_object_models Creates a new device object model DeviceObjectModelApi delete_device_object_model DELETE /device_object_models/{model_id} Deletes a device object model DeviceObjectModelApi get_device_object_model GET /device_object_models/{model_id} Gets a device object model DeviceObjectModelApi list_device_object_models GET /device_object_models Returns a list of device object models DeviceObjectModelApi set_device_object_model_scope POST /device_object_models/{model_id}/set_scope Sets scope for a device object model DeviceObjectModelApi update_device_object_model POST /device_object_models/{model_id} Updates a device object model DiagnosticApi get_diagnostic GET /diagnostics/{diagnostic_id} Get diagnostic DiagnosticApi send_diagnostic_request POST /diagnostics Send diagnostic request EmailApi delete_email DELETE /operators/{operator_id}/emails/{email_id} Delete email address EmailApi get_email GET /operators/{operator_id}/emails/{email_id} Get email address EmailApi issue_add_email_token POST /operators/add_email_token/issue Issue a token to add an email address EmailApi list_emails GET /operators/{operator_id}/emails List email addresses EmailApi verify_add_email_token POST /operators/add_email_token/verify Verify a token to add an email address EventHandlerApi create_event_handler POST /event_handlers Create Event Handler. EventHandlerApi delete_event_handler DELETE /event_handlers/{handler_id} Delete Event Handler. EventHandlerApi delete_ignore_event_handler DELETE /event_handlers/{handler_id}/subscribers/{imsi}/ignore Delete Ignore Event Handler. EventHandlerApi get_event_handler GET /event_handlers/{handler_id} Get Event Handler. EventHandlerApi list_event_handlers GET /event_handlers List Event Handlers. EventHandlerApi list_event_handlers_by_subscriber GET /event_handlers/subscribers/{imsi} List Event Handlers related to Subscriber. EventHandlerApi set_ignore_event_handler POST /event_handlers/{handler_id}/subscribers/{imsi}/ignore Ignore Event Handler. EventHandlerApi update_event_handler PUT /event_handlers/{handler_id} Update Event Handler. FileEntryApi delete_directory DELETE /files/{scope}/{path}/ Delete specified directory in the scope. FileEntryApi delete_file DELETE /files/{scope}/{path} Delete specified file in the scope. FileEntryApi find_files GET /files Find files with prefix query parameter in the scope FileEntryApi get_file GET /files/{scope}/{path} Download file specified by the path and the scope FileEntryApi get_file_metadata HEAD /files/{scope}/{path} Get the metadata of the file specified by the path and the scope FileEntryApi list_files GET /files/{scope}/{path}/ List files and directories on the path in the scope FileEntryApi put_file PUT /files/{scope}/{path} Upload file to the path in the scope. FilesApi get_exported_file GET /files/exported/{exported_file_id} Get an exported file. GadgetApi delete_gadget_tag DELETE /gadgets/{product_id}/{serial_number}/tags/{tag_name} Delete gadget Tag. GadgetApi disable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/disable_termination Disable Termination of gadget. GadgetApi enable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/enable_termination Enable Termination of gadget. GadgetApi get_gadget GET /gadgets/{product_id}/{serial_number} Get gadget. GadgetApi list_gadgets GET /gadgets List gadgets. GadgetApi put_gadget_tags PUT /gadgets/{product_id}/{serial_number}/tags Bulk Insert or Update gadget Tags. GadgetApi register_gadget POST /gadgets/{product_id}/{serial_number}/register Register a gadget. GadgetApi set_gadget_group POST /gadgets/{product_id}/{serial_number}/set_group Set Group of gadget. GadgetApi terminate_gadget POST /gadgets/{product_id}/{serial_number}/terminate Terminate gadget. GadgetApi unset_gadget_group POST /gadgets/{product_id}/{serial_number}/unset_group Unset Group of gadget. GroupApi create_group POST /groups Create Group. GroupApi delete_configuration_namespace DELETE /groups/{group_id}/configuration/{namespace} Delete Group Configuration Namespace. GroupApi delete_configuration_parameter DELETE /groups/{group_id}/configuration/{namespace}/{name} Delete Group Configuration Parameters. GroupApi delete_group DELETE /groups/{group_id} Delete Group. GroupApi delete_group_tag DELETE /groups/{group_id}/tags/{tag_name} Delete Group Tag. GroupApi get_group GET /groups/{group_id} Get Group. GroupApi list_groups GET /groups List Groups. GroupApi list_subscribers_in_group GET /groups/{group_id}/subscribers List Subscribers in a group. GroupApi put_configuration_parameters PUT /groups/{group_id}/configuration/{namespace} Update Group Configuration Parameters. GroupApi put_group_tags PUT /groups/{group_id}/tags Update Group Tags. LagoonApi create_lagoon_user POST /lagoon/users Create a SORACOM Lagoon user LagoonApi delete_lagoon_user DELETE /lagoon/users/{lagoon_user_id} Delete a SORACOM Lagoon user LagoonApi get_image_link GET /lagoon/image/link Get a custom icon image link of SORACOM Lagoon LagoonApi get_lagoon_migration_info GET /lagoon/migration Get the version migration information for SORACOM Lagoon LagoonApi initialize_lagoon_dashboard_permissions POST /lagoon/dashboards/{dashboard_id}/permissions/init Update permissions to the initial state for a dashboard of SORACOM Lagoon LagoonApi list_lagoon_dashboards_permissions GET /lagoon/dashboards/permissions List permissions for all SORACOM Lagoon dashboards LagoonApi list_lagoon_license_pack_status GET /lagoon/license_packs Get the status of active SORACOM Lagoon license packs LagoonApi list_lagoon_users GET /lagoon/users List SORACOM Lagoon users that belong to operator LagoonApi migrate_lagoon POST /lagoon/migration Migrate SORACOM Lagoon version LagoonApi register_lagoon POST /lagoon/register Register (activate) SORACOM Lagoon LagoonApi terminate_lagoon POST /lagoon/terminate Terminate (deactivate) SORACOM Lagoon LagoonApi update_lagoon_dashboard_permissions PUT /lagoon/dashboards/{dashboard_id}/permissions Update permissions for a dashboard of SORACOM Lagoon LagoonApi update_lagoon_license_pack PUT /lagoon/license_packs Update the quantities for license packs of SORACOM Lagoon LagoonApi update_lagoon_plan PUT /lagoon/plan Update the plan of SORACOM Lagoon LagoonApi update_lagoon_user_email PUT /lagoon/users/{lagoon_user_id}/email Update email address of a SORACOM Lagoon user LagoonApi update_lagoon_user_password PUT /lagoon/users/{lagoon_user_id}/password Update password of a SORACOM Lagoon user LagoonApi update_lagoon_user_permission PUT /lagoon/users/{lagoon_user_id}/permission Update permission of a SORACOM Lagoon user LogApi get_logs GET /logs Get Logs. LoraDeviceApi delete_lora_device_tag DELETE /lora_devices/{device_id}/tags/{tag_name} Delete LoRa device Tag. LoraDeviceApi disable_termination_on_lora_device POST /lora_devices/{device_id}/disable_termination Disable Termination of LoRa device. LoraDeviceApi enable_termination_on_lora_device POST /lora_devices/{device_id}/enable_termination Enable Termination of LoRa device. LoraDeviceApi get_data_from_lora_device GET /lora_devices/{device_id}/data Get data sent from a LoRa device. LoraDeviceApi get_lora_device GET /lora_devices/{device_id} Get LoRa device. LoraDeviceApi list_lora_devices GET /lora_devices List LoRa devices. LoraDeviceApi put_lora_device_tags PUT /lora_devices/{device_id}/tags Bulk Insert or Update LoRa device Tags. LoraDeviceApi register_lora_device POST /lora_devices/{device_id}/register Register LoRa device. LoraDeviceApi send_data_to_lora_device POST /lora_devices/{device_id}/data Send data to a LoRa device. LoraDeviceApi set_lora_device_group POST /lora_devices/{device_id}/set_group Set Group of LoRa device. LoraDeviceApi terminate_lora_device POST /lora_devices/{device_id}/terminate Terminate LoRa device. LoraDeviceApi unset_lora_device_group POST /lora_devices/{device_id}/unset_group Unset Group of LoRa device. LoraGatewayApi delete_lora_gateway_tag DELETE /lora_gateways/{gateway_id}/tags/{tag_name} Delete LoRa gateway tag. LoraGatewayApi disable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/disable_termination Disable Termination of LoRa gateway. LoraGatewayApi enable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/enable_termination Enable Termination of LoRa gateway. LoraGatewayApi get_lora_gateway GET /lora_gateways/{gateway_id} Get LoRa gateway. LoraGatewayApi list_lora_gateways GET /lora_gateways List LoRa Gateways. LoraGatewayApi put_lora_gateway_tags PUT /lora_gateways/{gateway_id}/tags Bulk Insert or Update LoRa gateway Tags. LoraGatewayApi set_lora_network_set POST /lora_gateways/{gateway_id}/set_network_set Set Network Set ID of LoRa gateway. LoraGatewayApi terminate_lora_gateway POST /lora_gateways/{gateway_id}/terminate Terminate LoRa gateway. LoraGatewayApi unset_lora_network_set POST /lora_gateways/{gateway_id}/unset_network_set Unset Network Set ID of LoRa gateway. LoraNetworkSetApi add_permission_to_lora_network_set POST /lora_network_sets/{ns_id}/add_permission Adds permission to a LoRa network set. LoraNetworkSetApi create_lora_network_set POST /lora_network_sets Create a LoRa network set. LoraNetworkSetApi delete_lora_network_set DELETE /lora_network_sets/{ns_id} Delete LoRa network set. LoraNetworkSetApi delete_lora_network_set_tag DELETE /lora_network_sets/{ns_id}/tags/{tag_name} Delete LoRa network set tag. LoraNetworkSetApi get_lora_network_set GET /lora_network_sets/{ns_id} Get LoRa network set. LoraNetworkSetApi list_gateways_in_lora_network_set GET /lora_network_sets/{ns_id}/gateways List LoRa Gateways in a Network Set. LoraNetworkSetApi list_lora_network_sets GET /lora_network_sets List LoRa Network Sets. LoraNetworkSetApi put_lora_network_set_tags PUT /lora_network_sets/{ns_id}/tags Bulk Insert or Update LoRa network set tags. LoraNetworkSetApi revoke_permission_from_lora_network_set POST /lora_network_sets/{ns_id}/revoke_permission Revokes a permission from a LoRa network set. OperatorApi add_coverage_type POST /operators/{operator_id}/coverage_type/{coverage_type} Add coverage type. OperatorApi add_operator_contract POST /operators/{operator_id}/contracts Add Operator Contract. OperatorApi create_company_information POST /operators/{operator_id}/company_information Create company information. OperatorApi create_individual_information POST /operators/{operator_id}/individual_information Create individual information. OperatorApi create_operator POST /operators Create Operator. OperatorApi delete_operator_auth_key DELETE /operators/{operator_id}/auth_keys/{auth_key_id} Delete Operator AuthKey. OperatorApi delete_operator_contract DELETE /operators/{operator_id}/contracts/{contract_name} Delete Operator Contract. OperatorApi enable_mfa POST /operators/{operator_id}/mfa Enable Operator's MFA. OperatorApi generate_auth_token POST /operators/{operator_id}/token Generate Authentication Token. OperatorApi generate_operator_auth_key POST /operators/{operator_id}/auth_keys Generate Operator AuthKey. OperatorApi generate_support_token POST /operators/{operator_id}/support/token Generate Token for Support Console. OperatorApi get_company_information GET /operators/{operator_id}/company_information Get company information. OperatorApi get_individual_information GET /operators/{operator_id}/individual_information Get individual information. OperatorApi get_mfa_status GET /operators/{operator_id}/mfa Get Operator's MFA Status. OperatorApi get_operator GET /operators/{operator_id} Get Operator. OperatorApi issue_mfa_revoking_token POST /operators/mfa_revoke_token/issue Issue Operator's MFA Revoke Token. OperatorApi list_operator_auth_keys GET /operators/{operator_id}/auth_keys List Operator AuthKeys. OperatorApi revoke_mfa DELETE /operators/{operator_id}/mfa Revoke Operator's MFA. OperatorApi update_company_information PUT /operators/{operator_id}/company_information Update company information. OperatorApi update_individual_information PUT /operators/{operator_id}/individual_information Update individual information. OperatorApi update_operator_password POST /operators/{operator_id}/password Update Operator Password. OperatorApi verify_mfa POST /operators/{operator_id}/mfa/verify Verify Operator's MFA OTP Code. OperatorApi verify_mfa_revoking_token POST /operators/mfa_revoke_token/verify Verify Operator's MFA revoke token. OperatorApi verify_operator POST /operators/verify Verify Operator. OrderApi cancel_order PUT /orders/{order_id}/cancel Cancel order. OrderApi confirm_coupon_order PUT /coupons/{order_id}/confirm Confirm coupon order. OrderApi confirm_order PUT /orders/{order_id}/confirm Confirm order. OrderApi confirm_volume_discount_order PUT /volume_discounts/{order_id}/confirm Confirm long term discount order. OrderApi create_coupon_quotation POST /coupons Create coupon quotation. OrderApi create_quotation POST /orders Create Quotation. OrderApi create_volume_discount_quotation POST /volume_discounts Create long term discount quotation. OrderApi get_order GET /orders/{order_id} Get confirmed order. OrderApi list_available_discounts GET /volume_discounts/available_discounts List available long term discounts. OrderApi list_ordered_subscribers GET /orders/{order_id}/subscribers List ordered subscribers. OrderApi list_orders GET /orders List confirmed orders. OrderApi list_products GET /products List products. OrderApi register_ordered_sim POST /orders/{order_id}/subscribers/register Register subscribers for operator. PaymentApi activate_payment_method POST /payment_methods/current/activate Activate payment method. PaymentApi export_payment_statement POST /payment_statements/{payment_statement_id}/export Export payment statement. PaymentApi get_payer_information GET /payment_statements/payer_information Export payer information. PaymentApi get_payment_method GET /payment_methods/current Get payment method information. PaymentApi get_payment_transaction GET /payment_history/transactions/{payment_transaction_id} Get payment transaction result. PaymentApi get_volume_discount GET /volume_discounts/{contract_id} Get long term discount. PaymentApi list_coupons GET /coupons List coupons. PaymentApi list_payment_statements GET /payment_statements List payment statements. PaymentApi list_volume_discounts GET /volume_discounts List long term discounts. PaymentApi register_coupon POST /coupons/{coupon_code}/register Register Coupon. PaymentApi register_payer_information POST /payment_statements/payer_information Register payer information. PortMappingApi create_port_mapping POST /port_mappings Create Port Mapping. PortMappingApi delete_port_mapping DELETE /port_mappings/{ip_address}/{port} Delete PortMapping. PortMappingApi list_port_mappings GET /port_mappings List Port Mapping Entries. PortMappingApi list_port_mappings_for_subscriber GET /port_mappings/subscribers/{imsi} Get Port Mapping entries for a subscriber. QueryApi search_devices GET /query/devices Search SORACOM Inventory devices by query QueryApi search_sigfox_devices GET /query/sigfox_devices Search Sigfox devices by query QueryApi search_sims GET /query/sims Search SIMs by query terms QueryApi search_subscriber_traffic_volume_ranking GET /query/subscribers/traffic_volume/ranking Search traffic volume ranking of subscribers QueryApi search_subscribers GET /query/subscribers (DEPRECATED) Search subscribers by query terms RoleApi attach_role POST /operators/{operator_id}/users/{user_name}/roles Attach Role to User. RoleApi create_role POST /operators/{operator_id}/roles/{role_id} Create Role. RoleApi delete_role DELETE /operators/{operator_id}/roles/{role_id} Delete Role. RoleApi detach_role DELETE /operators/{operator_id}/users/{user_name}/roles/{role_id} Detach Role from User. RoleApi get_role GET /operators/{operator_id}/roles/{role_id} Get Role. RoleApi list_role_attached_users GET /operators/{operator_id}/roles/{role_id}/users List Role Attached Users. RoleApi list_roles GET /operators/{operator_id}/roles List Roles. RoleApi list_user_roles GET /operators/{operator_id}/users/{user_name}/roles List User Roles. RoleApi update_role PUT /operators/{operator_id}/roles/{role_id} Update Role. ShippingAddressApi create_shipping_address POST /operators/{operator_id}/shipping_addresses Create shipping address. ShippingAddressApi delete_shipping_address DELETE /operators/{operator_id}/shipping_addresses/{shipping_address_id} Delete shipping address. ShippingAddressApi get_shipping_address GET /operators/{operator_id}/shipping_addresses/{shipping_address_id} Get shipping address. ShippingAddressApi list_shipping_addresses GET /operators/{operator_id}/shipping_addresses List shipping addresses. ShippingAddressApi update_shipping_address PUT /operators/{operator_id}/shipping_addresses/{shipping_address_id} Update shipping address. SigfoxDeviceApi delete_sigfox_device_tag DELETE /sigfox_devices/{device_id}/tags/{tag_name} Delete Sigfox device Tag. SigfoxDeviceApi disable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/disable_termination Disable Termination of Sigfox device. SigfoxDeviceApi enable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/enable_termination Enable Termination of Sigfox device. SigfoxDeviceApi get_data_from_sigfox_device GET /sigfox_devices/{device_id}/data Get data sent from a Sigfox device. SigfoxDeviceApi get_sigfox_device GET /sigfox_devices/{device_id} Get Sigfox device. SigfoxDeviceApi list_sigfox_devices GET /sigfox_devices List Sigfox devices. SigfoxDeviceApi put_sigfox_device_tags PUT /sigfox_devices/{device_id}/tags Bulk Insert or Update Sigfox device Tags. SigfoxDeviceApi register_sigfox_device POST /sigfox_devices/{device_id}/register Register a Sigfox device. SigfoxDeviceApi send_data_to_sigfox_device POST /sigfox_devices/{device_id}/data Send data to a Sigfox device. SigfoxDeviceApi set_sigfox_device_group POST /sigfox_devices/{device_id}/set_group Set Group of Sigfox device. SigfoxDeviceApi terminate_sigfox_device POST /sigfox_devices/{device_id}/terminate Terminate Sigfox device. SigfoxDeviceApi unset_sigfox_device_group POST /sigfox_devices/{device_id}/unset_group Unset Group of Sigfox device. SimApi activate_sim POST /sims/{sim_id}/activate Activate SIM. SimApi add_subscription POST /sims/{sim_id}/profiles/{iccid}/add_subscription Adds a new subscription container to a SIM profile SimApi attach_arc_sim_credentials POST /sims/{sim_id}/credentials/arc (DEPRECATED) Attach the credentials for Arc to a SIM. SimApi cancel_subscription_container_download POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download Cancel subscription download to subscription container SimApi create_arc_session POST /sims/{sim_id}/sessions/arc Re-create an Arc session. SimApi create_sim POST /sims Create a SIM. SimApi create_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions Create Packet Capture Session SimApi deactivate_sim POST /sims/{sim_id}/deactivate Deactivate SIM. SimApi delete_sim_packet_capture_session DELETE /sims/{sim_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session SimApi delete_sim_session POST /sims/{sim_id}/delete_session Delete Session SimApi delete_sim_tag DELETE /sims/{sim_id}/tags/{tag_name} Delete SIM tag. SimApi delete_subscription_container_country_mapping_entry DELETE /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc} Delete subscription container mapping entries SimApi disable_sim_termination POST /sims/{sim_id}/disable_termination Disable termination of the SIM. SimApi downlink_ping_to_user_equipment POST /sims/{sim_id}/downlink/ping Send ping requests to a SIM. SimApi enable_sim_termination POST /sims/{sim_id}/enable_termination Enable termination of the SIM. SimApi enable_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscription_containers/{containerId}/enable Enables a subscription container. SimApi get_data_from_sim GET /sims/{sim_id}/data Get data sent from a SIM. SimApi get_sim GET /sims/{sim_id} Get a SIM identified by sim_id SimApi get_sim_packet_capture_session GET /sims/{sim_id}/packet_capture_sessions/{session_id} Get Packet Capture Session SimApi list_sim_packet_capture_sessions GET /sims/{sim_id}/packet_capture_sessions List Packet Capture Sessions SimApi list_sim_session_events GET /sims/{sim_id}/events/sessions List Session Events. SimApi list_sims GET /sims List SIMs. SimApi list_subscription_containers GET /sims/{sim_id}/profiles/{iccid}/subscription_containers Get subscription container status. SimApi put_sim_tags PUT /sims/{sim_id}/tags Bulk insert or update SIM tags. SimApi put_subscription_container_country_mapping_entries PUT /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping Updates subscription container country mapping entries. SimApi register_sim POST /sims/{sim_id}/register Register SIM. SimApi remove_arc_sim_credentials DELETE /sims/{sim_id}/credentials/arc (DEPRECATED) Remove the credentials for Arc from a SIM. SimApi renew_arc_sim_credentials PUT /sims/{sim_id}/credentials/arc Renew the credentials for Arc to a SIM. SimApi report_sim_local_info POST /sims/{sim_id}/report_local_info Triggers SIM to report SIM local info. SimApi send_sms_to_sim POST /sims/{sim_id}/send_sms Send SMS to SIM SimApi set_sim_expiry_time POST /sims/{sim_id}/set_expiry_time Update expiry time of SIM. SimApi set_sim_group POST /sims/{sim_id}/set_group Set Group id of a SIM. SimApi set_sim_imei_lock POST /sims/{sim_id}/set_imei_lock Set IMEI lock configuration for the SIM. SimApi set_sim_to_standby POST /sims/{sim_id}/set_to_standby Set SIM to standby mode. SimApi stop_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions/{session_id}/stop Stop SIM Packet Capture Session SimApi suspend_sim POST /sims/{sim_id}/suspend Suspend SIM. SimApi terminate_sim POST /sims/{sim_id}/terminate Terminate SIM. SimApi terminate_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate Terminate subscription container SimApi unset_sim_expiry_time POST /sims/{sim_id}/unset_expiry_time Delete expiry time of the SIM. SimApi unset_sim_group POST /sims/{sim_id}/unset_group Unset Group to SIM. SimApi unset_sim_imei_lock POST /sims/{sim_id}/unset_imei_lock Unset IMEI lock configuration for SIM. SimApi update_sim_speed_class POST /sims/{sim_id}/update_speed_class Update SIM speed class. SoraletApi create_soralet POST /soralets Create a Soralet. SoraletApi delete_soralet DELETE /soralets/{soralet_id} Delete Soralet. SoraletApi delete_soralet_version DELETE /soralets/{soralet_id}/versions/{version} Delete a Soralet version. SoraletApi get_soralet GET /soralets/{soralet_id} Get a Soralet. SoraletApi get_soralet_logs GET /soralets/{soralet_id}/logs Get log messages from Soralet. SoraletApi list_soralet_versions GET /soralets/{soralet_id}/versions List versions of Soralet. SoraletApi list_soralets GET /soralets List Soralets. SoraletApi test_soralet POST /soralets/{soralet_id}/test Execute Soralet with arguments. SoraletApi upload_soralet_code POST /soralets/{soralet_id}/versions Upload code and create a new version. StatsApi export_air_stats POST /stats/air/operators/{operator_id}/export Export Air Usage Report of All Subscribers. StatsApi export_beam_stats POST /stats/beam/operators/{operator_id}/export Export Beam Usage Report of All Subscribers. StatsApi get_air_stats GET /stats/air/subscribers/{imsi} Get Air Usage Report of Subscriber. StatsApi get_air_stats_of_sim GET /stats/air/sims/{simId} Get Air Usage Report of SIM. StatsApi get_beam_stats GET /stats/beam/subscribers/{imsi} Get Beam Usage Report of Subscriber. StatsApi get_harvest_exported_data_stats GET /stats/harvest/operators/{operator_id} Get 'Harvest usage report' for the specified operator. StatsApi get_napter_audit_logs_exported_data_stats GET /stats/napter/audit_logs Get Napter audit logs' monthly exported data stats SubscriberApi activate_subscriber POST /subscribers/{imsi}/activate Activate Subscriber. SubscriberApi deactivate_subscriber POST /subscribers/{imsi}/deactivate Deactivate Subscriber. SubscriberApi delete_subscriber_session POST /subscribers/{imsi}/delete_session Delete Session SubscriberApi delete_subscriber_tag DELETE /subscribers/{imsi}/tags/{tag_name} Delete Subscriber Tag. SubscriberApi delete_subscriber_transfer_token DELETE /subscribers/transfer_token/{token} Delete Subscribers Transfer Token. SubscriberApi disable_termination POST /subscribers/{imsi}/disable_termination Disable Termination of Subscriber. SubscriberApi enable_termination POST /subscribers/{imsi}/enable_termination Enable Termination of Subscriber. SubscriberApi export_subscribers POST /subscribers/export Export all subscribers. SubscriberApi get_data_from_subscriber GET /subscribers/{imsi}/data Get data sent from a subscriber. SubscriberApi get_subscriber GET /subscribers/{imsi} Get Subscriber. SubscriberApi issue_subscriber_transfer_token POST /subscribers/transfer_token/issue Issue Subscribers Transfer Token. SubscriberApi list_session_events GET /subscribers/{imsi}/events/sessions List Session Events. SubscriberApi list_subscribers GET /subscribers List Subscribers. SubscriberApi put_bundles PUT /subscribers/{imsi}/bundles Set Bundles to Subscriber. SubscriberApi put_subscriber_tags PUT /subscribers/{imsi}/tags Bulk Insert or Update Subscriber Tags. SubscriberApi register_subscriber POST /subscribers/{imsi}/register Register Subscriber. SubscriberApi report_local_info POST /subscribers/{imsi}/report_local_info Triggers Subscriber to report SIM local info. SubscriberApi send_sms POST /subscribers/{imsi}/send_sms Send SMS to Subscriber SubscriberApi send_sms_by_msisdn POST /subscribers/msisdn/{msisdn}/send_sms Send SMS to Subscriber by MSISDN SubscriberApi send_subscriber_downlink_ping POST /subscribers/{imsi}/downlink/ping Send ping requests to a subscriber. SubscriberApi set_expiry_time POST /subscribers/{imsi}/set_expiry_time Update Expiry Time of Subscriber. SubscriberApi set_group POST /subscribers/{imsi}/set_group Set Group to Subscriber. SubscriberApi set_imei_lock POST /subscribers/{imsi}/set_imei_lock Set IMEI lock configuration for Subscriber. SubscriberApi set_subscriber_to_standby POST /subscribers/{imsi}/set_to_standby Set Subscriber to standby mode. SubscriberApi suspend_subscriber POST /subscribers/{imsi}/suspend Suspend Subscriber. SubscriberApi terminate_subscriber POST /subscribers/{imsi}/terminate Terminate Subscriber. SubscriberApi unset_expiry_time POST /subscribers/{imsi}/unset_expiry_time Delete Expiry Time of Subscriber. SubscriberApi unset_group POST /subscribers/{imsi}/unset_group Unset Group to Subscriber. SubscriberApi unset_imei_lock POST /subscribers/{imsi}/unset_imei_lock Unset IMEI lock configuration for Subscriber. SubscriberApi update_speed_class POST /subscribers/{imsi}/update_speed_class Update Subscriber speed class. SubscriberApi verify_subscriber_transfer_token POST /subscribers/transfer_token/verify Verify Subscriber Transfer Token. SystemNotificationApi delete_system_notification DELETE /operators/{operator_id}/system_notifications/{type} Delete system notification SystemNotificationApi get_system_notification GET /operators/{operator_id}/system_notifications/{type} Get system notification SystemNotificationApi list_system_notifications GET /operators/{operator_id}/system_notifications List system notifications SystemNotificationApi set_system_notification POST /operators/{operator_id}/system_notifications/{type} Set system notification UserApi create_user POST /operators/{operator_id}/users/{user_name} Create User. UserApi create_user_password POST /operators/{operator_id}/users/{user_name}/password Create Password. UserApi delete_user DELETE /operators/{operator_id}/users/{user_name} Delete User. UserApi delete_user_auth_key DELETE /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Delete User AuthKey. UserApi delete_user_password DELETE /operators/{operator_id}/users/{user_name}/password Delete Password. UserApi enable_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa Enable SAM user's MFA UserApi generate_user_auth_key POST /operators/{operator_id}/users/{user_name}/auth_keys Generate AuthKey. UserApi get_default_permissions GET /operators/{operator_id}/users/default_permissions Get the default permissions UserApi get_user GET /operators/{operator_id}/users/{user_name} Get User. UserApi get_user_auth_key GET /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Get AuthKey. UserApi get_user_mfa_status GET /operators/{operator_id}/users/{user_name}/mfa Get SAM user's MFA status UserApi get_user_permission GET /operators/{operator_id}/users/{user_name}/permission Get User Permission. UserApi has_user_password GET /operators/{operator_id}/users/{user_name}/password Has User Password. UserApi list_user_auth_keys GET /operators/{operator_id}/users/{user_name}/auth_keys List User AuthKeys. UserApi list_users GET /operators/{operator_id}/users List Users. UserApi revoke_user_mfa DELETE /operators/{operator_id}/users/{user_name}/mfa Revoke SAM user's MFA UserApi update_default_permissions PUT /operators/{operator_id}/users/default_permissions Update the default permissions UserApi update_user PUT /operators/{operator_id}/users/{user_name} Update User. UserApi update_user_password PUT /operators/{operator_id}/users/{user_name}/password Update Password. UserApi update_user_permission PUT /operators/{operator_id}/users/{user_name}/permission Update Permission to User. UserApi verify_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa/verify Verify SAM user's MFA OTP code when MFA activation phase VirtualPrivateGatewayApi close_gate POST /virtual_private_gateways/{vpg_id}/gate/close Close SORACOM Gate. VirtualPrivateGatewayApi create_mirroring_peer POST /virtual_private_gateways/{vpg_id}/junction/mirroring/peers Add node in the list of Junction mirroring peers VirtualPrivateGatewayApi create_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions Create Packet Capture Session VirtualPrivateGatewayApi create_virtual_private_gateway POST /virtual_private_gateways Create Virtual Private Gateway. VirtualPrivateGatewayApi create_vpc_peering_connection POST /virtual_private_gateways/{vpg_id}/vpc_peering_connections Create VPC Peering Connection VirtualPrivateGatewayApi delete_mirroring_peer DELETE /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Remove peer from the list of Junction mirroring peers VirtualPrivateGatewayApi delete_packet_capture_session DELETE /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session VirtualPrivateGatewayApi delete_virtual_private_gateway_ip_address_map_entry DELETE /virtual_private_gateways/{vpg_id}/ip_address_map/{key} Delete VPG IP address map entry VirtualPrivateGatewayApi delete_vpc_peering_connection DELETE /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id} Delete VPC Peering Connection. VirtualPrivateGatewayApi get_packet_capture_session GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Get Packet Capture Session VirtualPrivateGatewayApi get_virtual_private_gateway GET /virtual_private_gateways/{vpg_id} Get Virtual Private Gateway. VirtualPrivateGatewayApi list_gate_peers GET /virtual_private_gateways/{vpg_id}/gate/peers List VPG Gate peers VirtualPrivateGatewayApi list_packet_capture_sessions GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions List Packet Capture Sessions VirtualPrivateGatewayApi list_virtual_private_gateway_ip_address_map_entries GET /virtual_private_gateways/{vpg_id}/ip_address_map List VPG IP address map entries VirtualPrivateGatewayApi list_virtual_private_gateways GET /virtual_private_gateways List Virtual Private Gateways. VirtualPrivateGatewayApi open_gate POST /virtual_private_gateways/{vpg_id}/gate/open Open SORACOM Gate. VirtualPrivateGatewayApi put_virtual_private_gateway_ip_address_map_entry POST /virtual_private_gateways/{vpg_id}/ip_address_map Put an entry in VPG IP address map VirtualPrivateGatewayApi register_gate_peer POST /virtual_private_gateways/{vpg_id}/gate/peers Register VPG Gate peer VirtualPrivateGatewayApi set_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_inspection Set configuration for Junction inspection feature VirtualPrivateGatewayApi set_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_redirection Set configuration for Junction redirection feature VirtualPrivateGatewayApi set_routing_filter POST /virtual_private_gateways/{vpg_id}/set_routing_filter Sets Virtual Private Gateway outbound routing filter. VirtualPrivateGatewayApi stop_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop Stop Packet Capture Session VirtualPrivateGatewayApi terminate_virtual_private_gateway POST /virtual_private_gateways/{vpg_id}/terminate Terminate Virtual Private Gateway. VirtualPrivateGatewayApi unregister_gate_peer DELETE /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address} Unregister VPG gate peer VirtualPrivateGatewayApi unset_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_inspection Unset configuration for Junction inspection feature VirtualPrivateGatewayApi unset_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_redirection Unset configuration for Junction redirection feature VirtualPrivateGatewayApi update_mirroring_peer PUT /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Update a Junction mirroring peer Documentation For Models \u00b6 APIAuditLogEntry APICallError APICallErrorMessage ActionConfig ActionConfigProperty AirStatsResponse ArcCredentialAttachRequest ArcCredentialAttachResponse ArcCredentialRenewRequest ArcCredentialRenewResponse ArcSessionCreateResponse ArcSessionStatus AttachRoleRequest AttributeUpdate AuthKeyResponse AuthRequest AuthResponse AvailableLongTermDiscountModel AvailableLongTermDiscountResponse BeamStatsResponse Capabilities Cell CellIdentifier CellLocation CompanyInformationModel ContractUpdatedResponse ContractUpdatingRequest CouponResponse CreateAndUpdateCredentialsModel CreateEstimatedCouponRequest CreateEstimatedOrderRequest CreateEstimatedVolumeDiscountRequest CreateEventHandlerRequest CreateGroupRequest CreateOrUpdateRoleRequest CreatePortMappingRequest CreateRoleResponse CreateSimRequest CreateSoraletRequest CreateUserPasswordRequest CreateUserRequest CreateVirtualPrivateGatewayRequest CreateVpcPeeringConnectionRequest CredentialsModel CreditCard DailyBill DailyBillResponse DataEntry DataSourceResourceMetadata DataTrafficStats Device DeviceObjectModel DiagnosticRequest DiagnosticResponse DownlinkPingRequest DownlinkPingResponse EmailsModel EnableMFAOTPResponse Error EstimatedCouponModel EstimatedOrderItemModel EstimatedOrderModel EstimatedVolumeDiscountModel EventHandlerModel ExecuteSoraletRequest ExecuteSoraletResponse ExpiryTime ExportRequest FileEntry FileExportResponse FunnelAWSFirehoseDestination FunnelAWSIoTDestination FunnelAWSKinesisDestination FunnelAcroquestTorrentioDestination FunnelAppressoDataSpiderDestination FunnelAzureEventHubDestination FunnelBrainsTechImpulseDestination FunnelConfiguration FunnelContentType FunnelDestination FunnelEsrijArcgisOnlineDestination FunnelFusicMockmockDatarecorderDestination FunnelGooglePubSubDestination FunnelInfoteriaPlatioDestination FunnelKiiThingifDestination FunnelLandlogDestination FunnelOptimCloudiotosDestination FunnelSensorCorpusDestination FunnelTeradataIntellicloudDestination FunnelWingarcMotionboardDestination FunnelYaskawaMmcloudDestination Gadget GadgetRegistrationRequest GatePeer GenerateOperatorsAuthKeyResponse GenerateTokenRequest GenerateTokenResponse GenerateUserAuthKeyResponse GetBillingHistoryResponse GetDefaultPermissionsResponse GetExportedFileResponse GetLatestBill GetOperatorResponse GetOrderResponse GetPaymentMethodResult GetPaymentTransactionResult GetShippingAddressResponse GetUserPasswordResponse GetUserPermissionResponse GetVolumeDiscountResponse GlobalSimAppletPLMNRecord Group GroupConfigurationUpdateRequest HarvestExportedDataStatsResponse ImeiLock IndividualInformationModel InlineObject InlineObject1 InlineObject2 InlineObject3 Insight IpAddressMapEntry IssueAddEmailTokenRequest IssuePasswordResetTokenRequest IssueSubscriberTransferTokenRequest IssueSubscriberTransferTokenResponse JunctionInspectionConfiguration JunctionMirroringConfiguration JunctionMirroringPeer JunctionRedirectionConfiguration LagoonDashboardPermissionsResponse LagoonDashboardPermissionsResponsePermissions LagoonDashboardPermissionsUpdatingRequest LagoonDashboardPermissionsUpdatingRequestPermissions LagoonLicensePackStatusResponse LagoonLicensePacksUpdatingRequest LagoonLicensePacksUpdatingRequestLicensePackQuantities LagoonMigrationFromClassicRequest LagoonPlanChangingRequest LagoonRegistrationRequest LagoonRegistrationResponse LagoonUser LagoonUserCreationRequest LagoonUserCreationResponse LagoonUserEmailUpdatingRequest LagoonUserPasswordUpdatingRequest LagoonUserPermissionUpdatingRequest LastSeen ListCouponResponse ListOrderResponse ListOrderedSubscriberResponse ListPaymentStatementResponse ListProductResponse ListRolesResponse ListShippingAddressResponse ListVolumeDiscountResponse LogEntry LoraData LoraDevice LoraGateway LoraNetworkSet MFAAuthenticationRequest MFAIssueRevokingTokenRequest MFARevokingTokenVerifyRequest MFAStatusOfUseResponse MappingEntries MonthlyBill NapterAuditLogDirection NapterAuditLogEntry NapterAuditLogsExportedDataStatsResponse ObjectInstance OpenGateRequest OperatorMFAVerifyingResponse OrderItemModel OrderedSubscriber PacketCaptureSession PacketCaptureSessionRequest PaymentAmount PaymentDescription PaymentStatementResponse Placement PortMapping PortMappingDestination PortMappingSource PreviousSessionStatus PriceByQuantity ProductModel PutIpAddressMapEntryRequest ReferenceUrl RegisterGatePeerRequest RegisterLoraDeviceRequest RegisterOperatorsRequest RegisterPayerInformationModel RegisterSimRequest RegisterSubscribersRequest ResourceInstance RoleResponse RoutingFilterEntry RuleConfig RuleConfigProperty SessionEvent SessionStatus SetDeviceObjectModelScopeRequest SetGroupRequest SetImeiLockRequest SetNetworkSetRequest SetSystemNotificationsRequest SetUserPermissionRequest ShippingAddressModel ShippingCostModel SigfoxData SigfoxDevice SigfoxRegistrationRequest Sim SimProfile SimplifiedSubscriber SmsForwardingReport SmsForwardingRequest SoracomBeamStats Soralet SoraletDataSource SoraletLog SoraletVersion Subscriber SubscriptionContainer SubscriptionContainerStatus SubscriptionContainerStatusCountryMapping SubscriptionContainerStatusMappingRecord SupportTokenResponse SystemNotificationsModel TagSet TagUpdateRequest TrafficVolumeRanking UpdateDefaultPermissionsRequest UpdateEventHandlerRequest UpdatePasswordRequest UpdatePermissionRequest UpdateSpeedClassRequest UpdateUserRequest UserDetailResponse VerifyAddEmailTokenRequest VerifyOperatorsRequest VerifyPasswordResetTokenRequest VerifySubscriberTransferTokenRequest VerifySubscriberTransferTokenResponse VirtualPrivateGateway VolumeDiscountModel VpcPeeringConnection Documentation For Authorization \u00b6 api_key \u00b6 Type : API key API key parameter name : X-Soracom-API-Key Location : HTTP header api_token \u00b6 Type : API key API key parameter name : X-Soracom-Token Location : HTTP header Author \u00b6 Notes for Large OpenAPI documents \u00b6 If the OpenAPI document is large, imports in soracom_api.apis and soracom_api.models may fail with a RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions: Solution 1: Use specific imports for apis and models like: - from soracom_api.api.default_api import DefaultApi - from soracom_api.model.pet import Pet Solution 2: Before importing the package, adjust the maximum recursion limit as shown below: import sys sys.setrecursionlimit(1500) import soracom_api from soracom_api.apis import * from soracom_api.models import *","title":"SORACOM API"},{"location":"api/#soracom-api","text":"SORACOM API v1 This Python package is automatically generated by the OpenAPI Generator project: API version: VERSION_PLACEHOLDER Package version: 1.0.0 Build package: org.openapitools.codegen.languages.PythonClientCodegen","title":"soracom-api"},{"location":"api/#requirements","text":"Python >=3.6","title":"Requirements."},{"location":"api/#installation-usage","text":"","title":"Installation &amp; Usage"},{"location":"api/#pip-install","text":"If the python package is hosted on a repository, you can install directly using: pip install git+https://github.com/soracom-labs/openapi-client-python.git (you may need to run pip with root permission: sudo pip install git+https://github.com/soracom-labs/openapi-client-python.git ) Then import the package: import soracom_api","title":"pip install"},{"location":"api/#setuptools","text":"Install via Setuptools . python setup.py install --user (or sudo python setup.py install to install the package for all users) Then import the package: import soracom_api","title":"Setuptools"},{"location":"api/#getting-started","text":"Please follow the installation procedure and then run the following: import time import soracom_api from pprint import pprint from soracom_api.api import audit_log_api from soracom_api.model.api_audit_log_entry import APIAuditLogEntry from soracom_api.model.napter_audit_log_entry import NapterAuditLogEntry # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) api_kind = \"api_kind_example\" # str | Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). (optional) from_epoch_ms = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to_epoch_ms = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) try: # Retrieve audit logs for API calls api_response = api_instance.get_api_audit_logs(api_kind=api_kind, from_epoch_ms=from_epoch_ms, to_epoch_ms=to_epoch_ms, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_api_audit_logs: %s\\n\" % e)","title":"Getting Started"},{"location":"api/#documentation-for-api-endpoints","text":"All URIs are relative to https://api.soracom.io/v1 Class Method HTTP request Description AuditLogApi get_api_audit_logs GET /audit_logs/api Retrieve audit logs for API calls AuditLogApi get_napter_audit_logs GET /audit_logs/napter Retrieve audit logs for Napter AuthApi auth POST /auth Performs authentication to access to the SORACOM API. AuthApi issue_password_reset_token POST /auth/password_reset_token/issue Issues a password reset token for the operator. AuthApi verify_password_reset_token POST /auth/password_reset_token/verify Verifies the password reset token and updates password. BillingApi export_billing POST /bills/{yyyyMM}/export Output billing CSV file to S3. BillingApi export_latest_billing POST /bills/latest/export Export latest billing CSV file to S3. BillingApi get_billing GET /bills/{yyyyMM} Get bill. BillingApi get_billing_history GET /bills Get billing history. BillingApi get_billing_per_day GET /bills/{yyyyMM}/daily Get bill per day. BillingApi get_latest_billing GET /bills/latest Get latest bill. CellLocationApi batch_get_cell_locations POST /cell_locations List location information for multiple cell towers. CellLocationApi get_cell_location GET /cell_locations Get location information for a cell tower. CredentialApi create_credential POST /credentials/{credentials_id} Create a credential. CredentialApi delete_credential DELETE /credentials/{credentials_id} Delete a credential. CredentialApi list_credentials GET /credentials List of credentials. CredentialApi update_credential PUT /credentials/{credentials_id} Update a credential. DataEntryApi delete_data_entry DELETE /data/{resource_type}/{resource_id}/{time} Deletes a data entry DataEntryApi get_data_entries GET /data/{resource_type}/{resource_id} Get data sent from a resource. DataEntryApi get_data_entry GET /data/{resource_type}/{resource_id}/{time} Gets a data entry DataEntryApi list_data_source_resources GET /data/resources Get the list of data source resources DeviceApi create_device POST /devices Creates a new Device DeviceApi delete_device DELETE /devices/{device_id} Delete Device DeviceApi delete_device_tag DELETE /devices/{device_id}/tags/{tag_name} Delete device tag DeviceApi execute_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/execute Executes a resource of a device DeviceApi get_data_from_device GET /devices/{device_id}/data Get data sent from a device. DeviceApi get_device GET /devices/{device_id} Returns a Device identified by device ID DeviceApi list_devices GET /devices Returns a list of Devices DeviceApi observe_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/observe Triggers observation of the specified resource of a device DeviceApi observe_device_resources POST /devices/{device_id}/{object}/{instance}/observe Triggers observation of resources under an object instance of a device DeviceApi put_device_tags PUT /devices/{device_id}/tags Updates device tags DeviceApi read_device_resource GET /devices/{device_id}/{object}/{instance}/{resource} Get the specified resource of a device DeviceApi read_device_resources GET /devices/{device_id}/{object}/{instance} Get resources under an object instance of a device DeviceApi set_device_group POST /devices/{device_id}/set_group Lets a device join a group DeviceApi unobserve_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/unobserve Stops observation of a resource of a device DeviceApi unobserve_device_resources POST /devices/{device_id}/{object}/{instance}/unobserve Stops observation of resources under an object instance of a device DeviceApi unset_device_group POST /devices/{device_id}/unset_group Lets a device leave from a group DeviceApi write_device_resource PUT /devices/{device_id}/{object}/{instance}/{resource} Write value to a resource of a device DeviceObjectModelApi create_device_object_model POST /device_object_models Creates a new device object model DeviceObjectModelApi delete_device_object_model DELETE /device_object_models/{model_id} Deletes a device object model DeviceObjectModelApi get_device_object_model GET /device_object_models/{model_id} Gets a device object model DeviceObjectModelApi list_device_object_models GET /device_object_models Returns a list of device object models DeviceObjectModelApi set_device_object_model_scope POST /device_object_models/{model_id}/set_scope Sets scope for a device object model DeviceObjectModelApi update_device_object_model POST /device_object_models/{model_id} Updates a device object model DiagnosticApi get_diagnostic GET /diagnostics/{diagnostic_id} Get diagnostic DiagnosticApi send_diagnostic_request POST /diagnostics Send diagnostic request EmailApi delete_email DELETE /operators/{operator_id}/emails/{email_id} Delete email address EmailApi get_email GET /operators/{operator_id}/emails/{email_id} Get email address EmailApi issue_add_email_token POST /operators/add_email_token/issue Issue a token to add an email address EmailApi list_emails GET /operators/{operator_id}/emails List email addresses EmailApi verify_add_email_token POST /operators/add_email_token/verify Verify a token to add an email address EventHandlerApi create_event_handler POST /event_handlers Create Event Handler. EventHandlerApi delete_event_handler DELETE /event_handlers/{handler_id} Delete Event Handler. EventHandlerApi delete_ignore_event_handler DELETE /event_handlers/{handler_id}/subscribers/{imsi}/ignore Delete Ignore Event Handler. EventHandlerApi get_event_handler GET /event_handlers/{handler_id} Get Event Handler. EventHandlerApi list_event_handlers GET /event_handlers List Event Handlers. EventHandlerApi list_event_handlers_by_subscriber GET /event_handlers/subscribers/{imsi} List Event Handlers related to Subscriber. EventHandlerApi set_ignore_event_handler POST /event_handlers/{handler_id}/subscribers/{imsi}/ignore Ignore Event Handler. EventHandlerApi update_event_handler PUT /event_handlers/{handler_id} Update Event Handler. FileEntryApi delete_directory DELETE /files/{scope}/{path}/ Delete specified directory in the scope. FileEntryApi delete_file DELETE /files/{scope}/{path} Delete specified file in the scope. FileEntryApi find_files GET /files Find files with prefix query parameter in the scope FileEntryApi get_file GET /files/{scope}/{path} Download file specified by the path and the scope FileEntryApi get_file_metadata HEAD /files/{scope}/{path} Get the metadata of the file specified by the path and the scope FileEntryApi list_files GET /files/{scope}/{path}/ List files and directories on the path in the scope FileEntryApi put_file PUT /files/{scope}/{path} Upload file to the path in the scope. FilesApi get_exported_file GET /files/exported/{exported_file_id} Get an exported file. GadgetApi delete_gadget_tag DELETE /gadgets/{product_id}/{serial_number}/tags/{tag_name} Delete gadget Tag. GadgetApi disable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/disable_termination Disable Termination of gadget. GadgetApi enable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/enable_termination Enable Termination of gadget. GadgetApi get_gadget GET /gadgets/{product_id}/{serial_number} Get gadget. GadgetApi list_gadgets GET /gadgets List gadgets. GadgetApi put_gadget_tags PUT /gadgets/{product_id}/{serial_number}/tags Bulk Insert or Update gadget Tags. GadgetApi register_gadget POST /gadgets/{product_id}/{serial_number}/register Register a gadget. GadgetApi set_gadget_group POST /gadgets/{product_id}/{serial_number}/set_group Set Group of gadget. GadgetApi terminate_gadget POST /gadgets/{product_id}/{serial_number}/terminate Terminate gadget. GadgetApi unset_gadget_group POST /gadgets/{product_id}/{serial_number}/unset_group Unset Group of gadget. GroupApi create_group POST /groups Create Group. GroupApi delete_configuration_namespace DELETE /groups/{group_id}/configuration/{namespace} Delete Group Configuration Namespace. GroupApi delete_configuration_parameter DELETE /groups/{group_id}/configuration/{namespace}/{name} Delete Group Configuration Parameters. GroupApi delete_group DELETE /groups/{group_id} Delete Group. GroupApi delete_group_tag DELETE /groups/{group_id}/tags/{tag_name} Delete Group Tag. GroupApi get_group GET /groups/{group_id} Get Group. GroupApi list_groups GET /groups List Groups. GroupApi list_subscribers_in_group GET /groups/{group_id}/subscribers List Subscribers in a group. GroupApi put_configuration_parameters PUT /groups/{group_id}/configuration/{namespace} Update Group Configuration Parameters. GroupApi put_group_tags PUT /groups/{group_id}/tags Update Group Tags. LagoonApi create_lagoon_user POST /lagoon/users Create a SORACOM Lagoon user LagoonApi delete_lagoon_user DELETE /lagoon/users/{lagoon_user_id} Delete a SORACOM Lagoon user LagoonApi get_image_link GET /lagoon/image/link Get a custom icon image link of SORACOM Lagoon LagoonApi get_lagoon_migration_info GET /lagoon/migration Get the version migration information for SORACOM Lagoon LagoonApi initialize_lagoon_dashboard_permissions POST /lagoon/dashboards/{dashboard_id}/permissions/init Update permissions to the initial state for a dashboard of SORACOM Lagoon LagoonApi list_lagoon_dashboards_permissions GET /lagoon/dashboards/permissions List permissions for all SORACOM Lagoon dashboards LagoonApi list_lagoon_license_pack_status GET /lagoon/license_packs Get the status of active SORACOM Lagoon license packs LagoonApi list_lagoon_users GET /lagoon/users List SORACOM Lagoon users that belong to operator LagoonApi migrate_lagoon POST /lagoon/migration Migrate SORACOM Lagoon version LagoonApi register_lagoon POST /lagoon/register Register (activate) SORACOM Lagoon LagoonApi terminate_lagoon POST /lagoon/terminate Terminate (deactivate) SORACOM Lagoon LagoonApi update_lagoon_dashboard_permissions PUT /lagoon/dashboards/{dashboard_id}/permissions Update permissions for a dashboard of SORACOM Lagoon LagoonApi update_lagoon_license_pack PUT /lagoon/license_packs Update the quantities for license packs of SORACOM Lagoon LagoonApi update_lagoon_plan PUT /lagoon/plan Update the plan of SORACOM Lagoon LagoonApi update_lagoon_user_email PUT /lagoon/users/{lagoon_user_id}/email Update email address of a SORACOM Lagoon user LagoonApi update_lagoon_user_password PUT /lagoon/users/{lagoon_user_id}/password Update password of a SORACOM Lagoon user LagoonApi update_lagoon_user_permission PUT /lagoon/users/{lagoon_user_id}/permission Update permission of a SORACOM Lagoon user LogApi get_logs GET /logs Get Logs. LoraDeviceApi delete_lora_device_tag DELETE /lora_devices/{device_id}/tags/{tag_name} Delete LoRa device Tag. LoraDeviceApi disable_termination_on_lora_device POST /lora_devices/{device_id}/disable_termination Disable Termination of LoRa device. LoraDeviceApi enable_termination_on_lora_device POST /lora_devices/{device_id}/enable_termination Enable Termination of LoRa device. LoraDeviceApi get_data_from_lora_device GET /lora_devices/{device_id}/data Get data sent from a LoRa device. LoraDeviceApi get_lora_device GET /lora_devices/{device_id} Get LoRa device. LoraDeviceApi list_lora_devices GET /lora_devices List LoRa devices. LoraDeviceApi put_lora_device_tags PUT /lora_devices/{device_id}/tags Bulk Insert or Update LoRa device Tags. LoraDeviceApi register_lora_device POST /lora_devices/{device_id}/register Register LoRa device. LoraDeviceApi send_data_to_lora_device POST /lora_devices/{device_id}/data Send data to a LoRa device. LoraDeviceApi set_lora_device_group POST /lora_devices/{device_id}/set_group Set Group of LoRa device. LoraDeviceApi terminate_lora_device POST /lora_devices/{device_id}/terminate Terminate LoRa device. LoraDeviceApi unset_lora_device_group POST /lora_devices/{device_id}/unset_group Unset Group of LoRa device. LoraGatewayApi delete_lora_gateway_tag DELETE /lora_gateways/{gateway_id}/tags/{tag_name} Delete LoRa gateway tag. LoraGatewayApi disable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/disable_termination Disable Termination of LoRa gateway. LoraGatewayApi enable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/enable_termination Enable Termination of LoRa gateway. LoraGatewayApi get_lora_gateway GET /lora_gateways/{gateway_id} Get LoRa gateway. LoraGatewayApi list_lora_gateways GET /lora_gateways List LoRa Gateways. LoraGatewayApi put_lora_gateway_tags PUT /lora_gateways/{gateway_id}/tags Bulk Insert or Update LoRa gateway Tags. LoraGatewayApi set_lora_network_set POST /lora_gateways/{gateway_id}/set_network_set Set Network Set ID of LoRa gateway. LoraGatewayApi terminate_lora_gateway POST /lora_gateways/{gateway_id}/terminate Terminate LoRa gateway. LoraGatewayApi unset_lora_network_set POST /lora_gateways/{gateway_id}/unset_network_set Unset Network Set ID of LoRa gateway. LoraNetworkSetApi add_permission_to_lora_network_set POST /lora_network_sets/{ns_id}/add_permission Adds permission to a LoRa network set. LoraNetworkSetApi create_lora_network_set POST /lora_network_sets Create a LoRa network set. LoraNetworkSetApi delete_lora_network_set DELETE /lora_network_sets/{ns_id} Delete LoRa network set. LoraNetworkSetApi delete_lora_network_set_tag DELETE /lora_network_sets/{ns_id}/tags/{tag_name} Delete LoRa network set tag. LoraNetworkSetApi get_lora_network_set GET /lora_network_sets/{ns_id} Get LoRa network set. LoraNetworkSetApi list_gateways_in_lora_network_set GET /lora_network_sets/{ns_id}/gateways List LoRa Gateways in a Network Set. LoraNetworkSetApi list_lora_network_sets GET /lora_network_sets List LoRa Network Sets. LoraNetworkSetApi put_lora_network_set_tags PUT /lora_network_sets/{ns_id}/tags Bulk Insert or Update LoRa network set tags. LoraNetworkSetApi revoke_permission_from_lora_network_set POST /lora_network_sets/{ns_id}/revoke_permission Revokes a permission from a LoRa network set. OperatorApi add_coverage_type POST /operators/{operator_id}/coverage_type/{coverage_type} Add coverage type. OperatorApi add_operator_contract POST /operators/{operator_id}/contracts Add Operator Contract. OperatorApi create_company_information POST /operators/{operator_id}/company_information Create company information. OperatorApi create_individual_information POST /operators/{operator_id}/individual_information Create individual information. OperatorApi create_operator POST /operators Create Operator. OperatorApi delete_operator_auth_key DELETE /operators/{operator_id}/auth_keys/{auth_key_id} Delete Operator AuthKey. OperatorApi delete_operator_contract DELETE /operators/{operator_id}/contracts/{contract_name} Delete Operator Contract. OperatorApi enable_mfa POST /operators/{operator_id}/mfa Enable Operator's MFA. OperatorApi generate_auth_token POST /operators/{operator_id}/token Generate Authentication Token. OperatorApi generate_operator_auth_key POST /operators/{operator_id}/auth_keys Generate Operator AuthKey. OperatorApi generate_support_token POST /operators/{operator_id}/support/token Generate Token for Support Console. OperatorApi get_company_information GET /operators/{operator_id}/company_information Get company information. OperatorApi get_individual_information GET /operators/{operator_id}/individual_information Get individual information. OperatorApi get_mfa_status GET /operators/{operator_id}/mfa Get Operator's MFA Status. OperatorApi get_operator GET /operators/{operator_id} Get Operator. OperatorApi issue_mfa_revoking_token POST /operators/mfa_revoke_token/issue Issue Operator's MFA Revoke Token. OperatorApi list_operator_auth_keys GET /operators/{operator_id}/auth_keys List Operator AuthKeys. OperatorApi revoke_mfa DELETE /operators/{operator_id}/mfa Revoke Operator's MFA. OperatorApi update_company_information PUT /operators/{operator_id}/company_information Update company information. OperatorApi update_individual_information PUT /operators/{operator_id}/individual_information Update individual information. OperatorApi update_operator_password POST /operators/{operator_id}/password Update Operator Password. OperatorApi verify_mfa POST /operators/{operator_id}/mfa/verify Verify Operator's MFA OTP Code. OperatorApi verify_mfa_revoking_token POST /operators/mfa_revoke_token/verify Verify Operator's MFA revoke token. OperatorApi verify_operator POST /operators/verify Verify Operator. OrderApi cancel_order PUT /orders/{order_id}/cancel Cancel order. OrderApi confirm_coupon_order PUT /coupons/{order_id}/confirm Confirm coupon order. OrderApi confirm_order PUT /orders/{order_id}/confirm Confirm order. OrderApi confirm_volume_discount_order PUT /volume_discounts/{order_id}/confirm Confirm long term discount order. OrderApi create_coupon_quotation POST /coupons Create coupon quotation. OrderApi create_quotation POST /orders Create Quotation. OrderApi create_volume_discount_quotation POST /volume_discounts Create long term discount quotation. OrderApi get_order GET /orders/{order_id} Get confirmed order. OrderApi list_available_discounts GET /volume_discounts/available_discounts List available long term discounts. OrderApi list_ordered_subscribers GET /orders/{order_id}/subscribers List ordered subscribers. OrderApi list_orders GET /orders List confirmed orders. OrderApi list_products GET /products List products. OrderApi register_ordered_sim POST /orders/{order_id}/subscribers/register Register subscribers for operator. PaymentApi activate_payment_method POST /payment_methods/current/activate Activate payment method. PaymentApi export_payment_statement POST /payment_statements/{payment_statement_id}/export Export payment statement. PaymentApi get_payer_information GET /payment_statements/payer_information Export payer information. PaymentApi get_payment_method GET /payment_methods/current Get payment method information. PaymentApi get_payment_transaction GET /payment_history/transactions/{payment_transaction_id} Get payment transaction result. PaymentApi get_volume_discount GET /volume_discounts/{contract_id} Get long term discount. PaymentApi list_coupons GET /coupons List coupons. PaymentApi list_payment_statements GET /payment_statements List payment statements. PaymentApi list_volume_discounts GET /volume_discounts List long term discounts. PaymentApi register_coupon POST /coupons/{coupon_code}/register Register Coupon. PaymentApi register_payer_information POST /payment_statements/payer_information Register payer information. PortMappingApi create_port_mapping POST /port_mappings Create Port Mapping. PortMappingApi delete_port_mapping DELETE /port_mappings/{ip_address}/{port} Delete PortMapping. PortMappingApi list_port_mappings GET /port_mappings List Port Mapping Entries. PortMappingApi list_port_mappings_for_subscriber GET /port_mappings/subscribers/{imsi} Get Port Mapping entries for a subscriber. QueryApi search_devices GET /query/devices Search SORACOM Inventory devices by query QueryApi search_sigfox_devices GET /query/sigfox_devices Search Sigfox devices by query QueryApi search_sims GET /query/sims Search SIMs by query terms QueryApi search_subscriber_traffic_volume_ranking GET /query/subscribers/traffic_volume/ranking Search traffic volume ranking of subscribers QueryApi search_subscribers GET /query/subscribers (DEPRECATED) Search subscribers by query terms RoleApi attach_role POST /operators/{operator_id}/users/{user_name}/roles Attach Role to User. RoleApi create_role POST /operators/{operator_id}/roles/{role_id} Create Role. RoleApi delete_role DELETE /operators/{operator_id}/roles/{role_id} Delete Role. RoleApi detach_role DELETE /operators/{operator_id}/users/{user_name}/roles/{role_id} Detach Role from User. RoleApi get_role GET /operators/{operator_id}/roles/{role_id} Get Role. RoleApi list_role_attached_users GET /operators/{operator_id}/roles/{role_id}/users List Role Attached Users. RoleApi list_roles GET /operators/{operator_id}/roles List Roles. RoleApi list_user_roles GET /operators/{operator_id}/users/{user_name}/roles List User Roles. RoleApi update_role PUT /operators/{operator_id}/roles/{role_id} Update Role. ShippingAddressApi create_shipping_address POST /operators/{operator_id}/shipping_addresses Create shipping address. ShippingAddressApi delete_shipping_address DELETE /operators/{operator_id}/shipping_addresses/{shipping_address_id} Delete shipping address. ShippingAddressApi get_shipping_address GET /operators/{operator_id}/shipping_addresses/{shipping_address_id} Get shipping address. ShippingAddressApi list_shipping_addresses GET /operators/{operator_id}/shipping_addresses List shipping addresses. ShippingAddressApi update_shipping_address PUT /operators/{operator_id}/shipping_addresses/{shipping_address_id} Update shipping address. SigfoxDeviceApi delete_sigfox_device_tag DELETE /sigfox_devices/{device_id}/tags/{tag_name} Delete Sigfox device Tag. SigfoxDeviceApi disable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/disable_termination Disable Termination of Sigfox device. SigfoxDeviceApi enable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/enable_termination Enable Termination of Sigfox device. SigfoxDeviceApi get_data_from_sigfox_device GET /sigfox_devices/{device_id}/data Get data sent from a Sigfox device. SigfoxDeviceApi get_sigfox_device GET /sigfox_devices/{device_id} Get Sigfox device. SigfoxDeviceApi list_sigfox_devices GET /sigfox_devices List Sigfox devices. SigfoxDeviceApi put_sigfox_device_tags PUT /sigfox_devices/{device_id}/tags Bulk Insert or Update Sigfox device Tags. SigfoxDeviceApi register_sigfox_device POST /sigfox_devices/{device_id}/register Register a Sigfox device. SigfoxDeviceApi send_data_to_sigfox_device POST /sigfox_devices/{device_id}/data Send data to a Sigfox device. SigfoxDeviceApi set_sigfox_device_group POST /sigfox_devices/{device_id}/set_group Set Group of Sigfox device. SigfoxDeviceApi terminate_sigfox_device POST /sigfox_devices/{device_id}/terminate Terminate Sigfox device. SigfoxDeviceApi unset_sigfox_device_group POST /sigfox_devices/{device_id}/unset_group Unset Group of Sigfox device. SimApi activate_sim POST /sims/{sim_id}/activate Activate SIM. SimApi add_subscription POST /sims/{sim_id}/profiles/{iccid}/add_subscription Adds a new subscription container to a SIM profile SimApi attach_arc_sim_credentials POST /sims/{sim_id}/credentials/arc (DEPRECATED) Attach the credentials for Arc to a SIM. SimApi cancel_subscription_container_download POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download Cancel subscription download to subscription container SimApi create_arc_session POST /sims/{sim_id}/sessions/arc Re-create an Arc session. SimApi create_sim POST /sims Create a SIM. SimApi create_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions Create Packet Capture Session SimApi deactivate_sim POST /sims/{sim_id}/deactivate Deactivate SIM. SimApi delete_sim_packet_capture_session DELETE /sims/{sim_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session SimApi delete_sim_session POST /sims/{sim_id}/delete_session Delete Session SimApi delete_sim_tag DELETE /sims/{sim_id}/tags/{tag_name} Delete SIM tag. SimApi delete_subscription_container_country_mapping_entry DELETE /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc} Delete subscription container mapping entries SimApi disable_sim_termination POST /sims/{sim_id}/disable_termination Disable termination of the SIM. SimApi downlink_ping_to_user_equipment POST /sims/{sim_id}/downlink/ping Send ping requests to a SIM. SimApi enable_sim_termination POST /sims/{sim_id}/enable_termination Enable termination of the SIM. SimApi enable_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscription_containers/{containerId}/enable Enables a subscription container. SimApi get_data_from_sim GET /sims/{sim_id}/data Get data sent from a SIM. SimApi get_sim GET /sims/{sim_id} Get a SIM identified by sim_id SimApi get_sim_packet_capture_session GET /sims/{sim_id}/packet_capture_sessions/{session_id} Get Packet Capture Session SimApi list_sim_packet_capture_sessions GET /sims/{sim_id}/packet_capture_sessions List Packet Capture Sessions SimApi list_sim_session_events GET /sims/{sim_id}/events/sessions List Session Events. SimApi list_sims GET /sims List SIMs. SimApi list_subscription_containers GET /sims/{sim_id}/profiles/{iccid}/subscription_containers Get subscription container status. SimApi put_sim_tags PUT /sims/{sim_id}/tags Bulk insert or update SIM tags. SimApi put_subscription_container_country_mapping_entries PUT /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping Updates subscription container country mapping entries. SimApi register_sim POST /sims/{sim_id}/register Register SIM. SimApi remove_arc_sim_credentials DELETE /sims/{sim_id}/credentials/arc (DEPRECATED) Remove the credentials for Arc from a SIM. SimApi renew_arc_sim_credentials PUT /sims/{sim_id}/credentials/arc Renew the credentials for Arc to a SIM. SimApi report_sim_local_info POST /sims/{sim_id}/report_local_info Triggers SIM to report SIM local info. SimApi send_sms_to_sim POST /sims/{sim_id}/send_sms Send SMS to SIM SimApi set_sim_expiry_time POST /sims/{sim_id}/set_expiry_time Update expiry time of SIM. SimApi set_sim_group POST /sims/{sim_id}/set_group Set Group id of a SIM. SimApi set_sim_imei_lock POST /sims/{sim_id}/set_imei_lock Set IMEI lock configuration for the SIM. SimApi set_sim_to_standby POST /sims/{sim_id}/set_to_standby Set SIM to standby mode. SimApi stop_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions/{session_id}/stop Stop SIM Packet Capture Session SimApi suspend_sim POST /sims/{sim_id}/suspend Suspend SIM. SimApi terminate_sim POST /sims/{sim_id}/terminate Terminate SIM. SimApi terminate_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate Terminate subscription container SimApi unset_sim_expiry_time POST /sims/{sim_id}/unset_expiry_time Delete expiry time of the SIM. SimApi unset_sim_group POST /sims/{sim_id}/unset_group Unset Group to SIM. SimApi unset_sim_imei_lock POST /sims/{sim_id}/unset_imei_lock Unset IMEI lock configuration for SIM. SimApi update_sim_speed_class POST /sims/{sim_id}/update_speed_class Update SIM speed class. SoraletApi create_soralet POST /soralets Create a Soralet. SoraletApi delete_soralet DELETE /soralets/{soralet_id} Delete Soralet. SoraletApi delete_soralet_version DELETE /soralets/{soralet_id}/versions/{version} Delete a Soralet version. SoraletApi get_soralet GET /soralets/{soralet_id} Get a Soralet. SoraletApi get_soralet_logs GET /soralets/{soralet_id}/logs Get log messages from Soralet. SoraletApi list_soralet_versions GET /soralets/{soralet_id}/versions List versions of Soralet. SoraletApi list_soralets GET /soralets List Soralets. SoraletApi test_soralet POST /soralets/{soralet_id}/test Execute Soralet with arguments. SoraletApi upload_soralet_code POST /soralets/{soralet_id}/versions Upload code and create a new version. StatsApi export_air_stats POST /stats/air/operators/{operator_id}/export Export Air Usage Report of All Subscribers. StatsApi export_beam_stats POST /stats/beam/operators/{operator_id}/export Export Beam Usage Report of All Subscribers. StatsApi get_air_stats GET /stats/air/subscribers/{imsi} Get Air Usage Report of Subscriber. StatsApi get_air_stats_of_sim GET /stats/air/sims/{simId} Get Air Usage Report of SIM. StatsApi get_beam_stats GET /stats/beam/subscribers/{imsi} Get Beam Usage Report of Subscriber. StatsApi get_harvest_exported_data_stats GET /stats/harvest/operators/{operator_id} Get 'Harvest usage report' for the specified operator. StatsApi get_napter_audit_logs_exported_data_stats GET /stats/napter/audit_logs Get Napter audit logs' monthly exported data stats SubscriberApi activate_subscriber POST /subscribers/{imsi}/activate Activate Subscriber. SubscriberApi deactivate_subscriber POST /subscribers/{imsi}/deactivate Deactivate Subscriber. SubscriberApi delete_subscriber_session POST /subscribers/{imsi}/delete_session Delete Session SubscriberApi delete_subscriber_tag DELETE /subscribers/{imsi}/tags/{tag_name} Delete Subscriber Tag. SubscriberApi delete_subscriber_transfer_token DELETE /subscribers/transfer_token/{token} Delete Subscribers Transfer Token. SubscriberApi disable_termination POST /subscribers/{imsi}/disable_termination Disable Termination of Subscriber. SubscriberApi enable_termination POST /subscribers/{imsi}/enable_termination Enable Termination of Subscriber. SubscriberApi export_subscribers POST /subscribers/export Export all subscribers. SubscriberApi get_data_from_subscriber GET /subscribers/{imsi}/data Get data sent from a subscriber. SubscriberApi get_subscriber GET /subscribers/{imsi} Get Subscriber. SubscriberApi issue_subscriber_transfer_token POST /subscribers/transfer_token/issue Issue Subscribers Transfer Token. SubscriberApi list_session_events GET /subscribers/{imsi}/events/sessions List Session Events. SubscriberApi list_subscribers GET /subscribers List Subscribers. SubscriberApi put_bundles PUT /subscribers/{imsi}/bundles Set Bundles to Subscriber. SubscriberApi put_subscriber_tags PUT /subscribers/{imsi}/tags Bulk Insert or Update Subscriber Tags. SubscriberApi register_subscriber POST /subscribers/{imsi}/register Register Subscriber. SubscriberApi report_local_info POST /subscribers/{imsi}/report_local_info Triggers Subscriber to report SIM local info. SubscriberApi send_sms POST /subscribers/{imsi}/send_sms Send SMS to Subscriber SubscriberApi send_sms_by_msisdn POST /subscribers/msisdn/{msisdn}/send_sms Send SMS to Subscriber by MSISDN SubscriberApi send_subscriber_downlink_ping POST /subscribers/{imsi}/downlink/ping Send ping requests to a subscriber. SubscriberApi set_expiry_time POST /subscribers/{imsi}/set_expiry_time Update Expiry Time of Subscriber. SubscriberApi set_group POST /subscribers/{imsi}/set_group Set Group to Subscriber. SubscriberApi set_imei_lock POST /subscribers/{imsi}/set_imei_lock Set IMEI lock configuration for Subscriber. SubscriberApi set_subscriber_to_standby POST /subscribers/{imsi}/set_to_standby Set Subscriber to standby mode. SubscriberApi suspend_subscriber POST /subscribers/{imsi}/suspend Suspend Subscriber. SubscriberApi terminate_subscriber POST /subscribers/{imsi}/terminate Terminate Subscriber. SubscriberApi unset_expiry_time POST /subscribers/{imsi}/unset_expiry_time Delete Expiry Time of Subscriber. SubscriberApi unset_group POST /subscribers/{imsi}/unset_group Unset Group to Subscriber. SubscriberApi unset_imei_lock POST /subscribers/{imsi}/unset_imei_lock Unset IMEI lock configuration for Subscriber. SubscriberApi update_speed_class POST /subscribers/{imsi}/update_speed_class Update Subscriber speed class. SubscriberApi verify_subscriber_transfer_token POST /subscribers/transfer_token/verify Verify Subscriber Transfer Token. SystemNotificationApi delete_system_notification DELETE /operators/{operator_id}/system_notifications/{type} Delete system notification SystemNotificationApi get_system_notification GET /operators/{operator_id}/system_notifications/{type} Get system notification SystemNotificationApi list_system_notifications GET /operators/{operator_id}/system_notifications List system notifications SystemNotificationApi set_system_notification POST /operators/{operator_id}/system_notifications/{type} Set system notification UserApi create_user POST /operators/{operator_id}/users/{user_name} Create User. UserApi create_user_password POST /operators/{operator_id}/users/{user_name}/password Create Password. UserApi delete_user DELETE /operators/{operator_id}/users/{user_name} Delete User. UserApi delete_user_auth_key DELETE /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Delete User AuthKey. UserApi delete_user_password DELETE /operators/{operator_id}/users/{user_name}/password Delete Password. UserApi enable_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa Enable SAM user's MFA UserApi generate_user_auth_key POST /operators/{operator_id}/users/{user_name}/auth_keys Generate AuthKey. UserApi get_default_permissions GET /operators/{operator_id}/users/default_permissions Get the default permissions UserApi get_user GET /operators/{operator_id}/users/{user_name} Get User. UserApi get_user_auth_key GET /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Get AuthKey. UserApi get_user_mfa_status GET /operators/{operator_id}/users/{user_name}/mfa Get SAM user's MFA status UserApi get_user_permission GET /operators/{operator_id}/users/{user_name}/permission Get User Permission. UserApi has_user_password GET /operators/{operator_id}/users/{user_name}/password Has User Password. UserApi list_user_auth_keys GET /operators/{operator_id}/users/{user_name}/auth_keys List User AuthKeys. UserApi list_users GET /operators/{operator_id}/users List Users. UserApi revoke_user_mfa DELETE /operators/{operator_id}/users/{user_name}/mfa Revoke SAM user's MFA UserApi update_default_permissions PUT /operators/{operator_id}/users/default_permissions Update the default permissions UserApi update_user PUT /operators/{operator_id}/users/{user_name} Update User. UserApi update_user_password PUT /operators/{operator_id}/users/{user_name}/password Update Password. UserApi update_user_permission PUT /operators/{operator_id}/users/{user_name}/permission Update Permission to User. UserApi verify_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa/verify Verify SAM user's MFA OTP code when MFA activation phase VirtualPrivateGatewayApi close_gate POST /virtual_private_gateways/{vpg_id}/gate/close Close SORACOM Gate. VirtualPrivateGatewayApi create_mirroring_peer POST /virtual_private_gateways/{vpg_id}/junction/mirroring/peers Add node in the list of Junction mirroring peers VirtualPrivateGatewayApi create_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions Create Packet Capture Session VirtualPrivateGatewayApi create_virtual_private_gateway POST /virtual_private_gateways Create Virtual Private Gateway. VirtualPrivateGatewayApi create_vpc_peering_connection POST /virtual_private_gateways/{vpg_id}/vpc_peering_connections Create VPC Peering Connection VirtualPrivateGatewayApi delete_mirroring_peer DELETE /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Remove peer from the list of Junction mirroring peers VirtualPrivateGatewayApi delete_packet_capture_session DELETE /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session VirtualPrivateGatewayApi delete_virtual_private_gateway_ip_address_map_entry DELETE /virtual_private_gateways/{vpg_id}/ip_address_map/{key} Delete VPG IP address map entry VirtualPrivateGatewayApi delete_vpc_peering_connection DELETE /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id} Delete VPC Peering Connection. VirtualPrivateGatewayApi get_packet_capture_session GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Get Packet Capture Session VirtualPrivateGatewayApi get_virtual_private_gateway GET /virtual_private_gateways/{vpg_id} Get Virtual Private Gateway. VirtualPrivateGatewayApi list_gate_peers GET /virtual_private_gateways/{vpg_id}/gate/peers List VPG Gate peers VirtualPrivateGatewayApi list_packet_capture_sessions GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions List Packet Capture Sessions VirtualPrivateGatewayApi list_virtual_private_gateway_ip_address_map_entries GET /virtual_private_gateways/{vpg_id}/ip_address_map List VPG IP address map entries VirtualPrivateGatewayApi list_virtual_private_gateways GET /virtual_private_gateways List Virtual Private Gateways. VirtualPrivateGatewayApi open_gate POST /virtual_private_gateways/{vpg_id}/gate/open Open SORACOM Gate. VirtualPrivateGatewayApi put_virtual_private_gateway_ip_address_map_entry POST /virtual_private_gateways/{vpg_id}/ip_address_map Put an entry in VPG IP address map VirtualPrivateGatewayApi register_gate_peer POST /virtual_private_gateways/{vpg_id}/gate/peers Register VPG Gate peer VirtualPrivateGatewayApi set_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_inspection Set configuration for Junction inspection feature VirtualPrivateGatewayApi set_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_redirection Set configuration for Junction redirection feature VirtualPrivateGatewayApi set_routing_filter POST /virtual_private_gateways/{vpg_id}/set_routing_filter Sets Virtual Private Gateway outbound routing filter. VirtualPrivateGatewayApi stop_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop Stop Packet Capture Session VirtualPrivateGatewayApi terminate_virtual_private_gateway POST /virtual_private_gateways/{vpg_id}/terminate Terminate Virtual Private Gateway. VirtualPrivateGatewayApi unregister_gate_peer DELETE /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address} Unregister VPG gate peer VirtualPrivateGatewayApi unset_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_inspection Unset configuration for Junction inspection feature VirtualPrivateGatewayApi unset_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_redirection Unset configuration for Junction redirection feature VirtualPrivateGatewayApi update_mirroring_peer PUT /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Update a Junction mirroring peer","title":"Documentation for API Endpoints"},{"location":"api/#documentation-for-models","text":"APIAuditLogEntry APICallError APICallErrorMessage ActionConfig ActionConfigProperty AirStatsResponse ArcCredentialAttachRequest ArcCredentialAttachResponse ArcCredentialRenewRequest ArcCredentialRenewResponse ArcSessionCreateResponse ArcSessionStatus AttachRoleRequest AttributeUpdate AuthKeyResponse AuthRequest AuthResponse AvailableLongTermDiscountModel AvailableLongTermDiscountResponse BeamStatsResponse Capabilities Cell CellIdentifier CellLocation CompanyInformationModel ContractUpdatedResponse ContractUpdatingRequest CouponResponse CreateAndUpdateCredentialsModel CreateEstimatedCouponRequest CreateEstimatedOrderRequest CreateEstimatedVolumeDiscountRequest CreateEventHandlerRequest CreateGroupRequest CreateOrUpdateRoleRequest CreatePortMappingRequest CreateRoleResponse CreateSimRequest CreateSoraletRequest CreateUserPasswordRequest CreateUserRequest CreateVirtualPrivateGatewayRequest CreateVpcPeeringConnectionRequest CredentialsModel CreditCard DailyBill DailyBillResponse DataEntry DataSourceResourceMetadata DataTrafficStats Device DeviceObjectModel DiagnosticRequest DiagnosticResponse DownlinkPingRequest DownlinkPingResponse EmailsModel EnableMFAOTPResponse Error EstimatedCouponModel EstimatedOrderItemModel EstimatedOrderModel EstimatedVolumeDiscountModel EventHandlerModel ExecuteSoraletRequest ExecuteSoraletResponse ExpiryTime ExportRequest FileEntry FileExportResponse FunnelAWSFirehoseDestination FunnelAWSIoTDestination FunnelAWSKinesisDestination FunnelAcroquestTorrentioDestination FunnelAppressoDataSpiderDestination FunnelAzureEventHubDestination FunnelBrainsTechImpulseDestination FunnelConfiguration FunnelContentType FunnelDestination FunnelEsrijArcgisOnlineDestination FunnelFusicMockmockDatarecorderDestination FunnelGooglePubSubDestination FunnelInfoteriaPlatioDestination FunnelKiiThingifDestination FunnelLandlogDestination FunnelOptimCloudiotosDestination FunnelSensorCorpusDestination FunnelTeradataIntellicloudDestination FunnelWingarcMotionboardDestination FunnelYaskawaMmcloudDestination Gadget GadgetRegistrationRequest GatePeer GenerateOperatorsAuthKeyResponse GenerateTokenRequest GenerateTokenResponse GenerateUserAuthKeyResponse GetBillingHistoryResponse GetDefaultPermissionsResponse GetExportedFileResponse GetLatestBill GetOperatorResponse GetOrderResponse GetPaymentMethodResult GetPaymentTransactionResult GetShippingAddressResponse GetUserPasswordResponse GetUserPermissionResponse GetVolumeDiscountResponse GlobalSimAppletPLMNRecord Group GroupConfigurationUpdateRequest HarvestExportedDataStatsResponse ImeiLock IndividualInformationModel InlineObject InlineObject1 InlineObject2 InlineObject3 Insight IpAddressMapEntry IssueAddEmailTokenRequest IssuePasswordResetTokenRequest IssueSubscriberTransferTokenRequest IssueSubscriberTransferTokenResponse JunctionInspectionConfiguration JunctionMirroringConfiguration JunctionMirroringPeer JunctionRedirectionConfiguration LagoonDashboardPermissionsResponse LagoonDashboardPermissionsResponsePermissions LagoonDashboardPermissionsUpdatingRequest LagoonDashboardPermissionsUpdatingRequestPermissions LagoonLicensePackStatusResponse LagoonLicensePacksUpdatingRequest LagoonLicensePacksUpdatingRequestLicensePackQuantities LagoonMigrationFromClassicRequest LagoonPlanChangingRequest LagoonRegistrationRequest LagoonRegistrationResponse LagoonUser LagoonUserCreationRequest LagoonUserCreationResponse LagoonUserEmailUpdatingRequest LagoonUserPasswordUpdatingRequest LagoonUserPermissionUpdatingRequest LastSeen ListCouponResponse ListOrderResponse ListOrderedSubscriberResponse ListPaymentStatementResponse ListProductResponse ListRolesResponse ListShippingAddressResponse ListVolumeDiscountResponse LogEntry LoraData LoraDevice LoraGateway LoraNetworkSet MFAAuthenticationRequest MFAIssueRevokingTokenRequest MFARevokingTokenVerifyRequest MFAStatusOfUseResponse MappingEntries MonthlyBill NapterAuditLogDirection NapterAuditLogEntry NapterAuditLogsExportedDataStatsResponse ObjectInstance OpenGateRequest OperatorMFAVerifyingResponse OrderItemModel OrderedSubscriber PacketCaptureSession PacketCaptureSessionRequest PaymentAmount PaymentDescription PaymentStatementResponse Placement PortMapping PortMappingDestination PortMappingSource PreviousSessionStatus PriceByQuantity ProductModel PutIpAddressMapEntryRequest ReferenceUrl RegisterGatePeerRequest RegisterLoraDeviceRequest RegisterOperatorsRequest RegisterPayerInformationModel RegisterSimRequest RegisterSubscribersRequest ResourceInstance RoleResponse RoutingFilterEntry RuleConfig RuleConfigProperty SessionEvent SessionStatus SetDeviceObjectModelScopeRequest SetGroupRequest SetImeiLockRequest SetNetworkSetRequest SetSystemNotificationsRequest SetUserPermissionRequest ShippingAddressModel ShippingCostModel SigfoxData SigfoxDevice SigfoxRegistrationRequest Sim SimProfile SimplifiedSubscriber SmsForwardingReport SmsForwardingRequest SoracomBeamStats Soralet SoraletDataSource SoraletLog SoraletVersion Subscriber SubscriptionContainer SubscriptionContainerStatus SubscriptionContainerStatusCountryMapping SubscriptionContainerStatusMappingRecord SupportTokenResponse SystemNotificationsModel TagSet TagUpdateRequest TrafficVolumeRanking UpdateDefaultPermissionsRequest UpdateEventHandlerRequest UpdatePasswordRequest UpdatePermissionRequest UpdateSpeedClassRequest UpdateUserRequest UserDetailResponse VerifyAddEmailTokenRequest VerifyOperatorsRequest VerifyPasswordResetTokenRequest VerifySubscriberTransferTokenRequest VerifySubscriberTransferTokenResponse VirtualPrivateGateway VolumeDiscountModel VpcPeeringConnection","title":"Documentation For Models"},{"location":"api/#documentation-for-authorization","text":"","title":"Documentation For Authorization"},{"location":"api/#api_key","text":"Type : API key API key parameter name : X-Soracom-API-Key Location : HTTP header","title":"api_key"},{"location":"api/#api_token","text":"Type : API key API key parameter name : X-Soracom-Token Location : HTTP header","title":"api_token"},{"location":"api/#author","text":"","title":"Author"},{"location":"api/#notes-for-large-openapi-documents","text":"If the OpenAPI document is large, imports in soracom_api.apis and soracom_api.models may fail with a RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions: Solution 1: Use specific imports for apis and models like: - from soracom_api.api.default_api import DefaultApi - from soracom_api.model.pet import Pet Solution 2: Before importing the package, adjust the maximum recursion limit as shown below: import sys sys.setrecursionlimit(1500) import soracom_api from soracom_api.apis import * from soracom_api.models import *","title":"Notes for Large OpenAPI documents"},{"location":"api/docs/APIAuditLogEntry/","text":"APIAuditLogEntry \u00b6 Properties \u00b6 Name Type Description Notes api_kind str The kind of the API (e.g. `/v1/auth`). [optional] operator_id str The operator ID that called the API. [optional] remote_ip_address str The IP address of the caller. [optional] request_path str The request path that has been called. [optional] requested_time_epoch_ms int The timestamp of the API call. This can be used as the `last_evaluated_key` request parameter, for pagination. [optional] user_name str The SAM username that called the API, if this parameter is empty, it means the caller user is the root user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"APIAuditLogEntry"},{"location":"api/docs/APIAuditLogEntry/#apiauditlogentry","text":"","title":"APIAuditLogEntry"},{"location":"api/docs/APIAuditLogEntry/#properties","text":"Name Type Description Notes api_kind str The kind of the API (e.g. `/v1/auth`). [optional] operator_id str The operator ID that called the API. [optional] remote_ip_address str The IP address of the caller. [optional] request_path str The request path that has been called. [optional] requested_time_epoch_ms int The timestamp of the API call. This can be used as the `last_evaluated_key` request parameter, for pagination. [optional] user_name str The SAM username that called the API, if this parameter is empty, it means the caller user is the root user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/APICallError/","text":"APICallError \u00b6 Properties \u00b6 Name Type Description Notes error_message APICallErrorMessage [optional] http_status int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"APICallError"},{"location":"api/docs/APICallError/#apicallerror","text":"","title":"APICallError"},{"location":"api/docs/APICallError/#properties","text":"Name Type Description Notes error_message APICallErrorMessage [optional] http_status int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/APICallErrorMessage/","text":"APICallErrorMessage \u00b6 Properties \u00b6 Name Type Description Notes code str \u30a8\u30e9\u30fc\u30b3\u30fc\u30c9 message str \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306bX-Soracom-Lang\u30d8\u30c3\u30c0\u30fc\u306b\u8a00\u8a9e(en,ja)\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u305d\u306e\u8a00\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"APICallErrorMessage"},{"location":"api/docs/APICallErrorMessage/#apicallerrormessage","text":"","title":"APICallErrorMessage"},{"location":"api/docs/APICallErrorMessage/#properties","text":"Name Type Description Notes code str \u30a8\u30e9\u30fc\u30b3\u30fc\u30c9 message str \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306bX-Soracom-Lang\u30d8\u30c3\u30c0\u30fc\u306b\u8a00\u8a9e(en,ja)\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u305d\u306e\u8a00\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ActionConfig/","text":"ActionConfig \u00b6 Properties \u00b6 Name Type Description Notes properties ActionConfigProperty type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ActionConfig"},{"location":"api/docs/ActionConfig/#actionconfig","text":"","title":"ActionConfig"},{"location":"api/docs/ActionConfig/#properties","text":"Name Type Description Notes properties ActionConfigProperty type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ActionConfigProperty/","text":"ActionConfigProperty \u00b6 Properties \u00b6 Name Type Description Notes execution_date_time_const str access_key str Only for InvokeAWSLambdaAction [optional] body str Only for ExecuteWebRequestAction (Optional) [optional] content_type str Only for ExecuteWebRequestAction [optional] endpoint str Only for InvokeAWSLambdaAction [optional] execution_offset_minutes str Run in the minutes after the timing of executionDateTimeConst [optional] function_name str Only for InvokeAWSLambdaAction [optional] headers {str: (bool, date, datetime, dict, float, int, list, str, none_type)} Only for ExecuteWebRequestAction (Optional) [optional] http_method str Only for ExecuteWebRequestAction [optional] message str Only for SendMailAction, SendMailToOperatorAction [optional] parameter1 str Only for InvokeAWSLambdaAction [optional] parameter2 str Only for InvokeAWSLambdaAction [optional] parameter3 str Only for InvokeAWSLambdaAction [optional] parameter4 str Only for InvokeAWSLambdaAction [optional] parameter5 str Only for InvokeAWSLambdaAction [optional] secret_access_key str Only for InvokeAWSLambdaAction [optional] speed_class str Only for ChangeSpeedClassAction [optional] title str Only for SendMailAction, SendMailToOperatorAction [optional] to str Only for SendMailAction [optional] url str Access URL and parameters. Only for ExecuteWebRequestAction [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ActionConfigProperty"},{"location":"api/docs/ActionConfigProperty/#actionconfigproperty","text":"","title":"ActionConfigProperty"},{"location":"api/docs/ActionConfigProperty/#properties","text":"Name Type Description Notes execution_date_time_const str access_key str Only for InvokeAWSLambdaAction [optional] body str Only for ExecuteWebRequestAction (Optional) [optional] content_type str Only for ExecuteWebRequestAction [optional] endpoint str Only for InvokeAWSLambdaAction [optional] execution_offset_minutes str Run in the minutes after the timing of executionDateTimeConst [optional] function_name str Only for InvokeAWSLambdaAction [optional] headers {str: (bool, date, datetime, dict, float, int, list, str, none_type)} Only for ExecuteWebRequestAction (Optional) [optional] http_method str Only for ExecuteWebRequestAction [optional] message str Only for SendMailAction, SendMailToOperatorAction [optional] parameter1 str Only for InvokeAWSLambdaAction [optional] parameter2 str Only for InvokeAWSLambdaAction [optional] parameter3 str Only for InvokeAWSLambdaAction [optional] parameter4 str Only for InvokeAWSLambdaAction [optional] parameter5 str Only for InvokeAWSLambdaAction [optional] secret_access_key str Only for InvokeAWSLambdaAction [optional] speed_class str Only for ChangeSpeedClassAction [optional] title str Only for SendMailAction, SendMailToOperatorAction [optional] to str Only for SendMailAction [optional] url str Access URL and parameters. Only for ExecuteWebRequestAction [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AirStatsResponse/","text":"AirStatsResponse \u00b6 Properties \u00b6 Name Type Description Notes data_traffic_stats_map {str: (DataTrafficStats,)} [optional] date str [optional] unixtime int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AirStatsResponse"},{"location":"api/docs/AirStatsResponse/#airstatsresponse","text":"","title":"AirStatsResponse"},{"location":"api/docs/AirStatsResponse/#properties","text":"Name Type Description Notes data_traffic_stats_map {str: (DataTrafficStats,)} [optional] date str [optional] unixtime int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcCredentialAttachRequest/","text":"ArcCredentialAttachRequest \u00b6 Properties \u00b6 Name Type Description Notes arc_client_peer_public_key str if this parameter is missing, the sever generates keypair [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcCredentialAttachRequest"},{"location":"api/docs/ArcCredentialAttachRequest/#arccredentialattachrequest","text":"","title":"ArcCredentialAttachRequest"},{"location":"api/docs/ArcCredentialAttachRequest/#properties","text":"Name Type Description Notes arc_client_peer_public_key str if this parameter is missing, the sever generates keypair [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcCredentialAttachResponse/","text":"ArcCredentialAttachResponse \u00b6 Properties \u00b6 Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcCredentialAttachResponse"},{"location":"api/docs/ArcCredentialAttachResponse/#arccredentialattachresponse","text":"","title":"ArcCredentialAttachResponse"},{"location":"api/docs/ArcCredentialAttachResponse/#properties","text":"Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcCredentialRenewRequest/","text":"ArcCredentialRenewRequest \u00b6 Properties \u00b6 Name Type Description Notes arc_client_peer_public_key str if this parameter is missing, the sever generates keypair [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcCredentialRenewRequest"},{"location":"api/docs/ArcCredentialRenewRequest/#arccredentialrenewrequest","text":"","title":"ArcCredentialRenewRequest"},{"location":"api/docs/ArcCredentialRenewRequest/#properties","text":"Name Type Description Notes arc_client_peer_public_key str if this parameter is missing, the sever generates keypair [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcCredentialRenewResponse/","text":"ArcCredentialRenewResponse \u00b6 Properties \u00b6 Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcCredentialRenewResponse"},{"location":"api/docs/ArcCredentialRenewResponse/#arccredentialrenewresponse","text":"","title":"ArcCredentialRenewResponse"},{"location":"api/docs/ArcCredentialRenewResponse/#properties","text":"Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcSessionCreateResponse/","text":"ArcSessionCreateResponse \u00b6 Properties \u00b6 Name Type Description Notes arc_allowed_ips [str] [optional] arc_client_peer_ip_address str [optional] arc_client_peer_public_key str [optional] arc_server_endpoint str [optional] arc_server_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcSessionCreateResponse"},{"location":"api/docs/ArcSessionCreateResponse/#arcsessioncreateresponse","text":"","title":"ArcSessionCreateResponse"},{"location":"api/docs/ArcSessionCreateResponse/#properties","text":"Name Type Description Notes arc_allowed_ips [str] [optional] arc_client_peer_ip_address str [optional] arc_client_peer_public_key str [optional] arc_server_endpoint str [optional] arc_server_peer_public_key str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ArcSessionStatus/","text":"ArcSessionStatus \u00b6 Properties \u00b6 Name Type Description Notes arc_allowed_ips [str] [optional] arc_client_peer_ip_address str [optional] arc_client_peer_public_key str [optional] arc_server_endpoint str [optional] arc_server_peer_public_key str [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] last_updated_at int [optional] vpg_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ArcSessionStatus"},{"location":"api/docs/ArcSessionStatus/#arcsessionstatus","text":"","title":"ArcSessionStatus"},{"location":"api/docs/ArcSessionStatus/#properties","text":"Name Type Description Notes arc_allowed_ips [str] [optional] arc_client_peer_ip_address str [optional] arc_client_peer_public_key str [optional] arc_server_endpoint str [optional] arc_server_peer_public_key str [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] last_updated_at int [optional] vpg_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AttachRoleRequest/","text":"AttachRoleRequest \u00b6 Properties \u00b6 Name Type Description Notes role_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AttachRoleRequest"},{"location":"api/docs/AttachRoleRequest/#attachrolerequest","text":"","title":"AttachRoleRequest"},{"location":"api/docs/AttachRoleRequest/#properties","text":"Name Type Description Notes role_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AttributeUpdate/","text":"AttributeUpdate \u00b6 Properties \u00b6 Name Type Description Notes key str [optional] value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AttributeUpdate"},{"location":"api/docs/AttributeUpdate/#attributeupdate","text":"","title":"AttributeUpdate"},{"location":"api/docs/AttributeUpdate/#properties","text":"Name Type Description Notes key str [optional] value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AuditLogApi/","text":"soracom_api.AuditLogApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_api_audit_logs GET /audit_logs/api Retrieve audit logs for API calls get_napter_audit_logs GET /audit_logs/napter Retrieve audit logs for Napter get_api_audit_logs \u00b6 [APIAuditLogEntry] get_api_audit_logs() Retrieve audit logs for API calls Retrieve audit logs for API calls. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import audit_log_api from soracom_api.model.api_audit_log_entry import APIAuditLogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) api_kind = \"api_kind_example\" # str | Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). (optional) from_epoch_ms = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to_epoch_ms = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Retrieve audit logs for API calls api_response = api_instance.get_api_audit_logs(api_kind=api_kind, from_epoch_ms=from_epoch_ms, to_epoch_ms=to_epoch_ms, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_api_audit_logs: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes api_kind str Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). [optional] from_epoch_ms int Start time for the log search range (unixtime milliseconds). [optional] to_epoch_ms int End time for the log search range (unixtime milliseconds). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [APIAuditLogEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of API audit log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_napter_audit_logs \u00b6 [NapterAuditLogEntry] get_napter_audit_logs() Retrieve audit logs for Napter Retrieve audit logs for Napter. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import audit_log_api from soracom_api.model.napter_audit_log_entry import NapterAuditLogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) resource_type = \"Subscriber\" # str | Type of the target resource to query Napter audit log entries. (optional) if omitted the server will use the default value of \"Subscriber\" resource_id = \"resource_id_example\" # str | Identity of the target resource to query log entries. (optional) _from = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Retrieve audit logs for Napter api_response = api_instance.get_napter_audit_logs(resource_type=resource_type, resource_id=resource_id, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_napter_audit_logs: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of the target resource to query Napter audit log entries. [optional] if omitted the server will use the default value of \"Subscriber\" resource_id str Identity of the target resource to query log entries. [optional] _from int Start time for the log search range (unixtime milliseconds). [optional] to int End time for the log search range (unixtime milliseconds). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [NapterAuditLogEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of Napter audit log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.AuditLogApi"},{"location":"api/docs/AuditLogApi/#soracom_apiauditlogapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_api_audit_logs GET /audit_logs/api Retrieve audit logs for API calls get_napter_audit_logs GET /audit_logs/napter Retrieve audit logs for Napter","title":"soracom_api.AuditLogApi"},{"location":"api/docs/AuditLogApi/#get_api_audit_logs","text":"[APIAuditLogEntry] get_api_audit_logs() Retrieve audit logs for API calls Retrieve audit logs for API calls.","title":"get_api_audit_logs"},{"location":"api/docs/AuditLogApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import audit_log_api from soracom_api.model.api_audit_log_entry import APIAuditLogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) api_kind = \"api_kind_example\" # str | Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). (optional) from_epoch_ms = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to_epoch_ms = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Retrieve audit logs for API calls api_response = api_instance.get_api_audit_logs(api_kind=api_kind, from_epoch_ms=from_epoch_ms, to_epoch_ms=to_epoch_ms, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_api_audit_logs: %s\\n\" % e)","title":"Example"},{"location":"api/docs/AuditLogApi/#parameters","text":"Name Type Description Notes api_kind str Filter item for audit log retrieval by API kind (e.g. `/v1/auth`). [optional] from_epoch_ms int Start time for the log search range (unixtime milliseconds). [optional] to_epoch_ms int End time for the log search range (unixtime milliseconds). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `requestedTimeEpochMs` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/AuditLogApi/#return-type","text":"[APIAuditLogEntry]","title":"Return type"},{"location":"api/docs/AuditLogApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/AuditLogApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/AuditLogApi/#http-response-details","text":"Status code Description Response headers 200 A list of API audit log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/AuditLogApi/#get_napter_audit_logs","text":"[NapterAuditLogEntry] get_napter_audit_logs() Retrieve audit logs for Napter Retrieve audit logs for Napter.","title":"get_napter_audit_logs"},{"location":"api/docs/AuditLogApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import audit_log_api from soracom_api.model.napter_audit_log_entry import NapterAuditLogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = audit_log_api.AuditLogApi(api_client) resource_type = \"Subscriber\" # str | Type of the target resource to query Napter audit log entries. (optional) if omitted the server will use the default value of \"Subscriber\" resource_id = \"resource_id_example\" # str | Identity of the target resource to query log entries. (optional) _from = 1 # int | Start time for the log search range (unixtime milliseconds). (optional) to = 1 # int | End time for the log search range (unixtime milliseconds). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Retrieve audit logs for Napter api_response = api_instance.get_napter_audit_logs(resource_type=resource_type, resource_id=resource_id, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuditLogApi->get_napter_audit_logs: %s\\n\" % e)","title":"Example"},{"location":"api/docs/AuditLogApi/#parameters_1","text":"Name Type Description Notes resource_type str Type of the target resource to query Napter audit log entries. [optional] if omitted the server will use the default value of \"Subscriber\" resource_id str Identity of the target resource to query log entries. [optional] _from int Start time for the log search range (unixtime milliseconds). [optional] to int End time for the log search range (unixtime milliseconds). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/AuditLogApi/#return-type_1","text":"[NapterAuditLogEntry]","title":"Return type"},{"location":"api/docs/AuditLogApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/AuditLogApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/AuditLogApi/#http-response-details_1","text":"Status code Description Response headers 200 A list of Napter audit log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/AuthApi/","text":"soracom_api.AuthApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description auth POST /auth Performs authentication to access to the SORACOM API. issue_password_reset_token POST /auth/password_reset_token/issue Issues a password reset token for the operator. verify_password_reset_token POST /auth/password_reset_token/verify Verifies the password reset token and updates password. auth \u00b6 AuthResponse auth(auth_request) Performs authentication to access to the SORACOM API. Performs authentication to access to the SORACOM API. To perform authentication by a root account, specify email and password . To perform authentication by an AuthKey, specify authKeyId and authKey . To perform authentication by a SAM user, specify operatorId , userName and password . An API Key and an API Token will be included in the response if successful. Specify the API Key and the API Token to requests afterwards Example \u00b6 import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.auth_response import AuthResponse from soracom_api.model.auth_request import AuthRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) auth_request = AuthRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", email=\"email_example\", mfa_otp_code=\"mfa_otp_code_example\", operator_id=\"operator_id_example\", password=\"password_example\", token_timeout_seconds=86400, user_name=\"user_name_example\", ) # AuthRequest | Authentication request. # example passing only required values which don't have defaults set try: # Performs authentication to access to the SORACOM API. api_response = api_instance.auth(auth_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->auth: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes auth_request AuthRequest Authentication request. Return type \u00b6 AuthResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Authentication successful. - 401 Authentication failed. - [Back to top] [Back to API list] [Back to Model list] [Back to README] issue_password_reset_token \u00b6 issue_password_reset_token(issue_password_reset_token_request) Issues a password reset token for the operator. Generates a password reset token and send it to the operator's mail address. After receiving the password reset token, call /v1/auth/password_reset_token/verify API with the token to update operator's password. Example \u00b6 import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.issue_password_reset_token_request import IssuePasswordResetTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) issue_password_reset_token_request = IssuePasswordResetTokenRequest( email=\"email_example\", ) # IssuePasswordResetTokenRequest | email address # example passing only required values which don't have defaults set try: # Issues a password reset token for the operator. api_instance.issue_password_reset_token(issue_password_reset_token_request) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->issue_password_reset_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes issue_password_reset_token_request IssuePasswordResetTokenRequest email address Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid email address. - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_password_reset_token \u00b6 verify_password_reset_token(verify_password_reset_token_request) Verifies the password reset token and updates password. Updates the operator's password if the password reset token is verified. Example \u00b6 import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.verify_password_reset_token_request import VerifyPasswordResetTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) verify_password_reset_token_request = VerifyPasswordResetTokenRequest( password=\"password_example\", token=\"token_example\", ) # VerifyPasswordResetTokenRequest | token, password # example passing only required values which don't have defaults set try: # Verifies the password reset token and updates password. api_instance.verify_password_reset_token(verify_password_reset_token_request) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->verify_password_reset_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes verify_password_reset_token_request VerifyPasswordResetTokenRequest token, password Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid token. - 404 Token expired. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.AuthApi"},{"location":"api/docs/AuthApi/#soracom_apiauthapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description auth POST /auth Performs authentication to access to the SORACOM API. issue_password_reset_token POST /auth/password_reset_token/issue Issues a password reset token for the operator. verify_password_reset_token POST /auth/password_reset_token/verify Verifies the password reset token and updates password.","title":"soracom_api.AuthApi"},{"location":"api/docs/AuthApi/#auth","text":"AuthResponse auth(auth_request) Performs authentication to access to the SORACOM API. Performs authentication to access to the SORACOM API. To perform authentication by a root account, specify email and password . To perform authentication by an AuthKey, specify authKeyId and authKey . To perform authentication by a SAM user, specify operatorId , userName and password . An API Key and an API Token will be included in the response if successful. Specify the API Key and the API Token to requests afterwards","title":"auth"},{"location":"api/docs/AuthApi/#example","text":"import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.auth_response import AuthResponse from soracom_api.model.auth_request import AuthRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) auth_request = AuthRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", email=\"email_example\", mfa_otp_code=\"mfa_otp_code_example\", operator_id=\"operator_id_example\", password=\"password_example\", token_timeout_seconds=86400, user_name=\"user_name_example\", ) # AuthRequest | Authentication request. # example passing only required values which don't have defaults set try: # Performs authentication to access to the SORACOM API. api_response = api_instance.auth(auth_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->auth: %s\\n\" % e)","title":"Example"},{"location":"api/docs/AuthApi/#parameters","text":"Name Type Description Notes auth_request AuthRequest Authentication request.","title":"Parameters"},{"location":"api/docs/AuthApi/#return-type","text":"AuthResponse","title":"Return type"},{"location":"api/docs/AuthApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"api/docs/AuthApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/AuthApi/#http-response-details","text":"Status code Description Response headers 200 Authentication successful. - 401 Authentication failed. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/AuthApi/#issue_password_reset_token","text":"issue_password_reset_token(issue_password_reset_token_request) Issues a password reset token for the operator. Generates a password reset token and send it to the operator's mail address. After receiving the password reset token, call /v1/auth/password_reset_token/verify API with the token to update operator's password.","title":"issue_password_reset_token"},{"location":"api/docs/AuthApi/#example_1","text":"import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.issue_password_reset_token_request import IssuePasswordResetTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) issue_password_reset_token_request = IssuePasswordResetTokenRequest( email=\"email_example\", ) # IssuePasswordResetTokenRequest | email address # example passing only required values which don't have defaults set try: # Issues a password reset token for the operator. api_instance.issue_password_reset_token(issue_password_reset_token_request) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->issue_password_reset_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/AuthApi/#parameters_1","text":"Name Type Description Notes issue_password_reset_token_request IssuePasswordResetTokenRequest email address","title":"Parameters"},{"location":"api/docs/AuthApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/AuthApi/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"api/docs/AuthApi/#http-request-headers_1","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/AuthApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - 400 Invalid email address. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/AuthApi/#verify_password_reset_token","text":"verify_password_reset_token(verify_password_reset_token_request) Verifies the password reset token and updates password. Updates the operator's password if the password reset token is verified.","title":"verify_password_reset_token"},{"location":"api/docs/AuthApi/#example_2","text":"import time import soracom_api from soracom_api.api import auth_api from soracom_api.model.verify_password_reset_token_request import VerifyPasswordResetTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = auth_api.AuthApi(api_client) verify_password_reset_token_request = VerifyPasswordResetTokenRequest( password=\"password_example\", token=\"token_example\", ) # VerifyPasswordResetTokenRequest | token, password # example passing only required values which don't have defaults set try: # Verifies the password reset token and updates password. api_instance.verify_password_reset_token(verify_password_reset_token_request) except soracom_api.ApiException as e: print(\"Exception when calling AuthApi->verify_password_reset_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/AuthApi/#parameters_2","text":"Name Type Description Notes verify_password_reset_token_request VerifyPasswordResetTokenRequest token, password","title":"Parameters"},{"location":"api/docs/AuthApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/AuthApi/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"api/docs/AuthApi/#http-request-headers_2","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/AuthApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - 400 Invalid token. - 404 Token expired. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/AuthKeyResponse/","text":"AuthKeyResponse \u00b6 Properties \u00b6 Name Type Description Notes auth_key_id str [optional] create_date_time int [optional] last_used_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AuthKeyResponse"},{"location":"api/docs/AuthKeyResponse/#authkeyresponse","text":"","title":"AuthKeyResponse"},{"location":"api/docs/AuthKeyResponse/#properties","text":"Name Type Description Notes auth_key_id str [optional] create_date_time int [optional] last_used_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AuthRequest/","text":"AuthRequest \u00b6 Properties \u00b6 Name Type Description Notes auth_key str [optional] auth_key_id str [optional] email str [optional] mfa_otp_code str [optional] operator_id str [optional] password str [optional] token_timeout_seconds int [optional] if omitted the server will use the default value of 86400 user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AuthRequest"},{"location":"api/docs/AuthRequest/#authrequest","text":"","title":"AuthRequest"},{"location":"api/docs/AuthRequest/#properties","text":"Name Type Description Notes auth_key str [optional] auth_key_id str [optional] email str [optional] mfa_otp_code str [optional] operator_id str [optional] password str [optional] token_timeout_seconds int [optional] if omitted the server will use the default value of 86400 user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AuthResponse/","text":"AuthResponse \u00b6 Properties \u00b6 Name Type Description Notes api_key str [optional] operator_id str [optional] token str [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AuthResponse"},{"location":"api/docs/AuthResponse/#authresponse","text":"","title":"AuthResponse"},{"location":"api/docs/AuthResponse/#properties","text":"Name Type Description Notes api_key str [optional] operator_id str [optional] token str [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AvailableLongTermDiscountModel/","text":"AvailableLongTermDiscountModel \u00b6 Properties \u00b6 Name Type Description Notes contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AvailableLongTermDiscountModel"},{"location":"api/docs/AvailableLongTermDiscountModel/#availablelongtermdiscountmodel","text":"","title":"AvailableLongTermDiscountModel"},{"location":"api/docs/AvailableLongTermDiscountModel/#properties","text":"Name Type Description Notes contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/AvailableLongTermDiscountResponse/","text":"AvailableLongTermDiscountResponse \u00b6 Properties \u00b6 Name Type Description Notes available_long_term_discounts [AvailableLongTermDiscountModel] List of available long term discounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"AvailableLongTermDiscountResponse"},{"location":"api/docs/AvailableLongTermDiscountResponse/#availablelongtermdiscountresponse","text":"","title":"AvailableLongTermDiscountResponse"},{"location":"api/docs/AvailableLongTermDiscountResponse/#properties","text":"Name Type Description Notes available_long_term_discounts [AvailableLongTermDiscountModel] List of available long term discounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/BeamStatsResponse/","text":"BeamStatsResponse \u00b6 Properties \u00b6 Name Type Description Notes beam_stats_map {str: (SoracomBeamStats,)} [optional] date str [optional] unixtime int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"BeamStatsResponse"},{"location":"api/docs/BeamStatsResponse/#beamstatsresponse","text":"","title":"BeamStatsResponse"},{"location":"api/docs/BeamStatsResponse/#properties","text":"Name Type Description Notes beam_stats_map {str: (SoracomBeamStats,)} [optional] date str [optional] unixtime int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/BillingApi/","text":"soracom_api.BillingApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description export_billing POST /bills/{yyyyMM}/export Output billing CSV file to S3. export_latest_billing POST /bills/latest/export Export latest billing CSV file to S3. get_billing GET /bills/{yyyyMM} Get bill. get_billing_history GET /bills Get billing history. get_billing_per_day GET /bills/{yyyyMM}/daily Get bill per day. get_latest_billing GET /bills/latest Get latest bill. export_billing \u00b6 FileExportResponse export_billing(yyyy_mm) Output billing CSV file to S3. Returns detailed information for the billing amounts for the specified month. This detailed information includes billing amounts per day, subscriber, and billing item. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | yyyyMM export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Output billing CSV file to S3. api_response = api_instance.export_billing(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_billing: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Output billing CSV file to S3. api_response = api_instance.export_billing(yyyy_mm, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_billing: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes yyyy_mm str yyyyMM export_mode str export_mode (async, sync) [optional] Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_latest_billing \u00b6 FileExportResponse export_latest_billing() Export latest billing CSV file to S3. Returns detailed information of the billing amounts for the latest month. This detailed information includes billing amounts per day, subscriber, and billing item. The amounts retrieved using this API correspond to the values before the invoice was finalized. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set # and optional values try: # Export latest billing CSV file to S3. api_response = api_instance.export_latest_billing(export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_latest_billing: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes export_mode str export_mode (async, sync) [optional] Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_billing \u00b6 MonthlyBill get_billing(yyyy_mm) Get bill. Returns the billing history for the specified month (after applied discounts such as free tiers, etc., inclusive of tax). The amounts retrieved using this API correspond to the values before the invoice was finalized. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.monthly_bill import MonthlyBill from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | year and month # example passing only required values which don't have defaults set try: # Get bill. api_response = api_instance.get_billing(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes yyyy_mm str year and month Return type \u00b6 MonthlyBill Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_billing_history \u00b6 GetBillingHistoryResponse get_billing_history() Get billing history. Returns past billing history (after applied discounts such as free tiers, etc., inclusive of tax). This API only returns the billing amounts that have been finalized at the end of the month. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.get_billing_history_response import GetBillingHistoryResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) # example, this endpoint has no required or optional parameters try: # Get billing history. api_response = api_instance.get_billing_history() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing_history: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 GetBillingHistoryResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_billing_per_day \u00b6 DailyBillResponse get_billing_per_day(yyyy_mm) Get bill per day. Returns detailed information of billing amounts per day for the specified month. This API only returns the billing amounts that have been finalized. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.daily_bill_response import DailyBillResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | year and month # example passing only required values which don't have defaults set try: # Get bill per day. api_response = api_instance.get_billing_per_day(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing_per_day: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes yyyy_mm str year and month Return type \u00b6 DailyBillResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_latest_billing \u00b6 GetLatestBill get_latest_billing() Get latest bill. Returns the latest billing amounts after applied discounts such as free tiers, etc. The amounts retrieved using this API correspond to the values before the invoice was finalized. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.get_latest_bill import GetLatestBill from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) # example, this endpoint has no required or optional parameters try: # Get latest bill. api_response = api_instance.get_latest_billing() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_latest_billing: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 GetLatestBill Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.BillingApi"},{"location":"api/docs/BillingApi/#soracom_apibillingapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description export_billing POST /bills/{yyyyMM}/export Output billing CSV file to S3. export_latest_billing POST /bills/latest/export Export latest billing CSV file to S3. get_billing GET /bills/{yyyyMM} Get bill. get_billing_history GET /bills Get billing history. get_billing_per_day GET /bills/{yyyyMM}/daily Get bill per day. get_latest_billing GET /bills/latest Get latest bill.","title":"soracom_api.BillingApi"},{"location":"api/docs/BillingApi/#export_billing","text":"FileExportResponse export_billing(yyyy_mm) Output billing CSV file to S3. Returns detailed information for the billing amounts for the specified month. This detailed information includes billing amounts per day, subscriber, and billing item.","title":"export_billing"},{"location":"api/docs/BillingApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | yyyyMM export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Output billing CSV file to S3. api_response = api_instance.export_billing(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_billing: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Output billing CSV file to S3. api_response = api_instance.export_billing(yyyy_mm, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_billing: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters","text":"Name Type Description Notes yyyy_mm str yyyyMM export_mode str export_mode (async, sync) [optional]","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/BillingApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/BillingApi/#export_latest_billing","text":"FileExportResponse export_latest_billing() Export latest billing CSV file to S3. Returns detailed information of the billing amounts for the latest month. This detailed information includes billing amounts per day, subscriber, and billing item. The amounts retrieved using this API correspond to the values before the invoice was finalized.","title":"export_latest_billing"},{"location":"api/docs/BillingApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set # and optional values try: # Export latest billing CSV file to S3. api_response = api_instance.export_latest_billing(export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->export_latest_billing: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters_1","text":"Name Type Description Notes export_mode str export_mode (async, sync) [optional]","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type_1","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/BillingApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/BillingApi/#get_billing","text":"MonthlyBill get_billing(yyyy_mm) Get bill. Returns the billing history for the specified month (after applied discounts such as free tiers, etc., inclusive of tax). The amounts retrieved using this API correspond to the values before the invoice was finalized.","title":"get_billing"},{"location":"api/docs/BillingApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.monthly_bill import MonthlyBill from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | year and month # example passing only required values which don't have defaults set try: # Get bill. api_response = api_instance.get_billing(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters_2","text":"Name Type Description Notes yyyy_mm str year and month","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type_2","text":"MonthlyBill","title":"Return type"},{"location":"api/docs/BillingApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/BillingApi/#get_billing_history","text":"GetBillingHistoryResponse get_billing_history() Get billing history. Returns past billing history (after applied discounts such as free tiers, etc., inclusive of tax). This API only returns the billing amounts that have been finalized at the end of the month.","title":"get_billing_history"},{"location":"api/docs/BillingApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.get_billing_history_response import GetBillingHistoryResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) # example, this endpoint has no required or optional parameters try: # Get billing history. api_response = api_instance.get_billing_history() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing_history: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters_3","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type_3","text":"GetBillingHistoryResponse","title":"Return type"},{"location":"api/docs/BillingApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/BillingApi/#get_billing_per_day","text":"DailyBillResponse get_billing_per_day(yyyy_mm) Get bill per day. Returns detailed information of billing amounts per day for the specified month. This API only returns the billing amounts that have been finalized.","title":"get_billing_per_day"},{"location":"api/docs/BillingApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.daily_bill_response import DailyBillResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) yyyy_mm = \"yyyyMM_example\" # str | year and month # example passing only required values which don't have defaults set try: # Get bill per day. api_response = api_instance.get_billing_per_day(yyyy_mm) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_billing_per_day: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters_4","text":"Name Type Description Notes yyyy_mm str year and month","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type_4","text":"DailyBillResponse","title":"Return type"},{"location":"api/docs/BillingApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/BillingApi/#get_latest_billing","text":"GetLatestBill get_latest_billing() Get latest bill. Returns the latest billing amounts after applied discounts such as free tiers, etc. The amounts retrieved using this API correspond to the values before the invoice was finalized.","title":"get_latest_billing"},{"location":"api/docs/BillingApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import billing_api from soracom_api.model.get_latest_bill import GetLatestBill from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = billing_api.BillingApi(api_client) # example, this endpoint has no required or optional parameters try: # Get latest bill. api_response = api_instance.get_latest_billing() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling BillingApi->get_latest_billing: %s\\n\" % e)","title":"Example"},{"location":"api/docs/BillingApi/#parameters_5","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/BillingApi/#return-type_5","text":"GetLatestBill","title":"Return type"},{"location":"api/docs/BillingApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/BillingApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/BillingApi/#http-response-details_5","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/Capabilities/","text":"Capabilities \u00b6 Properties \u00b6 Name Type Description Notes data bool [optional] sms bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Capabilities"},{"location":"api/docs/Capabilities/#capabilities","text":"","title":"Capabilities"},{"location":"api/docs/Capabilities/#properties","text":"Name Type Description Notes data bool [optional] sms bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Cell/","text":"Cell \u00b6 Properties \u00b6 Name Type Description Notes ci int The Cell Identity (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.3) [optional] eci int The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value represented in decimal form as a long. (See 3GPP TS 23.003 19.6) [optional] lac int The Location Area Code (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.1) [optional] mcc int The Mobile Country Code, a 3 digit number. [optional] mnc int The Mobile Network Code, a 2 or 3 digit number. If the value returned is only 1 digit in length, then you should prepend the value with a leading zero. [optional] rac int The Routing Area Code (for 2G and 3G networks), an 8 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.2) [optional] radio_type str The Radio Access Technology or type of network that the device is connected to. Possible values are \\\"gsm\\\" for 2G or 3G networks, or \\\"lte\\\" for LTE networks. Unfortunately, it is not possible to differentiate 2G from 3G, or LTE from LTE Cat-M1. [optional] sac int The Service Area Code (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 12.5) [optional] tac int The Tracking Area Code (for LTE networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Cell"},{"location":"api/docs/Cell/#cell","text":"","title":"Cell"},{"location":"api/docs/Cell/#properties","text":"Name Type Description Notes ci int The Cell Identity (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.3) [optional] eci int The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value represented in decimal form as a long. (See 3GPP TS 23.003 19.6) [optional] lac int The Location Area Code (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.1) [optional] mcc int The Mobile Country Code, a 3 digit number. [optional] mnc int The Mobile Network Code, a 2 or 3 digit number. If the value returned is only 1 digit in length, then you should prepend the value with a leading zero. [optional] rac int The Routing Area Code (for 2G and 3G networks), an 8 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 4.2) [optional] radio_type str The Radio Access Technology or type of network that the device is connected to. Possible values are \\\"gsm\\\" for 2G or 3G networks, or \\\"lte\\\" for LTE networks. Unfortunately, it is not possible to differentiate 2G from 3G, or LTE from LTE Cat-M1. [optional] sac int The Service Area Code (for 2G and 3G networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 12.5) [optional] tac int The Tracking Area Code (for LTE networks), a 16 bit value represented in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CellIdentifier/","text":"CellIdentifier \u00b6 Properties \u00b6 Name Type Description Notes cid str [optional] eci str [optional] ecid str [optional] identifier str optionally link the result to the request [optional] lac str [optional] mcc str [optional] mnc str [optional] tac str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CellIdentifier"},{"location":"api/docs/CellIdentifier/#cellidentifier","text":"","title":"CellIdentifier"},{"location":"api/docs/CellIdentifier/#properties","text":"Name Type Description Notes cid str [optional] eci str [optional] ecid str [optional] identifier str optionally link the result to the request [optional] lac str [optional] mcc str [optional] mnc str [optional] tac str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CellLocation/","text":"CellLocation \u00b6 Properties \u00b6 Name Type Description Notes avg_strength int Average signal strength from all observations for the cell network. This is an integer value, in dBm. [optional] created datetime Timestamp of the time when this record was first created. [optional] exact int Whether or not this cell is a position estimate based on observations subject to change in the future (`0`) or an exact location entered from a knowledgeable source (`1`). [optional] lat float Latitude [optional] lon float Longitude [optional] range int Estimate of radio range, in meters. This is an estimate on how large each cell area is, as a radius around the estimated position and is based on the observations or a knowledgeable source. [optional] samples int Total number of observations used to calculate the estimated position, range and avg_strength. [optional] updated datetime Timestamp of the time when this record was most recently modified. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CellLocation"},{"location":"api/docs/CellLocation/#celllocation","text":"","title":"CellLocation"},{"location":"api/docs/CellLocation/#properties","text":"Name Type Description Notes avg_strength int Average signal strength from all observations for the cell network. This is an integer value, in dBm. [optional] created datetime Timestamp of the time when this record was first created. [optional] exact int Whether or not this cell is a position estimate based on observations subject to change in the future (`0`) or an exact location entered from a knowledgeable source (`1`). [optional] lat float Latitude [optional] lon float Longitude [optional] range int Estimate of radio range, in meters. This is an estimate on how large each cell area is, as a radius around the estimated position and is based on the observations or a knowledgeable source. [optional] samples int Total number of observations used to calculate the estimated position, range and avg_strength. [optional] updated datetime Timestamp of the time when this record was most recently modified. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CellLocationApi/","text":"soracom_api.CellLocationApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description batch_get_cell_locations POST /cell_locations List location information for multiple cell towers. get_cell_location GET /cell_locations Get location information for a cell tower. batch_get_cell_locations \u00b6 [CellLocation] batch_get_cell_locations(cell_identifier) List location information for multiple cell towers. Retrieves a list of location information (latitude / longitude) for multiple cell towers which are identified by Cell IDs etc. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import cell_location_api from soracom_api.model.cell_identifier import CellIdentifier from soracom_api.model.cell_location import CellLocation from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = cell_location_api.CellLocationApi(api_client) cell_identifier = [ CellIdentifier( cid=\"cid_example\", eci=\"eci_example\", ecid=\"ecid_example\", identifier=\"identifier_example\", lac=\"lac_example\", mcc=\"mcc_example\", mnc=\"mnc_example\", tac=\"tac_example\", ), ] # [CellIdentifier] | List of cell identifiers. # example passing only required values which don't have defaults set try: # List location information for multiple cell towers. api_response = api_instance.batch_get_cell_locations(cell_identifier) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->batch_get_cell_locations: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes cell_identifier [CellIdentifier] List of cell identifiers. Return type \u00b6 [CellLocation] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of location information for the specified cell towers - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_cell_location \u00b6 CellLocation get_cell_location(mcc, mnc) Get location information for a cell tower. Retrieves location information (latitude / longitude) for a cell tower which is identified by Cell ID etc. Please specify MCC, MNC, LAC and CID when the access radio technology is 3G. It is possible to retrieve location information without CID, but the location information will be low accuracy. For LTE (4G), please specify MCC, MNC, TAC and ECID. As it is based on an open database to convert cell information into location information, the location information does not exist or might be incorrect. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import cell_location_api from soracom_api.model.cell_location import CellLocation from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = cell_location_api.CellLocationApi(api_client) mcc = \"mcc_example\" # str | MCC - Mobile Country Code mnc = \"mnc_example\" # str | MNC - Mobile Network Code lac = \"lac_example\" # str | LAC - Location Area Code (for 3G) (optional) cid = \"cid_example\" # str | CID - Cell ID (for 3G) (optional) tac = \"tac_example\" # str | TAC - Tracking Area Code (for 4G) (optional) ecid = \"ecid_example\" # str | ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` (optional) eci = \"eci_example\" # str | ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` (optional) # example passing only required values which don't have defaults set try: # Get location information for a cell tower. api_response = api_instance.get_cell_location(mcc, mnc) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->get_cell_location: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get location information for a cell tower. api_response = api_instance.get_cell_location(mcc, mnc, lac=lac, cid=cid, tac=tac, ecid=ecid, eci=eci) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->get_cell_location: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes mcc str MCC - Mobile Country Code mnc str MNC - Mobile Network Code lac str LAC - Location Area Code (for 3G) [optional] cid str CID - Cell ID (for 3G) [optional] tac str TAC - Tracking Area Code (for 4G) [optional] ecid str ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` [optional] eci str ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` [optional] Return type \u00b6 CellLocation Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Location information for the cell tower - 404 Location information is not found for the cell tower - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.CellLocationApi"},{"location":"api/docs/CellLocationApi/#soracom_apicelllocationapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description batch_get_cell_locations POST /cell_locations List location information for multiple cell towers. get_cell_location GET /cell_locations Get location information for a cell tower.","title":"soracom_api.CellLocationApi"},{"location":"api/docs/CellLocationApi/#batch_get_cell_locations","text":"[CellLocation] batch_get_cell_locations(cell_identifier) List location information for multiple cell towers. Retrieves a list of location information (latitude / longitude) for multiple cell towers which are identified by Cell IDs etc.","title":"batch_get_cell_locations"},{"location":"api/docs/CellLocationApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import cell_location_api from soracom_api.model.cell_identifier import CellIdentifier from soracom_api.model.cell_location import CellLocation from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = cell_location_api.CellLocationApi(api_client) cell_identifier = [ CellIdentifier( cid=\"cid_example\", eci=\"eci_example\", ecid=\"ecid_example\", identifier=\"identifier_example\", lac=\"lac_example\", mcc=\"mcc_example\", mnc=\"mnc_example\", tac=\"tac_example\", ), ] # [CellIdentifier] | List of cell identifiers. # example passing only required values which don't have defaults set try: # List location information for multiple cell towers. api_response = api_instance.batch_get_cell_locations(cell_identifier) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->batch_get_cell_locations: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CellLocationApi/#parameters","text":"Name Type Description Notes cell_identifier [CellIdentifier] List of cell identifiers.","title":"Parameters"},{"location":"api/docs/CellLocationApi/#return-type","text":"[CellLocation]","title":"Return type"},{"location":"api/docs/CellLocationApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CellLocationApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/CellLocationApi/#http-response-details","text":"Status code Description Response headers 200 List of location information for the specified cell towers - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CellLocationApi/#get_cell_location","text":"CellLocation get_cell_location(mcc, mnc) Get location information for a cell tower. Retrieves location information (latitude / longitude) for a cell tower which is identified by Cell ID etc. Please specify MCC, MNC, LAC and CID when the access radio technology is 3G. It is possible to retrieve location information without CID, but the location information will be low accuracy. For LTE (4G), please specify MCC, MNC, TAC and ECID. As it is based on an open database to convert cell information into location information, the location information does not exist or might be incorrect.","title":"get_cell_location"},{"location":"api/docs/CellLocationApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import cell_location_api from soracom_api.model.cell_location import CellLocation from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = cell_location_api.CellLocationApi(api_client) mcc = \"mcc_example\" # str | MCC - Mobile Country Code mnc = \"mnc_example\" # str | MNC - Mobile Network Code lac = \"lac_example\" # str | LAC - Location Area Code (for 3G) (optional) cid = \"cid_example\" # str | CID - Cell ID (for 3G) (optional) tac = \"tac_example\" # str | TAC - Tracking Area Code (for 4G) (optional) ecid = \"ecid_example\" # str | ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` (optional) eci = \"eci_example\" # str | ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` (optional) # example passing only required values which don't have defaults set try: # Get location information for a cell tower. api_response = api_instance.get_cell_location(mcc, mnc) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->get_cell_location: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get location information for a cell tower. api_response = api_instance.get_cell_location(mcc, mnc, lac=lac, cid=cid, tac=tac, ecid=ecid, eci=eci) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CellLocationApi->get_cell_location: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CellLocationApi/#parameters_1","text":"Name Type Description Notes mcc str MCC - Mobile Country Code mnc str MNC - Mobile Network Code lac str LAC - Location Area Code (for 3G) [optional] cid str CID - Cell ID (for 3G) [optional] tac str TAC - Tracking Area Code (for 4G) [optional] ecid str ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` [optional] eci str ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci` [optional]","title":"Parameters"},{"location":"api/docs/CellLocationApi/#return-type_1","text":"CellLocation","title":"Return type"},{"location":"api/docs/CellLocationApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CellLocationApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/CellLocationApi/#http-response-details_1","text":"Status code Description Response headers 200 Location information for the cell tower - 404 Location information is not found for the cell tower - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CompanyInformationModel/","text":"CompanyInformationModel \u00b6 Properties \u00b6 Name Type Description Notes company_name str contact_person_name str country_code str department str phone_number str zip_code str address_line1 str [optional] address_line2 str [optional] building str [optional] city str [optional] state str [optional] vat_identification_number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CompanyInformationModel"},{"location":"api/docs/CompanyInformationModel/#companyinformationmodel","text":"","title":"CompanyInformationModel"},{"location":"api/docs/CompanyInformationModel/#properties","text":"Name Type Description Notes company_name str contact_person_name str country_code str department str phone_number str zip_code str address_line1 str [optional] address_line2 str [optional] building str [optional] city str [optional] state str [optional] vat_identification_number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ContractUpdatedResponse/","text":"ContractUpdatedResponse \u00b6 Properties \u00b6 Name Type Description Notes contract_detail {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] contract_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ContractUpdatedResponse"},{"location":"api/docs/ContractUpdatedResponse/#contractupdatedresponse","text":"","title":"ContractUpdatedResponse"},{"location":"api/docs/ContractUpdatedResponse/#properties","text":"Name Type Description Notes contract_detail {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] contract_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ContractUpdatingRequest/","text":"ContractUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes contract_detail {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] contract_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ContractUpdatingRequest"},{"location":"api/docs/ContractUpdatingRequest/#contractupdatingrequest","text":"","title":"ContractUpdatingRequest"},{"location":"api/docs/ContractUpdatingRequest/#properties","text":"Name Type Description Notes contract_detail {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] contract_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CouponResponse/","text":"CouponResponse \u00b6 Properties \u00b6 Name Type Description Notes amount float Amount [optional] balance float Balance [optional] bill_item_name str Item [optional] coupon_code str Coupon code [optional] expiry_year_month str Expiry month [optional] order_id str Order ID [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CouponResponse"},{"location":"api/docs/CouponResponse/#couponresponse","text":"","title":"CouponResponse"},{"location":"api/docs/CouponResponse/#properties","text":"Name Type Description Notes amount float Amount [optional] balance float Balance [optional] bill_item_name str Item [optional] coupon_code str Coupon code [optional] expiry_year_month str Expiry month [optional] order_id str Order ID [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateAndUpdateCredentialsModel/","text":"CreateAndUpdateCredentialsModel \u00b6 Properties \u00b6 Name Type Description Notes credentials {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] description str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateAndUpdateCredentialsModel"},{"location":"api/docs/CreateAndUpdateCredentialsModel/#createandupdatecredentialsmodel","text":"","title":"CreateAndUpdateCredentialsModel"},{"location":"api/docs/CreateAndUpdateCredentialsModel/#properties","text":"Name Type Description Notes credentials {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] description str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateEstimatedCouponRequest/","text":"CreateEstimatedCouponRequest \u00b6 Properties \u00b6 Name Type Description Notes amount float Amount any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateEstimatedCouponRequest"},{"location":"api/docs/CreateEstimatedCouponRequest/#createestimatedcouponrequest","text":"","title":"CreateEstimatedCouponRequest"},{"location":"api/docs/CreateEstimatedCouponRequest/#properties","text":"Name Type Description Notes amount float Amount any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateEstimatedOrderRequest/","text":"CreateEstimatedOrderRequest \u00b6 Properties \u00b6 Name Type Description Notes order_item_list [OrderItemModel] Order item list [optional] shipping_address_id str Shipping address ID [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateEstimatedOrderRequest"},{"location":"api/docs/CreateEstimatedOrderRequest/#createestimatedorderrequest","text":"","title":"CreateEstimatedOrderRequest"},{"location":"api/docs/CreateEstimatedOrderRequest/#properties","text":"Name Type Description Notes order_item_list [OrderItemModel] Order item list [optional] shipping_address_id str Shipping address ID [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateEstimatedVolumeDiscountRequest/","text":"CreateEstimatedVolumeDiscountRequest \u00b6 Properties \u00b6 Name Type Description Notes quantity int Quantity volume_discount_payment_type str Payment type volume_discount_type str Long term discount type contract_term_month int Contract months defaults to 12 start_date str Start date [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateEstimatedVolumeDiscountRequest"},{"location":"api/docs/CreateEstimatedVolumeDiscountRequest/#createestimatedvolumediscountrequest","text":"","title":"CreateEstimatedVolumeDiscountRequest"},{"location":"api/docs/CreateEstimatedVolumeDiscountRequest/#properties","text":"Name Type Description Notes quantity int Quantity volume_discount_payment_type str Payment type volume_discount_type str Long term discount type contract_term_month int Contract months defaults to 12 start_date str Start date [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateEventHandlerRequest/","text":"CreateEventHandlerRequest \u00b6 Properties \u00b6 Name Type Description Notes action_config_list [ActionConfig] rule_config RuleConfig status str description str [optional] name str [optional] target_group_id str [optional] target_imsi str [optional] target_operator_id str [optional] target_sim_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateEventHandlerRequest"},{"location":"api/docs/CreateEventHandlerRequest/#createeventhandlerrequest","text":"","title":"CreateEventHandlerRequest"},{"location":"api/docs/CreateEventHandlerRequest/#properties","text":"Name Type Description Notes action_config_list [ActionConfig] rule_config RuleConfig status str description str [optional] name str [optional] target_group_id str [optional] target_imsi str [optional] target_operator_id str [optional] target_sim_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateGroupRequest/","text":"CreateGroupRequest \u00b6 Properties \u00b6 Name Type Description Notes tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateGroupRequest"},{"location":"api/docs/CreateGroupRequest/#creategrouprequest","text":"","title":"CreateGroupRequest"},{"location":"api/docs/CreateGroupRequest/#properties","text":"Name Type Description Notes tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateOrUpdateRoleRequest/","text":"CreateOrUpdateRoleRequest \u00b6 Properties \u00b6 Name Type Description Notes permission str Permission\u306eJSON description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateOrUpdateRoleRequest"},{"location":"api/docs/CreateOrUpdateRoleRequest/#createorupdaterolerequest","text":"","title":"CreateOrUpdateRoleRequest"},{"location":"api/docs/CreateOrUpdateRoleRequest/#properties","text":"Name Type Description Notes permission str Permission\u306eJSON description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreatePortMappingRequest/","text":"CreatePortMappingRequest \u00b6 Properties \u00b6 Name Type Description Notes destination PortMappingDestination duration float Specify the duration, in seconds, that remote access should be enabled. [optional] source PortMappingSource [optional] tls_required bool Specify whether access uses TLS. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreatePortMappingRequest"},{"location":"api/docs/CreatePortMappingRequest/#createportmappingrequest","text":"","title":"CreatePortMappingRequest"},{"location":"api/docs/CreatePortMappingRequest/#properties","text":"Name Type Description Notes destination PortMappingDestination duration float Specify the duration, in seconds, that remote access should be enabled. [optional] source PortMappingSource [optional] tls_required bool Specify whether access uses TLS. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateRoleResponse/","text":"CreateRoleResponse \u00b6 Properties \u00b6 Name Type Description Notes role_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateRoleResponse"},{"location":"api/docs/CreateRoleResponse/#createroleresponse","text":"","title":"CreateRoleResponse"},{"location":"api/docs/CreateRoleResponse/#properties","text":"Name Type Description Notes role_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateSimRequest/","text":"CreateSimRequest \u00b6 Properties \u00b6 Name Type Description Notes subscription str, none_type type str defaults to \"virtual\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateSimRequest"},{"location":"api/docs/CreateSimRequest/#createsimrequest","text":"","title":"CreateSimRequest"},{"location":"api/docs/CreateSimRequest/#properties","text":"Name Type Description Notes subscription str, none_type type str defaults to \"virtual\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateSoraletRequest/","text":"CreateSoraletRequest \u00b6 Properties \u00b6 Name Type Description Notes soralet_id str description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateSoraletRequest"},{"location":"api/docs/CreateSoraletRequest/#createsoraletrequest","text":"","title":"CreateSoraletRequest"},{"location":"api/docs/CreateSoraletRequest/#properties","text":"Name Type Description Notes soralet_id str description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateUserPasswordRequest/","text":"CreateUserPasswordRequest \u00b6 Properties \u00b6 Name Type Description Notes password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateUserPasswordRequest"},{"location":"api/docs/CreateUserPasswordRequest/#createuserpasswordrequest","text":"","title":"CreateUserPasswordRequest"},{"location":"api/docs/CreateUserPasswordRequest/#properties","text":"Name Type Description Notes password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateUserRequest/","text":"CreateUserRequest \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateUserRequest"},{"location":"api/docs/CreateUserRequest/#createuserrequest","text":"","title":"CreateUserRequest"},{"location":"api/docs/CreateUserRequest/#properties","text":"Name Type Description Notes description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateVirtualPrivateGatewayRequest/","text":"CreateVirtualPrivateGatewayRequest \u00b6 Properties \u00b6 Name Type Description Notes type int VPG Type. - `14` : Type-E - `15` : Type-F device_subnet_cidr_range str [optional] if omitted the server will use the default value of \"10.128.0.0/9\" use_internet_gateway bool [optional] if omitted the server will use the default value of True any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateVirtualPrivateGatewayRequest"},{"location":"api/docs/CreateVirtualPrivateGatewayRequest/#createvirtualprivategatewayrequest","text":"","title":"CreateVirtualPrivateGatewayRequest"},{"location":"api/docs/CreateVirtualPrivateGatewayRequest/#properties","text":"Name Type Description Notes type int VPG Type. - `14` : Type-E - `15` : Type-F device_subnet_cidr_range str [optional] if omitted the server will use the default value of \"10.128.0.0/9\" use_internet_gateway bool [optional] if omitted the server will use the default value of True any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreateVpcPeeringConnectionRequest/","text":"CreateVpcPeeringConnectionRequest \u00b6 Properties \u00b6 Name Type Description Notes destination_cidr_block str [optional] peer_owner_id str [optional] peer_region str [optional] peer_vpc_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreateVpcPeeringConnectionRequest"},{"location":"api/docs/CreateVpcPeeringConnectionRequest/#createvpcpeeringconnectionrequest","text":"","title":"CreateVpcPeeringConnectionRequest"},{"location":"api/docs/CreateVpcPeeringConnectionRequest/#properties","text":"Name Type Description Notes destination_cidr_block str [optional] peer_owner_id str [optional] peer_region str [optional] peer_vpc_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CredentialApi/","text":"soracom_api.CredentialApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_credential POST /credentials/{credentials_id} Create a credential. delete_credential DELETE /credentials/{credentials_id} Delete a credential. list_credentials GET /credentials List of credentials. update_credential PUT /credentials/{credentials_id} Update a credential. create_credential \u00b6 CredentialsModel create_credential(credentials_id, create_and_update_credentials_model) Create a credential. Creates a new credential. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from soracom_api.model.create_and_update_credentials_model import CreateAndUpdateCredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | credentials_id create_and_update_credentials_model = CreateAndUpdateCredentialsModel( credentials={}, description=\"description_example\", type=\"aws-credentials\", ) # CreateAndUpdateCredentialsModel | credentials # example passing only required values which don't have defaults set try: # Create a credential. api_response = api_instance.create_credential(credentials_id, create_and_update_credentials_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->create_credential: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes credentials_id str credentials_id create_and_update_credentials_model CreateAndUpdateCredentialsModel credentials Return type \u00b6 CredentialsModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json;charset=UTF-8 Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_credential \u00b6 delete_credential(credentials_id) Delete a credential. Deletes a credential. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | Credentials ID # example passing only required values which don't have defaults set try: # Delete a credential. api_instance.delete_credential(credentials_id) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->delete_credential: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes credentials_id str Credentials ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deleted - 404 Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_credentials \u00b6 [CredentialsModel] list_credentials() List of credentials. Returns a list of credentials. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) # example, this endpoint has no required or optional parameters try: # List of credentials. api_response = api_instance.list_credentials() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->list_credentials: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 [CredentialsModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_credential \u00b6 CredentialsModel update_credential(credentials_id, create_and_update_credentials_model) Update a credential. Updates a credential. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from soracom_api.model.create_and_update_credentials_model import CreateAndUpdateCredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | credentials_id create_and_update_credentials_model = CreateAndUpdateCredentialsModel( credentials={}, description=\"description_example\", type=\"aws-credentials\", ) # CreateAndUpdateCredentialsModel | credentials # example passing only required values which don't have defaults set try: # Update a credential. api_response = api_instance.update_credential(credentials_id, create_and_update_credentials_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->update_credential: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes credentials_id str credentials_id create_and_update_credentials_model CreateAndUpdateCredentialsModel credentials Return type \u00b6 CredentialsModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json;charset=UTF-8 Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 There was an error in the request or the specified token has already expired. (In the latter case, you will need to use the /auth API to do authentication once again.) - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.CredentialApi"},{"location":"api/docs/CredentialApi/#soracom_apicredentialapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_credential POST /credentials/{credentials_id} Create a credential. delete_credential DELETE /credentials/{credentials_id} Delete a credential. list_credentials GET /credentials List of credentials. update_credential PUT /credentials/{credentials_id} Update a credential.","title":"soracom_api.CredentialApi"},{"location":"api/docs/CredentialApi/#create_credential","text":"CredentialsModel create_credential(credentials_id, create_and_update_credentials_model) Create a credential. Creates a new credential.","title":"create_credential"},{"location":"api/docs/CredentialApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from soracom_api.model.create_and_update_credentials_model import CreateAndUpdateCredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | credentials_id create_and_update_credentials_model = CreateAndUpdateCredentialsModel( credentials={}, description=\"description_example\", type=\"aws-credentials\", ) # CreateAndUpdateCredentialsModel | credentials # example passing only required values which don't have defaults set try: # Create a credential. api_response = api_instance.create_credential(credentials_id, create_and_update_credentials_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->create_credential: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CredentialApi/#parameters","text":"Name Type Description Notes credentials_id str credentials_id create_and_update_credentials_model CreateAndUpdateCredentialsModel credentials","title":"Parameters"},{"location":"api/docs/CredentialApi/#return-type","text":"CredentialsModel","title":"Return type"},{"location":"api/docs/CredentialApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CredentialApi/#http-request-headers","text":"Content-Type : application/json;charset=UTF-8 Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/CredentialApi/#http-response-details","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CredentialApi/#delete_credential","text":"delete_credential(credentials_id) Delete a credential. Deletes a credential.","title":"delete_credential"},{"location":"api/docs/CredentialApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | Credentials ID # example passing only required values which don't have defaults set try: # Delete a credential. api_instance.delete_credential(credentials_id) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->delete_credential: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CredentialApi/#parameters_1","text":"Name Type Description Notes credentials_id str Credentials ID","title":"Parameters"},{"location":"api/docs/CredentialApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/CredentialApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CredentialApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/CredentialApi/#http-response-details_1","text":"Status code Description Response headers 204 Deleted - 404 Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CredentialApi/#list_credentials","text":"[CredentialsModel] list_credentials() List of credentials. Returns a list of credentials.","title":"list_credentials"},{"location":"api/docs/CredentialApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) # example, this endpoint has no required or optional parameters try: # List of credentials. api_response = api_instance.list_credentials() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->list_credentials: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CredentialApi/#parameters_2","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/CredentialApi/#return-type_2","text":"[CredentialsModel]","title":"Return type"},{"location":"api/docs/CredentialApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CredentialApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/CredentialApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CredentialApi/#update_credential","text":"CredentialsModel update_credential(credentials_id, create_and_update_credentials_model) Update a credential. Updates a credential.","title":"update_credential"},{"location":"api/docs/CredentialApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import credential_api from soracom_api.model.credentials_model import CredentialsModel from soracom_api.model.create_and_update_credentials_model import CreateAndUpdateCredentialsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = credential_api.CredentialApi(api_client) credentials_id = \"credentials_id_example\" # str | credentials_id create_and_update_credentials_model = CreateAndUpdateCredentialsModel( credentials={}, description=\"description_example\", type=\"aws-credentials\", ) # CreateAndUpdateCredentialsModel | credentials # example passing only required values which don't have defaults set try: # Update a credential. api_response = api_instance.update_credential(credentials_id, create_and_update_credentials_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling CredentialApi->update_credential: %s\\n\" % e)","title":"Example"},{"location":"api/docs/CredentialApi/#parameters_3","text":"Name Type Description Notes credentials_id str credentials_id create_and_update_credentials_model CreateAndUpdateCredentialsModel credentials","title":"Parameters"},{"location":"api/docs/CredentialApi/#return-type_3","text":"CredentialsModel","title":"Return type"},{"location":"api/docs/CredentialApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/CredentialApi/#http-request-headers_3","text":"Content-Type : application/json;charset=UTF-8 Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/CredentialApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - 400 There was an error in the request or the specified token has already expired. (In the latter case, you will need to use the /auth API to do authentication once again.) - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/CredentialsModel/","text":"CredentialsModel \u00b6 Properties \u00b6 Name Type Description Notes create_date_time int [optional] credentials {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] credentials_id str [optional] description str [optional] last_used_date_time int [optional] type str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CredentialsModel"},{"location":"api/docs/CredentialsModel/#credentialsmodel","text":"","title":"CredentialsModel"},{"location":"api/docs/CredentialsModel/#properties","text":"Name Type Description Notes create_date_time int [optional] credentials {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] credentials_id str [optional] description str [optional] last_used_date_time int [optional] type str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/CreditCard/","text":"CreditCard \u00b6 Properties \u00b6 Name Type Description Notes cvc str [optional] expire_month int [optional] expire_year int [optional] name str [optional] number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"CreditCard"},{"location":"api/docs/CreditCard/#creditcard","text":"","title":"CreditCard"},{"location":"api/docs/CreditCard/#properties","text":"Name Type Description Notes cvc str [optional] expire_month int [optional] expire_year int [optional] name str [optional] number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DailyBill/","text":"DailyBill \u00b6 Properties \u00b6 Name Type Description Notes amount int \u91d1\u984d [optional] date str \u5e74\u6708\u65e5 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DailyBill"},{"location":"api/docs/DailyBill/#dailybill","text":"","title":"DailyBill"},{"location":"api/docs/DailyBill/#properties","text":"Name Type Description Notes amount int \u91d1\u984d [optional] date str \u5e74\u6708\u65e5 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DailyBillResponse/","text":"DailyBillResponse \u00b6 Properties \u00b6 Name Type Description Notes bill_list [DailyBill] \u65e5\u3054\u3068\u306e\u5229\u7528\u6599\u30ea\u30b9\u30c8 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DailyBillResponse"},{"location":"api/docs/DailyBillResponse/#dailybillresponse","text":"","title":"DailyBillResponse"},{"location":"api/docs/DailyBillResponse/#properties","text":"Name Type Description Notes bill_list [DailyBill] \u65e5\u3054\u3068\u306e\u5229\u7528\u6599\u30ea\u30b9\u30c8 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DataEntry/","text":"DataEntry \u00b6 Properties \u00b6 Name Type Description Notes content str [optional] content_type str [optional] time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataEntry"},{"location":"api/docs/DataEntry/#dataentry","text":"","title":"DataEntry"},{"location":"api/docs/DataEntry/#properties","text":"Name Type Description Notes content str [optional] content_type str [optional] time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DataEntryApi/","text":"soracom_api.DataEntryApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_data_entry DELETE /data/{resource_type}/{resource_id}/{time} Deletes a data entry get_data_entries GET /data/{resource_type}/{resource_id} Get data sent from a resource. get_data_entry GET /data/{resource_type}/{resource_id}/{time} Gets a data entry list_data_source_resources GET /data/resources Get the list of data source resources delete_data_entry \u00b6 delete_data_entry(resource_type, resource_id, time) Deletes a data entry Deletes a data entry identified with resource ID and timestamp Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource time = 1 # int | Timestamp of the target data entry to delete (unixtime in milliseconds). # example passing only required values which don't have defaults set try: # Deletes a data entry api_instance.delete_data_entry(resource_type, resource_id, time) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->delete_data_entry: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource time int Timestamp of the target data entry to delete (unixtime in milliseconds). Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The data entry has been successfully deleted - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_entries \u00b6 [DataEntry] get_data_entries(resource_type, resource_id) Get data sent from a resource. Returns a list of data entries sent from a resource that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a resource. api_response = api_instance.get_data_entries(resource_type, resource_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entries: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a resource. api_response = api_instance.get_data_entries(resource_type, resource_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entries: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_entry \u00b6 get_data_entry(resource_type, resource_id, time) Gets a data entry Gets a data entry identified with resource ID and timestamp Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource time = 1 # int | Timestamp of the target data entry to get (unixtime in milliseconds). # example passing only required values which don't have defaults set try: # Gets a data entry api_instance.get_data_entry(resource_type, resource_id, time) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entry: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource time int Timestamp of the target data entry to get (unixtime in milliseconds). Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 The data entry specified with resource ID and timestamp - 404 No such entry found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_data_source_resources \u00b6 [DataSourceResourceMetadata] list_data_source_resources() Get the list of data source resources Returns a list of data source resources that have sent data from resources that belong to the operator. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from soracom_api.model.data_source_resource_metadata import DataSourceResourceMetadata from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource (optional) limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `resourceId` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get the list of data source resources api_response = api_instance.list_data_source_resources(resource_type=resource_type, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->list_data_source_resources: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of data source resource [optional] limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `resourceId` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataSourceResourceMetadata] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data source resources. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.DataEntryApi"},{"location":"api/docs/DataEntryApi/#soracom_apidataentryapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_data_entry DELETE /data/{resource_type}/{resource_id}/{time} Deletes a data entry get_data_entries GET /data/{resource_type}/{resource_id} Get data sent from a resource. get_data_entry GET /data/{resource_type}/{resource_id}/{time} Gets a data entry list_data_source_resources GET /data/resources Get the list of data source resources","title":"soracom_api.DataEntryApi"},{"location":"api/docs/DataEntryApi/#delete_data_entry","text":"delete_data_entry(resource_type, resource_id, time) Deletes a data entry Deletes a data entry identified with resource ID and timestamp","title":"delete_data_entry"},{"location":"api/docs/DataEntryApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource time = 1 # int | Timestamp of the target data entry to delete (unixtime in milliseconds). # example passing only required values which don't have defaults set try: # Deletes a data entry api_instance.delete_data_entry(resource_type, resource_id, time) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->delete_data_entry: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DataEntryApi/#parameters","text":"Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource time int Timestamp of the target data entry to delete (unixtime in milliseconds).","title":"Parameters"},{"location":"api/docs/DataEntryApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DataEntryApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DataEntryApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DataEntryApi/#http-response-details","text":"Status code Description Response headers 204 The data entry has been successfully deleted - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DataEntryApi/#get_data_entries","text":"[DataEntry] get_data_entries(resource_type, resource_id) Get data sent from a resource. Returns a list of data entries sent from a resource that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_entries"},{"location":"api/docs/DataEntryApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a resource. api_response = api_instance.get_data_entries(resource_type, resource_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entries: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a resource. api_response = api_instance.get_data_entries(resource_type, resource_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entries: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DataEntryApi/#parameters_1","text":"Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/DataEntryApi/#return-type_1","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/DataEntryApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DataEntryApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DataEntryApi/#http-response-details_1","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DataEntryApi/#get_data_entry","text":"get_data_entry(resource_type, resource_id, time) Gets a data entry Gets a data entry identified with resource ID and timestamp","title":"get_data_entry"},{"location":"api/docs/DataEntryApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource resource_id = \"resource_id_example\" # str | ID of data source resource time = 1 # int | Timestamp of the target data entry to get (unixtime in milliseconds). # example passing only required values which don't have defaults set try: # Gets a data entry api_instance.get_data_entry(resource_type, resource_id, time) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->get_data_entry: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DataEntryApi/#parameters_2","text":"Name Type Description Notes resource_type str Type of data source resource resource_id str ID of data source resource time int Timestamp of the target data entry to get (unixtime in milliseconds).","title":"Parameters"},{"location":"api/docs/DataEntryApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DataEntryApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DataEntryApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DataEntryApi/#http-response-details_2","text":"Status code Description Response headers 200 The data entry specified with resource ID and timestamp - 404 No such entry found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DataEntryApi/#list_data_source_resources","text":"[DataSourceResourceMetadata] list_data_source_resources() Get the list of data source resources Returns a list of data source resources that have sent data from resources that belong to the operator. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_data_source_resources"},{"location":"api/docs/DataEntryApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import data_entry_api from soracom_api.model.data_source_resource_metadata import DataSourceResourceMetadata from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = data_entry_api.DataEntryApi(api_client) resource_type = \"Subscriber\" # str | Type of data source resource (optional) limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `resourceId` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get the list of data source resources api_response = api_instance.list_data_source_resources(resource_type=resource_type, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DataEntryApi->list_data_source_resources: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DataEntryApi/#parameters_3","text":"Name Type Description Notes resource_type str Type of data source resource [optional] limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `resourceId` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/DataEntryApi/#return-type_3","text":"[DataSourceResourceMetadata]","title":"Return type"},{"location":"api/docs/DataEntryApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DataEntryApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DataEntryApi/#http-response-details_3","text":"Status code Description Response headers 200 A list of data source resources. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DataSourceResourceMetadata/","text":"DataSourceResourceMetadata \u00b6 Properties \u00b6 Name Type Description Notes attribute_names [str] [optional] last_modified_time int [optional] resource_id str [optional] resource_type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataSourceResourceMetadata"},{"location":"api/docs/DataSourceResourceMetadata/#datasourceresourcemetadata","text":"","title":"DataSourceResourceMetadata"},{"location":"api/docs/DataSourceResourceMetadata/#properties","text":"Name Type Description Notes attribute_names [str] [optional] last_modified_time int [optional] resource_id str [optional] resource_type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DataTrafficStats/","text":"DataTrafficStats \u00b6 Properties \u00b6 Name Type Description Notes download_byte_size_total int [optional] download_packet_size_total int [optional] upload_byte_size_total int [optional] upload_packet_size_total int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DataTrafficStats"},{"location":"api/docs/DataTrafficStats/#datatrafficstats","text":"","title":"DataTrafficStats"},{"location":"api/docs/DataTrafficStats/#properties","text":"Name Type Description Notes download_byte_size_total int [optional] download_packet_size_total int [optional] upload_byte_size_total int [optional] upload_packet_size_total int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Device/","text":"Device \u00b6 Properties \u00b6 Name Type Description Notes device_id str [optional] endpoint str [optional] firmware_version str [optional] group_id str, none_type [optional] ip_address str [optional] last_modified_time datetime [optional] last_registration_update datetime [optional] manufacturer str [optional] model_number str [optional] objects {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] online bool [optional] if omitted the server will use the default value of False operator_id str [optional] registration_id str [optional] registration_life_time int [optional] serial_number str, none_type [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Device"},{"location":"api/docs/Device/#device","text":"","title":"Device"},{"location":"api/docs/Device/#properties","text":"Name Type Description Notes device_id str [optional] endpoint str [optional] firmware_version str [optional] group_id str, none_type [optional] ip_address str [optional] last_modified_time datetime [optional] last_registration_update datetime [optional] manufacturer str [optional] model_number str [optional] objects {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] online bool [optional] if omitted the server will use the default value of False operator_id str [optional] registration_id str [optional] registration_life_time int [optional] serial_number str, none_type [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DeviceApi/","text":"soracom_api.DeviceApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_device POST /devices Creates a new Device delete_device DELETE /devices/{device_id} Delete Device delete_device_tag DELETE /devices/{device_id}/tags/{tag_name} Delete device tag execute_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/execute Executes a resource of a device get_data_from_device GET /devices/{device_id}/data Get data sent from a device. get_device GET /devices/{device_id} Returns a Device identified by device ID list_devices GET /devices Returns a list of Devices observe_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/observe Triggers observation of the specified resource of a device observe_device_resources POST /devices/{device_id}/{object}/{instance}/observe Triggers observation of resources under an object instance of a device put_device_tags PUT /devices/{device_id}/tags Updates device tags read_device_resource GET /devices/{device_id}/{object}/{instance}/{resource} Get the specified resource of a device read_device_resources GET /devices/{device_id}/{object}/{instance} Get resources under an object instance of a device set_device_group POST /devices/{device_id}/set_group Lets a device join a group unobserve_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/unobserve Stops observation of a resource of a device unobserve_device_resources POST /devices/{device_id}/{object}/{instance}/unobserve Stops observation of resources under an object instance of a device unset_device_group POST /devices/{device_id}/unset_group Lets a device leave from a group write_device_resource PUT /devices/{device_id}/{object}/{instance}/{resource} Write value to a resource of a device create_device \u00b6 Device create_device(device) Creates a new Device Creates a new Device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device = Device( device_id=\"device_id_example\", endpoint=\"endpoint_example\", firmware_version=\"firmware_version_example\", group_id=\"group_id_example\", ip_address=\"ip_address_example\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), last_registration_update=dateutil_parser('1970-01-01T00:00:00.00Z'), manufacturer=\"manufacturer_example\", model_number=\"model_number_example\", objects={}, online=False, operator_id=\"operator_id_example\", registration_id=\"registration_id_example\", registration_life_time=1, serial_number=\"serial_number_example\", tags={ \"key\": \"key_example\", }, ) # Device | Device to create # example passing only required values which don't have defaults set try: # Creates a new Device api_response = api_instance.create_device(device) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->create_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device Device Device to create Return type \u00b6 Device Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Device created - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_device \u00b6 delete_device(device_id) Delete Device Delete Device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to delete # example passing only required values which don't have defaults set try: # Delete Device api_instance.delete_device(device_id) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->delete_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device to delete Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Device deleted - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_device_tag \u00b6 delete_device_tag(device_id, tag_name) Delete device tag Delete device tag Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update tag_name = \"tag_name_example\" # str | Name of tag to delete # example passing only required values which don't have defaults set try: # Delete device tag api_instance.delete_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->delete_device_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device to update tag_name str Name of tag to delete Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Device tag deleted - 404 No such device or tag found - [Back to top] [Back to API list] [Back to Model list] [Back to README] execute_device_resource \u00b6 execute_device_resource(device_id, object, instance, resource) Executes a resource of a device Executes a resource of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.inline_object1 import InlineObject1 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID inline_object1 = InlineObject1( value=\"value_example\", ) # InlineObject1 | (optional) # example passing only required values which don't have defaults set try: # Executes a resource of a device api_instance.execute_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->execute_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Executes a resource of a device api_instance.execute_device_resource(device_id, object, instance, resource, inline_object1=inline_object1) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->execute_device_resource: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID inline_object1 InlineObject1 [optional] Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 202 Execution request is accepted - 400 Resource is not executable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_from_device \u00b6 [DataEntry] get_data_from_device(device_id) Get data sent from a device. Returns a list of data entries sent from a device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a device. api_response = api_instance.get_data_from_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_data_from_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a device. api_response = api_instance.get_data_from_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_data_from_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_device \u00b6 Device get_device(device_id) Returns a Device identified by device ID Returns a Device identified by device ID Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Returns a Device identified by device ID api_response = api_instance.get_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Returns a Device identified by device ID api_response = api_instance.get_device(device_id, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False Return type \u00b6 Device Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A Device identified by device ID - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_devices \u00b6 [Device] list_devices() Returns a list of Devices Returns a list of Devices Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name (optional) tag_value = \"tag_value_example\" # str | Tag value (optional) tag_value_match_mode = \"tag_value_match_mode_example\" # str | Tag value match mode (exact | prefix) (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last Device in the previous page (optional) limit = -1 # int | Max number of Devices in a response (optional) if omitted the server will use the default value of -1 # example passing only required values which don't have defaults set # and optional values try: # Returns a list of Devices api_response = api_instance.list_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->list_devices: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name [optional] tag_value str Tag value [optional] tag_value_match_mode str Tag value match mode (exact prefix) last_evaluated_key str ID of the last Device in the previous page [optional] limit int Max number of Devices in a response [optional] if omitted the server will use the default value of -1 Return type \u00b6 [Device] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of Devices - [Back to top] [Back to API list] [Back to Model list] [Back to README] observe_device_resource \u00b6 observe_device_resource(device_id, object, instance, resource) Triggers observation of the specified resource of a device Triggers observation of the specified resource of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Triggers observation of the specified resource of a device api_instance.observe_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Triggers observation of the specified resource of a device api_instance.observe_device_resource(device_id, object, instance, resource, model=model) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resource: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 202 Observation started. - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] observe_device_resources \u00b6 observe_device_resources(device_id, object, instance) Triggers observation of resources under an object instance of a device Triggers observation of resources under an object instance of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Triggers observation of resources under an object instance of a device api_instance.observe_device_resources(device_id, object, instance) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resources: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Triggers observation of resources under an object instance of a device api_instance.observe_device_resources(device_id, object, instance, model=model) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resources: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 202 Observation started. - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_device_tags \u00b6 Device put_device_tags(device_id, tag_update_request) Updates device tags Updates device tags Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of values for tags to be updated. # example passing only required values which don't have defaults set try: # Updates device tags api_response = api_instance.put_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->put_device_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device to update tag_update_request [TagUpdateRequest] Array of values for tags to be updated. Return type \u00b6 Device Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README] read_device_resource \u00b6 ResourceInstance read_device_resource(device_id, object, instance, resource) Get the specified resource of a device Get the specified resource of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.resource_instance import ResourceInstance from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Get the specified resource of a device api_response = api_instance.read_device_resource(device_id, object, instance, resource) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get the specified resource of a device api_response = api_instance.read_device_resource(device_id, object, instance, resource, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resource: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False Return type \u00b6 ResourceInstance Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Resource - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] read_device_resources \u00b6 ObjectInstance read_device_resources(device_id, object, instance) Get resources under an object instance of a device Get resources under an object instance of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.object_instance import ObjectInstance from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Get resources under an object instance of a device api_response = api_instance.read_device_resources(device_id, object, instance) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resources: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get resources under an object instance of a device api_response = api_instance.read_device_resources(device_id, object, instance, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resources: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False Return type \u00b6 ObjectInstance Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Resources under the specified object instance - 400 Object instance is not readable - 404 Object instance is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_device_group \u00b6 Device set_device_group(device_id) Lets a device join a group Lets a device join a group Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from soracom_api.model.inline_object2 import InlineObject2 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update inline_object2 = InlineObject2( group_id=\"group_id_example\", ) # InlineObject2 | (optional) # example passing only required values which don't have defaults set try: # Lets a device join a group api_response = api_instance.set_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->set_device_group: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Lets a device join a group api_response = api_instance.set_device_group(device_id, inline_object2=inline_object2) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->set_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device to update inline_object2 InlineObject2 [optional] Return type \u00b6 Device Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README] unobserve_device_resource \u00b6 unobserve_device_resource(device_id, object, instance, resource) Stops observation of a resource of a device Stops observation of a resource of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID # example passing only required values which don't have defaults set try: # Stops observation of a resource of a device api_instance.unobserve_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unobserve_device_resource: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Observation cancelled - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] unobserve_device_resources \u00b6 unobserve_device_resources(device_id, object, instance) Stops observation of resources under an object instance of a device Stops observation of resources under an object instance of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID # example passing only required values which don't have defaults set try: # Stops observation of resources under an object instance of a device api_instance.unobserve_device_resources(device_id, object, instance) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unobserve_device_resources: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Observation cancelled - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_device_group \u00b6 Device unset_device_group(device_id) Lets a device leave from a group Lets a device leave from a group Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update # example passing only required values which don't have defaults set try: # Lets a device leave from a group api_response = api_instance.unset_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unset_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device to update Return type \u00b6 Device Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README] write_device_resource \u00b6 write_device_resource(device_id, object, instance, resource, inline_object) Write value to a resource of a device Write value to a resource of a device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.inline_object import InlineObject from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID inline_object = InlineObject( value=\"value_example\", ) # InlineObject | # example passing only required values which don't have defaults set try: # Write value to a resource of a device api_instance.write_device_resource(device_id, object, instance, resource, inline_object) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->write_device_resource: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID inline_object InlineObject Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 202 Updating resource is accepted - 400 Specified Resource does not support write (Including case of connection error such as offline device) - 404 Resource is not found - 500 Error response from the device. (It includes the case where the LwM2M response message is error from the device, and the error message from the device is included in the response 'message'.) - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.DeviceApi"},{"location":"api/docs/DeviceApi/#soracom_apideviceapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_device POST /devices Creates a new Device delete_device DELETE /devices/{device_id} Delete Device delete_device_tag DELETE /devices/{device_id}/tags/{tag_name} Delete device tag execute_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/execute Executes a resource of a device get_data_from_device GET /devices/{device_id}/data Get data sent from a device. get_device GET /devices/{device_id} Returns a Device identified by device ID list_devices GET /devices Returns a list of Devices observe_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/observe Triggers observation of the specified resource of a device observe_device_resources POST /devices/{device_id}/{object}/{instance}/observe Triggers observation of resources under an object instance of a device put_device_tags PUT /devices/{device_id}/tags Updates device tags read_device_resource GET /devices/{device_id}/{object}/{instance}/{resource} Get the specified resource of a device read_device_resources GET /devices/{device_id}/{object}/{instance} Get resources under an object instance of a device set_device_group POST /devices/{device_id}/set_group Lets a device join a group unobserve_device_resource POST /devices/{device_id}/{object}/{instance}/{resource}/unobserve Stops observation of a resource of a device unobserve_device_resources POST /devices/{device_id}/{object}/{instance}/unobserve Stops observation of resources under an object instance of a device unset_device_group POST /devices/{device_id}/unset_group Lets a device leave from a group write_device_resource PUT /devices/{device_id}/{object}/{instance}/{resource} Write value to a resource of a device","title":"soracom_api.DeviceApi"},{"location":"api/docs/DeviceApi/#create_device","text":"Device create_device(device) Creates a new Device Creates a new Device","title":"create_device"},{"location":"api/docs/DeviceApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device = Device( device_id=\"device_id_example\", endpoint=\"endpoint_example\", firmware_version=\"firmware_version_example\", group_id=\"group_id_example\", ip_address=\"ip_address_example\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), last_registration_update=dateutil_parser('1970-01-01T00:00:00.00Z'), manufacturer=\"manufacturer_example\", model_number=\"model_number_example\", objects={}, online=False, operator_id=\"operator_id_example\", registration_id=\"registration_id_example\", registration_life_time=1, serial_number=\"serial_number_example\", tags={ \"key\": \"key_example\", }, ) # Device | Device to create # example passing only required values which don't have defaults set try: # Creates a new Device api_response = api_instance.create_device(device) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->create_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters","text":"Name Type Description Notes device Device Device to create","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type","text":"Device","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details","text":"Status code Description Response headers 201 Device created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#delete_device","text":"delete_device(device_id) Delete Device Delete Device","title":"delete_device"},{"location":"api/docs/DeviceApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to delete # example passing only required values which don't have defaults set try: # Delete Device api_instance.delete_device(device_id) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->delete_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_1","text":"Name Type Description Notes device_id str Device to delete","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_1","text":"Status code Description Response headers 204 Device deleted - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#delete_device_tag","text":"delete_device_tag(device_id, tag_name) Delete device tag Delete device tag","title":"delete_device_tag"},{"location":"api/docs/DeviceApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update tag_name = \"tag_name_example\" # str | Name of tag to delete # example passing only required values which don't have defaults set try: # Delete device tag api_instance.delete_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->delete_device_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_2","text":"Name Type Description Notes device_id str Device to update tag_name str Name of tag to delete","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_2","text":"Status code Description Response headers 204 Device tag deleted - 404 No such device or tag found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#execute_device_resource","text":"execute_device_resource(device_id, object, instance, resource) Executes a resource of a device Executes a resource of a device","title":"execute_device_resource"},{"location":"api/docs/DeviceApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.inline_object1 import InlineObject1 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID inline_object1 = InlineObject1( value=\"value_example\", ) # InlineObject1 | (optional) # example passing only required values which don't have defaults set try: # Executes a resource of a device api_instance.execute_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->execute_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Executes a resource of a device api_instance.execute_device_resource(device_id, object, instance, resource, inline_object1=inline_object1) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->execute_device_resource: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_3","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID inline_object1 InlineObject1 [optional]","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_3","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_3","text":"Status code Description Response headers 202 Execution request is accepted - 400 Resource is not executable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#get_data_from_device","text":"[DataEntry] get_data_from_device(device_id) Get data sent from a device. Returns a list of data entries sent from a device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_from_device"},{"location":"api/docs/DeviceApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a device. api_response = api_instance.get_data_from_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_data_from_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a device. api_response = api_instance.get_data_from_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_data_from_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_4","text":"Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_4","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_4","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#get_device","text":"Device get_device(device_id) Returns a Device identified by device ID Returns a Device identified by device ID","title":"get_device"},{"location":"api/docs/DeviceApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Returns a Device identified by device ID api_response = api_instance.get_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Returns a Device identified by device ID api_response = api_instance.get_device(device_id, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->get_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_5","text":"Name Type Description Notes device_id str Device ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_5","text":"Device","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_5","text":"Status code Description Response headers 200 A Device identified by device ID - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#list_devices","text":"[Device] list_devices() Returns a list of Devices Returns a list of Devices","title":"list_devices"},{"location":"api/docs/DeviceApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name (optional) tag_value = \"tag_value_example\" # str | Tag value (optional) tag_value_match_mode = \"tag_value_match_mode_example\" # str | Tag value match mode (exact | prefix) (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last Device in the previous page (optional) limit = -1 # int | Max number of Devices in a response (optional) if omitted the server will use the default value of -1 # example passing only required values which don't have defaults set # and optional values try: # Returns a list of Devices api_response = api_instance.list_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->list_devices: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_6","text":"Name Type Description Notes tag_name str Tag name [optional] tag_value str Tag value [optional] tag_value_match_mode str Tag value match mode (exact prefix) last_evaluated_key str ID of the last Device in the previous page [optional] limit int Max number of Devices in a response [optional] if omitted the server will use the default value of -1","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_6","text":"[Device]","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_6","text":"Status code Description Response headers 200 List of Devices - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#observe_device_resource","text":"observe_device_resource(device_id, object, instance, resource) Triggers observation of the specified resource of a device Triggers observation of the specified resource of a device","title":"observe_device_resource"},{"location":"api/docs/DeviceApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Triggers observation of the specified resource of a device api_instance.observe_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Triggers observation of the specified resource of a device api_instance.observe_device_resource(device_id, object, instance, resource, model=model) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resource: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_7","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_7","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_7","text":"Status code Description Response headers 202 Observation started. - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#observe_device_resources","text":"observe_device_resources(device_id, object, instance) Triggers observation of resources under an object instance of a device Triggers observation of resources under an object instance of a device","title":"observe_device_resources"},{"location":"api/docs/DeviceApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Triggers observation of resources under an object instance of a device api_instance.observe_device_resources(device_id, object, instance) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resources: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Triggers observation of resources under an object instance of a device api_instance.observe_device_resources(device_id, object, instance, model=model) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->observe_device_resources: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_8","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_8","text":"Status code Description Response headers 202 Observation started. - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#put_device_tags","text":"Device put_device_tags(device_id, tag_update_request) Updates device tags Updates device tags","title":"put_device_tags"},{"location":"api/docs/DeviceApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of values for tags to be updated. # example passing only required values which don't have defaults set try: # Updates device tags api_response = api_instance.put_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->put_device_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_9","text":"Name Type Description Notes device_id str Device to update tag_update_request [TagUpdateRequest] Array of values for tags to be updated.","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_9","text":"Device","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_9","text":"Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#read_device_resource","text":"ResourceInstance read_device_resource(device_id, object, instance, resource) Get the specified resource of a device Get the specified resource of a device","title":"read_device_resource"},{"location":"api/docs/DeviceApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.resource_instance import ResourceInstance from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Get the specified resource of a device api_response = api_instance.read_device_resource(device_id, object, instance, resource) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resource: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get the specified resource of a device api_response = api_instance.read_device_resource(device_id, object, instance, resource, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resource: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_10","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_10","text":"ResourceInstance","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_10","text":"Status code Description Response headers 200 Resource - 400 Resource is not readable - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#read_device_resources","text":"ObjectInstance read_device_resources(device_id, object, instance) Get resources under an object instance of a device Get resources under an object instance of a device","title":"read_device_resources"},{"location":"api/docs/DeviceApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.object_instance import ObjectInstance from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID model = False # bool | Whether or not to add model information (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Get resources under an object instance of a device api_response = api_instance.read_device_resources(device_id, object, instance) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resources: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get resources under an object instance of a device api_response = api_instance.read_device_resources(device_id, object, instance, model=model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->read_device_resources: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_11","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID model bool Whether or not to add model information [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_11","text":"ObjectInstance","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_11","text":"Status code Description Response headers 200 Resources under the specified object instance - 400 Object instance is not readable - 404 Object instance is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#set_device_group","text":"Device set_device_group(device_id) Lets a device join a group Lets a device join a group","title":"set_device_group"},{"location":"api/docs/DeviceApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from soracom_api.model.inline_object2 import InlineObject2 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update inline_object2 = InlineObject2( group_id=\"group_id_example\", ) # InlineObject2 | (optional) # example passing only required values which don't have defaults set try: # Lets a device join a group api_response = api_instance.set_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->set_device_group: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Lets a device join a group api_response = api_instance.set_device_group(device_id, inline_object2=inline_object2) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->set_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_12","text":"Name Type Description Notes device_id str Device to update inline_object2 InlineObject2 [optional]","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_12","text":"Device","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_12","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_12","text":"Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#unobserve_device_resource","text":"unobserve_device_resource(device_id, object, instance, resource) Stops observation of a resource of a device Stops observation of a resource of a device","title":"unobserve_device_resource"},{"location":"api/docs/DeviceApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID # example passing only required values which don't have defaults set try: # Stops observation of a resource of a device api_instance.unobserve_device_resource(device_id, object, instance, resource) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unobserve_device_resource: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_13","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_13","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_13","text":"Status code Description Response headers 204 Observation cancelled - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#unobserve_device_resources","text":"unobserve_device_resources(device_id, object, instance) Stops observation of resources under an object instance of a device Stops observation of resources under an object instance of a device","title":"unobserve_device_resources"},{"location":"api/docs/DeviceApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID # example passing only required values which don't have defaults set try: # Stops observation of resources under an object instance of a device api_instance.unobserve_device_resources(device_id, object, instance) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unobserve_device_resources: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_14","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_14","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_14","text":"Status code Description Response headers 204 Observation cancelled - 404 Resource is not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#unset_device_group","text":"Device unset_device_group(device_id) Lets a device leave from a group Lets a device leave from a group","title":"unset_device_group"},{"location":"api/docs/DeviceApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Device to update # example passing only required values which don't have defaults set try: # Lets a device leave from a group api_response = api_instance.unset_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->unset_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_15","text":"Name Type Description Notes device_id str Device to update","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_15","text":"Device","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_15","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_15","text":"Status code Description Response headers 200 Device updated - 404 No such device found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceApi/#write_device_resource","text":"write_device_resource(device_id, object, instance, resource, inline_object) Write value to a resource of a device Write value to a resource of a device","title":"write_device_resource"},{"location":"api/docs/DeviceApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_api from soracom_api.model.inline_object import InlineObject from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_api.DeviceApi(api_client) device_id = \"device_id_example\" # str | Target device object = \"object_example\" # str | Object ID instance = \"instance_example\" # str | Instance ID resource = \"resource_example\" # str | Resource ID inline_object = InlineObject( value=\"value_example\", ) # InlineObject | # example passing only required values which don't have defaults set try: # Write value to a resource of a device api_instance.write_device_resource(device_id, object, instance, resource, inline_object) except soracom_api.ApiException as e: print(\"Exception when calling DeviceApi->write_device_resource: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceApi/#parameters_16","text":"Name Type Description Notes device_id str Target device object str Object ID instance str Instance ID resource str Resource ID inline_object InlineObject","title":"Parameters"},{"location":"api/docs/DeviceApi/#return-type_16","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceApi/#http-request-headers_16","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceApi/#http-response-details_16","text":"Status code Description Response headers 202 Updating resource is accepted - 400 Specified Resource does not support write (Including case of connection error such as offline device) - 404 Resource is not found - 500 Error response from the device. (It includes the case where the LwM2M response message is error from the device, and the error message from the device is included in the response 'message'.) - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModel/","text":"DeviceObjectModel \u00b6 Properties \u00b6 Name Type Description Notes created_time datetime [optional] format str [optional] last_modified_time datetime [optional] object_id str [optional] object_name str [optional] operator_id str [optional] scope str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DeviceObjectModel"},{"location":"api/docs/DeviceObjectModel/#deviceobjectmodel","text":"","title":"DeviceObjectModel"},{"location":"api/docs/DeviceObjectModel/#properties","text":"Name Type Description Notes created_time datetime [optional] format str [optional] last_modified_time datetime [optional] object_id str [optional] object_name str [optional] operator_id str [optional] scope str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DeviceObjectModelApi/","text":"soracom_api.DeviceObjectModelApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_device_object_model POST /device_object_models Creates a new device object model delete_device_object_model DELETE /device_object_models/{model_id} Deletes a device object model get_device_object_model GET /device_object_models/{model_id} Gets a device object model list_device_object_models GET /device_object_models Returns a list of device object models set_device_object_model_scope POST /device_object_models/{model_id}/set_scope Sets scope for a device object model update_device_object_model POST /device_object_models/{model_id} Updates a device object model create_device_object_model \u00b6 DeviceObjectModel create_device_object_model(device_object_model) Creates a new device object model Creates a new device object model Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) device_object_model = DeviceObjectModel( created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), format=\"xml\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), object_id=\"object_id_example\", object_name=\"object_name_example\", operator_id=\"operator_id_example\", scope=\"scope_example\", ) # DeviceObjectModel | Device object model definition in either XML or JSON format. # example passing only required values which don't have defaults set try: # Creates a new device object model api_response = api_instance.create_device_object_model(device_object_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->create_device_object_model: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_object_model DeviceObjectModel Device object model definition in either XML or JSON format. Return type \u00b6 DeviceObjectModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json, application/xml Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device object model created - 400 Failed to parse device object model definition - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_device_object_model \u00b6 delete_device_object_model(model_id) Deletes a device object model Deletes a device object model Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID # example passing only required values which don't have defaults set try: # Deletes a device object model api_instance.delete_device_object_model(model_id) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->delete_device_object_model: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes model_id str Device object model ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Successfully deleted - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_device_object_model \u00b6 DeviceObjectModel get_device_object_model(model_id) Gets a device object model Gets a device object model Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID # example passing only required values which don't have defaults set try: # Gets a device object model api_response = api_instance.get_device_object_model(model_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->get_device_object_model: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes model_id str Device object model ID Return type \u00b6 DeviceObjectModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device object model - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_device_object_models \u00b6 [DeviceObjectModel] list_device_object_models() Returns a list of device object models Returns a list of device object models Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last device object model in the previous page (optional) limit = -1 # int | Max number of device object models in a response (optional) if omitted the server will use the default value of -1 # example passing only required values which don't have defaults set # and optional values try: # Returns a list of device object models api_response = api_instance.list_device_object_models(last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->list_device_object_models: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes last_evaluated_key str ID of the last device object model in the previous page [optional] limit int Max number of device object models in a response [optional] if omitted the server will use the default value of -1 Return type \u00b6 [DeviceObjectModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of device object models - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_device_object_model_scope \u00b6 DeviceObjectModel set_device_object_model_scope(model_id, set_device_object_model_scope_request) Sets scope for a device object model Sets scope for a device object model Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from soracom_api.model.set_device_object_model_scope_request import SetDeviceObjectModelScopeRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Target device object model ID set_device_object_model_scope_request = SetDeviceObjectModelScopeRequest( scope=\"scope_example\", ) # SetDeviceObjectModelScopeRequest | Scope value that is applied to the target device object model # example passing only required values which don't have defaults set try: # Sets scope for a device object model api_response = api_instance.set_device_object_model_scope(model_id, set_device_object_model_scope_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->set_device_object_model_scope: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes model_id str Target device object model ID set_device_object_model_scope_request SetDeviceObjectModelScopeRequest Scope value that is applied to the target device object model Return type \u00b6 DeviceObjectModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Scope is set to the target device object model - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_device_object_model \u00b6 DeviceObjectModel update_device_object_model(model_id, device_object_model) Updates a device object model Updates a device object model Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID device_object_model = DeviceObjectModel( created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), format=\"xml\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), object_id=\"object_id_example\", object_name=\"object_name_example\", operator_id=\"operator_id_example\", scope=\"scope_example\", ) # DeviceObjectModel | Device object model definition in either XML or JSON format. # example passing only required values which don't have defaults set try: # Updates a device object model api_response = api_instance.update_device_object_model(model_id, device_object_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->update_device_object_model: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes model_id str Device object model ID device_object_model DeviceObjectModel Device object model definition in either XML or JSON format. Return type \u00b6 DeviceObjectModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json, application/xml Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Device object model updated - 400 Failed to parse device object model definition - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.DeviceObjectModelApi"},{"location":"api/docs/DeviceObjectModelApi/#soracom_apideviceobjectmodelapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_device_object_model POST /device_object_models Creates a new device object model delete_device_object_model DELETE /device_object_models/{model_id} Deletes a device object model get_device_object_model GET /device_object_models/{model_id} Gets a device object model list_device_object_models GET /device_object_models Returns a list of device object models set_device_object_model_scope POST /device_object_models/{model_id}/set_scope Sets scope for a device object model update_device_object_model POST /device_object_models/{model_id} Updates a device object model","title":"soracom_api.DeviceObjectModelApi"},{"location":"api/docs/DeviceObjectModelApi/#create_device_object_model","text":"DeviceObjectModel create_device_object_model(device_object_model) Creates a new device object model Creates a new device object model","title":"create_device_object_model"},{"location":"api/docs/DeviceObjectModelApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) device_object_model = DeviceObjectModel( created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), format=\"xml\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), object_id=\"object_id_example\", object_name=\"object_name_example\", operator_id=\"operator_id_example\", scope=\"scope_example\", ) # DeviceObjectModel | Device object model definition in either XML or JSON format. # example passing only required values which don't have defaults set try: # Creates a new device object model api_response = api_instance.create_device_object_model(device_object_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->create_device_object_model: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters","text":"Name Type Description Notes device_object_model DeviceObjectModel Device object model definition in either XML or JSON format.","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type","text":"DeviceObjectModel","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers","text":"Content-Type : application/json, application/xml Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details","text":"Status code Description Response headers 200 Device object model created - 400 Failed to parse device object model definition - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModelApi/#delete_device_object_model","text":"delete_device_object_model(model_id) Deletes a device object model Deletes a device object model","title":"delete_device_object_model"},{"location":"api/docs/DeviceObjectModelApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID # example passing only required values which don't have defaults set try: # Deletes a device object model api_instance.delete_device_object_model(model_id) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->delete_device_object_model: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters_1","text":"Name Type Description Notes model_id str Device object model ID","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details_1","text":"Status code Description Response headers 204 Successfully deleted - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModelApi/#get_device_object_model","text":"DeviceObjectModel get_device_object_model(model_id) Gets a device object model Gets a device object model","title":"get_device_object_model"},{"location":"api/docs/DeviceObjectModelApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID # example passing only required values which don't have defaults set try: # Gets a device object model api_response = api_instance.get_device_object_model(model_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->get_device_object_model: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters_2","text":"Name Type Description Notes model_id str Device object model ID","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type_2","text":"DeviceObjectModel","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details_2","text":"Status code Description Response headers 200 Device object model - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModelApi/#list_device_object_models","text":"[DeviceObjectModel] list_device_object_models() Returns a list of device object models Returns a list of device object models","title":"list_device_object_models"},{"location":"api/docs/DeviceObjectModelApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last device object model in the previous page (optional) limit = -1 # int | Max number of device object models in a response (optional) if omitted the server will use the default value of -1 # example passing only required values which don't have defaults set # and optional values try: # Returns a list of device object models api_response = api_instance.list_device_object_models(last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->list_device_object_models: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters_3","text":"Name Type Description Notes last_evaluated_key str ID of the last device object model in the previous page [optional] limit int Max number of device object models in a response [optional] if omitted the server will use the default value of -1","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type_3","text":"[DeviceObjectModel]","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details_3","text":"Status code Description Response headers 200 List of device object models - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModelApi/#set_device_object_model_scope","text":"DeviceObjectModel set_device_object_model_scope(model_id, set_device_object_model_scope_request) Sets scope for a device object model Sets scope for a device object model","title":"set_device_object_model_scope"},{"location":"api/docs/DeviceObjectModelApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from soracom_api.model.set_device_object_model_scope_request import SetDeviceObjectModelScopeRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Target device object model ID set_device_object_model_scope_request = SetDeviceObjectModelScopeRequest( scope=\"scope_example\", ) # SetDeviceObjectModelScopeRequest | Scope value that is applied to the target device object model # example passing only required values which don't have defaults set try: # Sets scope for a device object model api_response = api_instance.set_device_object_model_scope(model_id, set_device_object_model_scope_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->set_device_object_model_scope: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters_4","text":"Name Type Description Notes model_id str Target device object model ID set_device_object_model_scope_request SetDeviceObjectModelScopeRequest Scope value that is applied to the target device object model","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type_4","text":"DeviceObjectModel","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers_4","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details_4","text":"Status code Description Response headers 200 Scope is set to the target device object model - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DeviceObjectModelApi/#update_device_object_model","text":"DeviceObjectModel update_device_object_model(model_id, device_object_model) Updates a device object model Updates a device object model","title":"update_device_object_model"},{"location":"api/docs/DeviceObjectModelApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import device_object_model_api from soracom_api.model.device_object_model import DeviceObjectModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = device_object_model_api.DeviceObjectModelApi(api_client) model_id = \"model_id_example\" # str | Device object model ID device_object_model = DeviceObjectModel( created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), format=\"xml\", last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), object_id=\"object_id_example\", object_name=\"object_name_example\", operator_id=\"operator_id_example\", scope=\"scope_example\", ) # DeviceObjectModel | Device object model definition in either XML or JSON format. # example passing only required values which don't have defaults set try: # Updates a device object model api_response = api_instance.update_device_object_model(model_id, device_object_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DeviceObjectModelApi->update_device_object_model: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DeviceObjectModelApi/#parameters_5","text":"Name Type Description Notes model_id str Device object model ID device_object_model DeviceObjectModel Device object model definition in either XML or JSON format.","title":"Parameters"},{"location":"api/docs/DeviceObjectModelApi/#return-type_5","text":"DeviceObjectModel","title":"Return type"},{"location":"api/docs/DeviceObjectModelApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DeviceObjectModelApi/#http-request-headers_5","text":"Content-Type : application/json, application/xml Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/DeviceObjectModelApi/#http-response-details_5","text":"Status code Description Response headers 200 Device object model updated - 400 Failed to parse device object model definition - 404 No such device object model found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DiagnosticApi/","text":"soracom_api.DiagnosticApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_diagnostic GET /diagnostics/{diagnostic_id} Get diagnostic send_diagnostic_request POST /diagnostics Send diagnostic request get_diagnostic \u00b6 DiagnosticResponse get_diagnostic(diagnostic_id) Get diagnostic Returns a diagnostic. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import diagnostic_api from soracom_api.model.diagnostic_response import DiagnosticResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = diagnostic_api.DiagnosticApi(api_client) diagnostic_id = \"diagnostic_id_example\" # str | The identifier of diagnostic request. # example passing only required values which don't have defaults set try: # Get diagnostic api_response = api_instance.get_diagnostic(diagnostic_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DiagnosticApi->get_diagnostic: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes diagnostic_id str The identifier of diagnostic request. Return type \u00b6 DiagnosticResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 The specified diagnostic_id is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_diagnostic_request \u00b6 [DiagnosticResponse] send_diagnostic_request(diagnostic_request) Send diagnostic request Send a diagnostic request. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import diagnostic_api from soracom_api.model.diagnostic_response import DiagnosticResponse from soracom_api.model.diagnostic_request import DiagnosticRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = diagnostic_api.DiagnosticApi(api_client) diagnostic_request = DiagnosticRequest( _from=1, resource_id=\"resource_id_example\", resource_type=\"sim\", service=\"Air\", to=1, ) # DiagnosticRequest | request # example passing only required values which don't have defaults set try: # Send diagnostic request api_response = api_instance.send_diagnostic_request(diagnostic_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DiagnosticApi->send_diagnostic_request: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes diagnostic_request DiagnosticRequest request Return type \u00b6 [DiagnosticResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 Successfully accepted a diagnostic request. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.DiagnosticApi"},{"location":"api/docs/DiagnosticApi/#soracom_apidiagnosticapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_diagnostic GET /diagnostics/{diagnostic_id} Get diagnostic send_diagnostic_request POST /diagnostics Send diagnostic request","title":"soracom_api.DiagnosticApi"},{"location":"api/docs/DiagnosticApi/#get_diagnostic","text":"DiagnosticResponse get_diagnostic(diagnostic_id) Get diagnostic Returns a diagnostic.","title":"get_diagnostic"},{"location":"api/docs/DiagnosticApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import diagnostic_api from soracom_api.model.diagnostic_response import DiagnosticResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = diagnostic_api.DiagnosticApi(api_client) diagnostic_id = \"diagnostic_id_example\" # str | The identifier of diagnostic request. # example passing only required values which don't have defaults set try: # Get diagnostic api_response = api_instance.get_diagnostic(diagnostic_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DiagnosticApi->get_diagnostic: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DiagnosticApi/#parameters","text":"Name Type Description Notes diagnostic_id str The identifier of diagnostic request.","title":"Parameters"},{"location":"api/docs/DiagnosticApi/#return-type","text":"DiagnosticResponse","title":"Return type"},{"location":"api/docs/DiagnosticApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DiagnosticApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/DiagnosticApi/#http-response-details","text":"Status code Description Response headers 200 OK. - 404 The specified diagnostic_id is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DiagnosticApi/#send_diagnostic_request","text":"[DiagnosticResponse] send_diagnostic_request(diagnostic_request) Send diagnostic request Send a diagnostic request.","title":"send_diagnostic_request"},{"location":"api/docs/DiagnosticApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import diagnostic_api from soracom_api.model.diagnostic_response import DiagnosticResponse from soracom_api.model.diagnostic_request import DiagnosticRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = diagnostic_api.DiagnosticApi(api_client) diagnostic_request = DiagnosticRequest( _from=1, resource_id=\"resource_id_example\", resource_type=\"sim\", service=\"Air\", to=1, ) # DiagnosticRequest | request # example passing only required values which don't have defaults set try: # Send diagnostic request api_response = api_instance.send_diagnostic_request(diagnostic_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling DiagnosticApi->send_diagnostic_request: %s\\n\" % e)","title":"Example"},{"location":"api/docs/DiagnosticApi/#parameters_1","text":"Name Type Description Notes diagnostic_request DiagnosticRequest request","title":"Parameters"},{"location":"api/docs/DiagnosticApi/#return-type_1","text":"[DiagnosticResponse]","title":"Return type"},{"location":"api/docs/DiagnosticApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/DiagnosticApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/DiagnosticApi/#http-response-details_1","text":"Status code Description Response headers 201 Successfully accepted a diagnostic request. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/DiagnosticRequest/","text":"DiagnosticRequest \u00b6 Properties \u00b6 Name Type Description Notes resource_id str resourceId according to resourceType resource_type str defaults to \"sim\" service str defaults to \"Air\" _from int Start time for diagnostic (unixtime milliseconds) [optional] to int End time for diagnostic (unixtime milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DiagnosticRequest"},{"location":"api/docs/DiagnosticRequest/#diagnosticrequest","text":"","title":"DiagnosticRequest"},{"location":"api/docs/DiagnosticRequest/#properties","text":"Name Type Description Notes resource_id str resourceId according to resourceType resource_type str defaults to \"sim\" service str defaults to \"Air\" _from int Start time for diagnostic (unixtime milliseconds) [optional] to int End time for diagnostic (unixtime milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DiagnosticResponse/","text":"DiagnosticResponse \u00b6 Properties \u00b6 Name Type Description Notes diagnostic_id str [optional] _from int Start time for diagnostic (unixtime milliseconds) [optional] insights [{str: (Insight,)}] [optional] resource_id str resourceId according to resourceType [optional] resource_type str [optional] if omitted the server will use the default value of \"sim\" service str [optional] if omitted the server will use the default value of \"Air\" status str [optional] to int End time for diagnostic (unixtime milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DiagnosticResponse"},{"location":"api/docs/DiagnosticResponse/#diagnosticresponse","text":"","title":"DiagnosticResponse"},{"location":"api/docs/DiagnosticResponse/#properties","text":"Name Type Description Notes diagnostic_id str [optional] _from int Start time for diagnostic (unixtime milliseconds) [optional] insights [{str: (Insight,)}] [optional] resource_id str resourceId according to resourceType [optional] resource_type str [optional] if omitted the server will use the default value of \"sim\" service str [optional] if omitted the server will use the default value of \"Air\" status str [optional] to int End time for diagnostic (unixtime milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DownlinkPingRequest/","text":"DownlinkPingRequest \u00b6 Properties \u00b6 Name Type Description Notes number_of_ping_requests int the number of attempt ping [optional] if omitted the server will use the default value of 1 timeout_seconds int the timeout duration of each ping [optional] if omitted the server will use the default value of 1 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DownlinkPingRequest"},{"location":"api/docs/DownlinkPingRequest/#downlinkpingrequest","text":"","title":"DownlinkPingRequest"},{"location":"api/docs/DownlinkPingRequest/#properties","text":"Name Type Description Notes number_of_ping_requests int the number of attempt ping [optional] if omitted the server will use the default value of 1 timeout_seconds int the timeout duration of each ping [optional] if omitted the server will use the default value of 1 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/DownlinkPingResponse/","text":"DownlinkPingResponse \u00b6 Properties \u00b6 Name Type Description Notes rtt str the RTT of the ping result [optional] stat str the stats information of the ping result [optional] success bool whether the ping was succeeded or not [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"DownlinkPingResponse"},{"location":"api/docs/DownlinkPingResponse/#downlinkpingresponse","text":"","title":"DownlinkPingResponse"},{"location":"api/docs/DownlinkPingResponse/#properties","text":"Name Type Description Notes rtt str the RTT of the ping result [optional] stat str the stats information of the ping result [optional] success bool whether the ping was succeeded or not [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EmailApi/","text":"soracom_api.EmailApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_email DELETE /operators/{operator_id}/emails/{email_id} Delete email address get_email GET /operators/{operator_id}/emails/{email_id} Get email address issue_add_email_token POST /operators/add_email_token/issue Issue a token to add an email address list_emails GET /operators/{operator_id}/emails List email addresses verify_add_email_token POST /operators/add_email_token/verify Verify a token to add an email address delete_email \u00b6 delete_email(operator_id, email_id) Delete email address Deletes an email address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id email_id = \"email_id_example\" # str | email_id # example passing only required values which don't have defaults set try: # Delete email address api_instance.delete_email(operator_id, email_id) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->delete_email: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id email_id str email_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_email \u00b6 EmailsModel get_email(operator_id, email_id) Get email address Returns an email address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.emails_model import EmailsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id email_id = \"email_id_example\" # str | email_id # example passing only required values which don't have defaults set try: # Get email address api_response = api_instance.get_email(operator_id, email_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->get_email: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id email_id str email_id Return type \u00b6 EmailsModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] issue_add_email_token \u00b6 issue_add_email_token(issue_add_email_token_request) Issue a token to add an email address Sends an email with a one-time token for adding an e-mail address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.issue_add_email_token_request import IssueAddEmailTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) issue_add_email_token_request = IssueAddEmailTokenRequest( email=\"email_example\", password=\"password_example\", ) # IssueAddEmailTokenRequest | request # example passing only required values which don't have defaults set try: # Issue a token to add an email address api_instance.issue_add_email_token(issue_add_email_token_request) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->issue_add_email_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes issue_add_email_token_request IssueAddEmailTokenRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_emails \u00b6 [EmailsModel] list_emails(operator_id) List email addresses Returns a list of email addresses. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.emails_model import EmailsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List email addresses api_response = api_instance.list_emails(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->list_emails: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 [EmailsModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_add_email_token \u00b6 verify_add_email_token(verify_add_email_token_request) Verify a token to add an email address Verifies the token for adding email address. Example \u00b6 import time import soracom_api from soracom_api.api import email_api from soracom_api.model.verify_add_email_token_request import VerifyAddEmailTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) verify_add_email_token_request = VerifyAddEmailTokenRequest( token=\"token_example\", ) # VerifyAddEmailTokenRequest | request # example passing only required values which don't have defaults set try: # Verify a token to add an email address api_instance.verify_add_email_token(verify_add_email_token_request) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->verify_add_email_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes verify_add_email_token_request VerifyAddEmailTokenRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.EmailApi"},{"location":"api/docs/EmailApi/#soracom_apiemailapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_email DELETE /operators/{operator_id}/emails/{email_id} Delete email address get_email GET /operators/{operator_id}/emails/{email_id} Get email address issue_add_email_token POST /operators/add_email_token/issue Issue a token to add an email address list_emails GET /operators/{operator_id}/emails List email addresses verify_add_email_token POST /operators/add_email_token/verify Verify a token to add an email address","title":"soracom_api.EmailApi"},{"location":"api/docs/EmailApi/#delete_email","text":"delete_email(operator_id, email_id) Delete email address Deletes an email address.","title":"delete_email"},{"location":"api/docs/EmailApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id email_id = \"email_id_example\" # str | email_id # example passing only required values which don't have defaults set try: # Delete email address api_instance.delete_email(operator_id, email_id) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->delete_email: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EmailApi/#parameters","text":"Name Type Description Notes operator_id str operator_id email_id str email_id","title":"Parameters"},{"location":"api/docs/EmailApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EmailApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EmailApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EmailApi/#http-response-details","text":"Status code Description Response headers 204 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EmailApi/#get_email","text":"EmailsModel get_email(operator_id, email_id) Get email address Returns an email address.","title":"get_email"},{"location":"api/docs/EmailApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.emails_model import EmailsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id email_id = \"email_id_example\" # str | email_id # example passing only required values which don't have defaults set try: # Get email address api_response = api_instance.get_email(operator_id, email_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->get_email: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EmailApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id email_id str email_id","title":"Parameters"},{"location":"api/docs/EmailApi/#return-type_1","text":"EmailsModel","title":"Return type"},{"location":"api/docs/EmailApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EmailApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EmailApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EmailApi/#issue_add_email_token","text":"issue_add_email_token(issue_add_email_token_request) Issue a token to add an email address Sends an email with a one-time token for adding an e-mail address.","title":"issue_add_email_token"},{"location":"api/docs/EmailApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.issue_add_email_token_request import IssueAddEmailTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) issue_add_email_token_request = IssueAddEmailTokenRequest( email=\"email_example\", password=\"password_example\", ) # IssueAddEmailTokenRequest | request # example passing only required values which don't have defaults set try: # Issue a token to add an email address api_instance.issue_add_email_token(issue_add_email_token_request) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->issue_add_email_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EmailApi/#parameters_2","text":"Name Type Description Notes issue_add_email_token_request IssueAddEmailTokenRequest request","title":"Parameters"},{"location":"api/docs/EmailApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EmailApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EmailApi/#http-request-headers_2","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EmailApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EmailApi/#list_emails","text":"[EmailsModel] list_emails(operator_id) List email addresses Returns a list of email addresses.","title":"list_emails"},{"location":"api/docs/EmailApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import email_api from soracom_api.model.emails_model import EmailsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List email addresses api_response = api_instance.list_emails(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->list_emails: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EmailApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/EmailApi/#return-type_3","text":"[EmailsModel]","title":"Return type"},{"location":"api/docs/EmailApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EmailApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EmailApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EmailApi/#verify_add_email_token","text":"verify_add_email_token(verify_add_email_token_request) Verify a token to add an email address Verifies the token for adding email address.","title":"verify_add_email_token"},{"location":"api/docs/EmailApi/#example_4","text":"import time import soracom_api from soracom_api.api import email_api from soracom_api.model.verify_add_email_token_request import VerifyAddEmailTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = email_api.EmailApi(api_client) verify_add_email_token_request = VerifyAddEmailTokenRequest( token=\"token_example\", ) # VerifyAddEmailTokenRequest | request # example passing only required values which don't have defaults set try: # Verify a token to add an email address api_instance.verify_add_email_token(verify_add_email_token_request) except soracom_api.ApiException as e: print(\"Exception when calling EmailApi->verify_add_email_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EmailApi/#parameters_4","text":"Name Type Description Notes verify_add_email_token_request VerifyAddEmailTokenRequest request","title":"Parameters"},{"location":"api/docs/EmailApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EmailApi/#authorization_4","text":"No authorization required","title":"Authorization"},{"location":"api/docs/EmailApi/#http-request-headers_4","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EmailApi/#http-response-details_4","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EmailsModel/","text":"EmailsModel \u00b6 Properties \u00b6 Name Type Description Notes create_date_time int [optional] email str [optional] email_id str [optional] update_date_time int [optional] verified bool Whether the email address was verified by token. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EmailsModel"},{"location":"api/docs/EmailsModel/#emailsmodel","text":"","title":"EmailsModel"},{"location":"api/docs/EmailsModel/#properties","text":"Name Type Description Notes create_date_time int [optional] email str [optional] email_id str [optional] update_date_time int [optional] verified bool Whether the email address was verified by token. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EnableMFAOTPResponse/","text":"EnableMFAOTPResponse \u00b6 Properties \u00b6 Name Type Description Notes totp_uri str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EnableMFAOTPResponse"},{"location":"api/docs/EnableMFAOTPResponse/#enablemfaotpresponse","text":"","title":"EnableMFAOTPResponse"},{"location":"api/docs/EnableMFAOTPResponse/#properties","text":"Name Type Description Notes totp_uri str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Error/","text":"Error \u00b6 Properties \u00b6 Name Type Description Notes code int [optional] fields str [optional] message str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Error"},{"location":"api/docs/Error/#error","text":"","title":"Error"},{"location":"api/docs/Error/#properties","text":"Name Type Description Notes code int [optional] fields str [optional] message str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EstimatedCouponModel/","text":"EstimatedCouponModel \u00b6 Properties \u00b6 Name Type Description Notes amount float Amount [optional] currency str Currency [optional] expiry_year_month str Expiry month [optional] order_id str Order ID [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EstimatedCouponModel"},{"location":"api/docs/EstimatedCouponModel/#estimatedcouponmodel","text":"","title":"EstimatedCouponModel"},{"location":"api/docs/EstimatedCouponModel/#properties","text":"Name Type Description Notes amount float Amount [optional] currency str Currency [optional] expiry_year_month str Expiry month [optional] order_id str Order ID [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EstimatedOrderItemModel/","text":"EstimatedOrderItemModel \u00b6 Properties \u00b6 Name Type Description Notes product ProductModel [optional] product_amount float Product amount [optional] quantity int Quantity [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EstimatedOrderItemModel"},{"location":"api/docs/EstimatedOrderItemModel/#estimatedorderitemmodel","text":"","title":"EstimatedOrderItemModel"},{"location":"api/docs/EstimatedOrderItemModel/#properties","text":"Name Type Description Notes product ProductModel [optional] product_amount float Product amount [optional] quantity int Quantity [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EstimatedOrderModel/","text":"EstimatedOrderModel \u00b6 Properties \u00b6 Name Type Description Notes email str Email address [optional] order_id str Order ID [optional] order_item_list [EstimatedOrderItemModel] Order item list [optional] shipping_address ShippingAddressModel [optional] shipping_address_id str Shipping address ID [optional] shipping_cost float Shipping cost [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EstimatedOrderModel"},{"location":"api/docs/EstimatedOrderModel/#estimatedordermodel","text":"","title":"EstimatedOrderModel"},{"location":"api/docs/EstimatedOrderModel/#properties","text":"Name Type Description Notes email str Email address [optional] order_id str Order ID [optional] order_item_list [EstimatedOrderItemModel] Order item list [optional] shipping_address ShippingAddressModel [optional] shipping_address_id str Shipping address ID [optional] shipping_cost float Shipping cost [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EstimatedVolumeDiscountModel/","text":"EstimatedVolumeDiscountModel \u00b6 Properties \u00b6 Name Type Description Notes currency str Currency [optional] order_id str Order ID [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] volume_discount VolumeDiscountModel [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EstimatedVolumeDiscountModel"},{"location":"api/docs/EstimatedVolumeDiscountModel/#estimatedvolumediscountmodel","text":"","title":"EstimatedVolumeDiscountModel"},{"location":"api/docs/EstimatedVolumeDiscountModel/#properties","text":"Name Type Description Notes currency str Currency [optional] order_id str Order ID [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] volume_discount VolumeDiscountModel [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/EventHandlerApi/","text":"soracom_api.EventHandlerApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_event_handler POST /event_handlers Create Event Handler. delete_event_handler DELETE /event_handlers/{handler_id} Delete Event Handler. delete_ignore_event_handler DELETE /event_handlers/{handler_id}/subscribers/{imsi}/ignore Delete Ignore Event Handler. get_event_handler GET /event_handlers/{handler_id} Get Event Handler. list_event_handlers GET /event_handlers List Event Handlers. list_event_handlers_by_subscriber GET /event_handlers/subscribers/{imsi} List Event Handlers related to Subscriber. set_ignore_event_handler POST /event_handlers/{handler_id}/subscribers/{imsi}/ignore Ignore Event Handler. update_event_handler PUT /event_handlers/{handler_id} Update Event Handler. create_event_handler \u00b6 EventHandlerModel create_event_handler(create_event_handler_request) Create Event Handler. Creates a new event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/ Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from soracom_api.model.create_event_handler_request import CreateEventHandlerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) create_event_handler_request = CreateEventHandlerRequest( action_config_list=[ ActionConfig( properties=ActionConfigProperty( access_key=\"access_key_example\", body=\"body_example\", content_type=\"content_type_example\", endpoint=\"endpoint_example\", execution_date_time_const=\"IMMEDIATELY\", execution_offset_minutes=\"execution_offset_minutes_example\", function_name=\"function_name_example\", headers={}, http_method=\"GET\", message=\"message_example\", parameter1=\"parameter1_example\", parameter2=\"parameter2_example\", parameter3=\"parameter3_example\", parameter4=\"parameter4_example\", parameter5=\"parameter5_example\", secret_access_key=\"secret_access_key_example\", speed_class=\"s1.minimum\", title=\"title_example\", to=\"to_example\", url=\"url_example\", ), type=\"ChangeSpeedClassAction\", ), ], description=\"description_example\", name=\"name_example\", rule_config=RuleConfig( properties=RuleConfigProperty( inactive_timeout_date_const=\"IMMEDIATELY\", inactive_timeout_offset_minutes=\"inactive_timeout_offset_minutes_example\", limit_total_traffic_mega_byte=\"limit_total_traffic_mega_byte_example\", run_once_among_target=True, target_ota_status=\"started\", target_speed_class=\"s1.minimum\", target_status=\"ready\", ), type=\"SubscriberDailyTrafficRule\", ), status=\"inactive\", target_group_id=\"target_group_id_example\", target_imsi=\"target_imsi_example\", target_operator_id=\"target_operator_id_example\", target_sim_id=\"target_sim_id_example\", ) # CreateEventHandlerRequest | event handler settings # example passing only required values which don't have defaults set try: # Create Event Handler. api_response = api_instance.create_event_handler(create_event_handler_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->create_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_event_handler_request CreateEventHandlerRequest event handler settings Return type \u00b6 EventHandlerModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_event_handler \u00b6 delete_event_handler(handler_id) Delete Event Handler. Deletes the specified event handler. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID # example passing only required values which don't have defaults set try: # Delete Event Handler. api_instance.delete_event_handler(handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->delete_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes handler_id str handler ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 OK. - 404 EventHandler not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_ignore_event_handler \u00b6 delete_ignore_event_handler(imsi, handler_id) Delete Ignore Event Handler. Deletes the setting for ignoring the specified event handler of the specified IMSI. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi handler_id = \"handler_id_example\" # str | handler_id # example passing only required values which don't have defaults set try: # Delete Ignore Event Handler. api_instance.delete_ignore_event_handler(imsi, handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->delete_ignore_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str imsi handler_id str handler_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 OK - 404 not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_event_handler \u00b6 EventHandlerModel get_event_handler(handler_id) Get Event Handler. Returns information about the specified event handler. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID # example passing only required values which don't have defaults set try: # Get Event Handler. api_response = api_instance.get_event_handler(handler_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->get_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes handler_id str handler ID Return type \u00b6 EventHandlerModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 Handler not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_event_handlers \u00b6 [EventHandlerModel] list_event_handlers() List Event Handlers. Returns a list of event handlers. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) target = \"operator\" # str | target (optional) # example passing only required values which don't have defaults set # and optional values try: # List Event Handlers. api_response = api_instance.list_event_handlers(target=target) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->list_event_handlers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes target str target [optional] Return type \u00b6 [EventHandlerModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_event_handlers_by_subscriber \u00b6 [EventHandlerModel] list_event_handlers_by_subscriber(imsi) List Event Handlers related to Subscriber. Returns a list of event handlers related to the specified IMSI. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi # example passing only required values which don't have defaults set try: # List Event Handlers related to Subscriber. api_response = api_instance.list_event_handlers_by_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->list_event_handlers_by_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str imsi Return type \u00b6 [EventHandlerModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_ignore_event_handler \u00b6 set_ignore_event_handler(imsi, handler_id) Ignore Event Handler. Adds a setting for ignoring the specified event handler of the specified IMSI. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi handler_id = \"handler_id_example\" # str | handler_id # example passing only required values which don't have defaults set try: # Ignore Event Handler. api_instance.set_ignore_event_handler(imsi, handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->set_ignore_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str imsi handler_id str handler_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_event_handler \u00b6 update_event_handler(handler_id, body) Update Event Handler. Updates the specified event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/ Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.create_event_handler_request import CreateEventHandlerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID body = CreateEventHandlerRequest( action_config_list=[ ActionConfig( properties=ActionConfigProperty( access_key=\"access_key_example\", body=\"body_example\", content_type=\"content_type_example\", endpoint=\"endpoint_example\", execution_date_time_const=\"IMMEDIATELY\", execution_offset_minutes=\"execution_offset_minutes_example\", function_name=\"function_name_example\", headers={}, http_method=\"GET\", message=\"message_example\", parameter1=\"parameter1_example\", parameter2=\"parameter2_example\", parameter3=\"parameter3_example\", parameter4=\"parameter4_example\", parameter5=\"parameter5_example\", secret_access_key=\"secret_access_key_example\", speed_class=\"s1.minimum\", title=\"title_example\", to=\"to_example\", url=\"url_example\", ), type=\"ChangeSpeedClassAction\", ), ], description=\"description_example\", name=\"name_example\", rule_config=RuleConfig( properties=RuleConfigProperty( inactive_timeout_date_const=\"IMMEDIATELY\", inactive_timeout_offset_minutes=\"inactive_timeout_offset_minutes_example\", limit_total_traffic_mega_byte=\"limit_total_traffic_mega_byte_example\", run_once_among_target=True, target_ota_status=\"started\", target_speed_class=\"s1.minimum\", target_status=\"ready\", ), type=\"SubscriberDailyTrafficRule\", ), status=\"inactive\", target_group_id=\"target_group_id_example\", target_imsi=\"target_imsi_example\", target_operator_id=\"target_operator_id_example\", target_sim_id=\"target_sim_id_example\", ) # CreateEventHandlerRequest | event handler settings # example passing only required values which don't have defaults set try: # Update Event Handler. api_instance.update_event_handler(handler_id, body) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->update_event_handler: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes handler_id str handler ID body CreateEventHandlerRequest event handler settings Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid handlerId. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.EventHandlerApi"},{"location":"api/docs/EventHandlerApi/#soracom_apieventhandlerapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_event_handler POST /event_handlers Create Event Handler. delete_event_handler DELETE /event_handlers/{handler_id} Delete Event Handler. delete_ignore_event_handler DELETE /event_handlers/{handler_id}/subscribers/{imsi}/ignore Delete Ignore Event Handler. get_event_handler GET /event_handlers/{handler_id} Get Event Handler. list_event_handlers GET /event_handlers List Event Handlers. list_event_handlers_by_subscriber GET /event_handlers/subscribers/{imsi} List Event Handlers related to Subscriber. set_ignore_event_handler POST /event_handlers/{handler_id}/subscribers/{imsi}/ignore Ignore Event Handler. update_event_handler PUT /event_handlers/{handler_id} Update Event Handler.","title":"soracom_api.EventHandlerApi"},{"location":"api/docs/EventHandlerApi/#create_event_handler","text":"EventHandlerModel create_event_handler(create_event_handler_request) Create Event Handler. Creates a new event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/","title":"create_event_handler"},{"location":"api/docs/EventHandlerApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from soracom_api.model.create_event_handler_request import CreateEventHandlerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) create_event_handler_request = CreateEventHandlerRequest( action_config_list=[ ActionConfig( properties=ActionConfigProperty( access_key=\"access_key_example\", body=\"body_example\", content_type=\"content_type_example\", endpoint=\"endpoint_example\", execution_date_time_const=\"IMMEDIATELY\", execution_offset_minutes=\"execution_offset_minutes_example\", function_name=\"function_name_example\", headers={}, http_method=\"GET\", message=\"message_example\", parameter1=\"parameter1_example\", parameter2=\"parameter2_example\", parameter3=\"parameter3_example\", parameter4=\"parameter4_example\", parameter5=\"parameter5_example\", secret_access_key=\"secret_access_key_example\", speed_class=\"s1.minimum\", title=\"title_example\", to=\"to_example\", url=\"url_example\", ), type=\"ChangeSpeedClassAction\", ), ], description=\"description_example\", name=\"name_example\", rule_config=RuleConfig( properties=RuleConfigProperty( inactive_timeout_date_const=\"IMMEDIATELY\", inactive_timeout_offset_minutes=\"inactive_timeout_offset_minutes_example\", limit_total_traffic_mega_byte=\"limit_total_traffic_mega_byte_example\", run_once_among_target=True, target_ota_status=\"started\", target_speed_class=\"s1.minimum\", target_status=\"ready\", ), type=\"SubscriberDailyTrafficRule\", ), status=\"inactive\", target_group_id=\"target_group_id_example\", target_imsi=\"target_imsi_example\", target_operator_id=\"target_operator_id_example\", target_sim_id=\"target_sim_id_example\", ) # CreateEventHandlerRequest | event handler settings # example passing only required values which don't have defaults set try: # Create Event Handler. api_response = api_instance.create_event_handler(create_event_handler_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->create_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters","text":"Name Type Description Notes create_event_handler_request CreateEventHandlerRequest event handler settings","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type","text":"EventHandlerModel","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#delete_event_handler","text":"delete_event_handler(handler_id) Delete Event Handler. Deletes the specified event handler.","title":"delete_event_handler"},{"location":"api/docs/EventHandlerApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID # example passing only required values which don't have defaults set try: # Delete Event Handler. api_instance.delete_event_handler(handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->delete_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_1","text":"Name Type Description Notes handler_id str handler ID","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_1","text":"Status code Description Response headers 204 OK. - 404 EventHandler not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#delete_ignore_event_handler","text":"delete_ignore_event_handler(imsi, handler_id) Delete Ignore Event Handler. Deletes the setting for ignoring the specified event handler of the specified IMSI.","title":"delete_ignore_event_handler"},{"location":"api/docs/EventHandlerApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi handler_id = \"handler_id_example\" # str | handler_id # example passing only required values which don't have defaults set try: # Delete Ignore Event Handler. api_instance.delete_ignore_event_handler(imsi, handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->delete_ignore_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_2","text":"Name Type Description Notes imsi str imsi handler_id str handler_id","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_2","text":"Status code Description Response headers 204 OK - 404 not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#get_event_handler","text":"EventHandlerModel get_event_handler(handler_id) Get Event Handler. Returns information about the specified event handler.","title":"get_event_handler"},{"location":"api/docs/EventHandlerApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID # example passing only required values which don't have defaults set try: # Get Event Handler. api_response = api_instance.get_event_handler(handler_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->get_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_3","text":"Name Type Description Notes handler_id str handler ID","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_3","text":"EventHandlerModel","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - 404 Handler not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#list_event_handlers","text":"[EventHandlerModel] list_event_handlers() List Event Handlers. Returns a list of event handlers.","title":"list_event_handlers"},{"location":"api/docs/EventHandlerApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) target = \"operator\" # str | target (optional) # example passing only required values which don't have defaults set # and optional values try: # List Event Handlers. api_response = api_instance.list_event_handlers(target=target) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->list_event_handlers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_4","text":"Name Type Description Notes target str target [optional]","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_4","text":"[EventHandlerModel]","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#list_event_handlers_by_subscriber","text":"[EventHandlerModel] list_event_handlers_by_subscriber(imsi) List Event Handlers related to Subscriber. Returns a list of event handlers related to the specified IMSI.","title":"list_event_handlers_by_subscriber"},{"location":"api/docs/EventHandlerApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.event_handler_model import EventHandlerModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi # example passing only required values which don't have defaults set try: # List Event Handlers related to Subscriber. api_response = api_instance.list_event_handlers_by_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->list_event_handlers_by_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_5","text":"Name Type Description Notes imsi str imsi","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_5","text":"[EventHandlerModel]","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_5","text":"Status code Description Response headers 200 OK. - 404 not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#set_ignore_event_handler","text":"set_ignore_event_handler(imsi, handler_id) Ignore Event Handler. Adds a setting for ignoring the specified event handler of the specified IMSI.","title":"set_ignore_event_handler"},{"location":"api/docs/EventHandlerApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) imsi = \"imsi_example\" # str | imsi handler_id = \"handler_id_example\" # str | handler_id # example passing only required values which don't have defaults set try: # Ignore Event Handler. api_instance.set_ignore_event_handler(imsi, handler_id) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->set_ignore_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_6","text":"Name Type Description Notes imsi str imsi handler_id str handler_id","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_6","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_6","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerApi/#update_event_handler","text":"update_event_handler(handler_id, body) Update Event Handler. Updates the specified event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/","title":"update_event_handler"},{"location":"api/docs/EventHandlerApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import event_handler_api from soracom_api.model.create_event_handler_request import CreateEventHandlerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = event_handler_api.EventHandlerApi(api_client) handler_id = \"handler_id_example\" # str | handler ID body = CreateEventHandlerRequest( action_config_list=[ ActionConfig( properties=ActionConfigProperty( access_key=\"access_key_example\", body=\"body_example\", content_type=\"content_type_example\", endpoint=\"endpoint_example\", execution_date_time_const=\"IMMEDIATELY\", execution_offset_minutes=\"execution_offset_minutes_example\", function_name=\"function_name_example\", headers={}, http_method=\"GET\", message=\"message_example\", parameter1=\"parameter1_example\", parameter2=\"parameter2_example\", parameter3=\"parameter3_example\", parameter4=\"parameter4_example\", parameter5=\"parameter5_example\", secret_access_key=\"secret_access_key_example\", speed_class=\"s1.minimum\", title=\"title_example\", to=\"to_example\", url=\"url_example\", ), type=\"ChangeSpeedClassAction\", ), ], description=\"description_example\", name=\"name_example\", rule_config=RuleConfig( properties=RuleConfigProperty( inactive_timeout_date_const=\"IMMEDIATELY\", inactive_timeout_offset_minutes=\"inactive_timeout_offset_minutes_example\", limit_total_traffic_mega_byte=\"limit_total_traffic_mega_byte_example\", run_once_among_target=True, target_ota_status=\"started\", target_speed_class=\"s1.minimum\", target_status=\"ready\", ), type=\"SubscriberDailyTrafficRule\", ), status=\"inactive\", target_group_id=\"target_group_id_example\", target_imsi=\"target_imsi_example\", target_operator_id=\"target_operator_id_example\", target_sim_id=\"target_sim_id_example\", ) # CreateEventHandlerRequest | event handler settings # example passing only required values which don't have defaults set try: # Update Event Handler. api_instance.update_event_handler(handler_id, body) except soracom_api.ApiException as e: print(\"Exception when calling EventHandlerApi->update_event_handler: %s\\n\" % e)","title":"Example"},{"location":"api/docs/EventHandlerApi/#parameters_7","text":"Name Type Description Notes handler_id str handler ID body CreateEventHandlerRequest event handler settings","title":"Parameters"},{"location":"api/docs/EventHandlerApi/#return-type_7","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/EventHandlerApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/EventHandlerApi/#http-request-headers_7","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/EventHandlerApi/#http-response-details_7","text":"Status code Description Response headers 200 OK. - 400 Invalid handlerId. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/EventHandlerModel/","text":"EventHandlerModel \u00b6 Properties \u00b6 Name Type Description Notes action_config_list [ActionConfig] handler_id str name str rule_config RuleConfig status str description str [optional] target_group_id str [optional] target_imsi str [optional] target_operator_id str [optional] target_sim_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"EventHandlerModel"},{"location":"api/docs/EventHandlerModel/#eventhandlermodel","text":"","title":"EventHandlerModel"},{"location":"api/docs/EventHandlerModel/#properties","text":"Name Type Description Notes action_config_list [ActionConfig] handler_id str name str rule_config RuleConfig status str description str [optional] target_group_id str [optional] target_imsi str [optional] target_operator_id str [optional] target_sim_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ExecuteSoraletRequest/","text":"ExecuteSoraletRequest \u00b6 Properties \u00b6 Name Type Description Notes content_type str direction str payload str source {str: (SoraletDataSource,)} version str encoding_type str [optional] userdata str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ExecuteSoraletRequest"},{"location":"api/docs/ExecuteSoraletRequest/#executesoraletrequest","text":"","title":"ExecuteSoraletRequest"},{"location":"api/docs/ExecuteSoraletRequest/#properties","text":"Name Type Description Notes content_type str direction str payload str source {str: (SoraletDataSource,)} version str encoding_type str [optional] userdata str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ExecuteSoraletResponse/","text":"ExecuteSoraletResponse \u00b6 Properties \u00b6 Name Type Description Notes body str [optional] content_type str [optional] encoding_type str [optional] result_code int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ExecuteSoraletResponse"},{"location":"api/docs/ExecuteSoraletResponse/#executesoraletresponse","text":"","title":"ExecuteSoraletResponse"},{"location":"api/docs/ExecuteSoraletResponse/#properties","text":"Name Type Description Notes body str [optional] content_type str [optional] encoding_type str [optional] result_code int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ExpiryTime/","text":"ExpiryTime \u00b6 Properties \u00b6 Name Type Description Notes expiry_time int, none_type The timestamp (in Unix milliseconds) of a date and time set using the Expiration function. If no Expiration function is set, null is returned. expiry_action str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ExpiryTime"},{"location":"api/docs/ExpiryTime/#expirytime","text":"","title":"ExpiryTime"},{"location":"api/docs/ExpiryTime/#properties","text":"Name Type Description Notes expiry_time int, none_type The timestamp (in Unix milliseconds) of a date and time set using the Expiration function. If no Expiration function is set, null is returned. expiry_action str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ExportRequest/","text":"ExportRequest \u00b6 Properties \u00b6 Name Type Description Notes _from int [optional] period str [optional] to int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ExportRequest"},{"location":"api/docs/ExportRequest/#exportrequest","text":"","title":"ExportRequest"},{"location":"api/docs/ExportRequest/#properties","text":"Name Type Description Notes _from int [optional] period str [optional] to int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FileEntry/","text":"FileEntry \u00b6 Properties \u00b6 Name Type Description Notes content_length int Content length of the file [optional] content_type str Content type of the file [optional] created_time int Created time of the file [optional] directory str Parent directory name [optional] etag str Etag of the file [optional] file_path str Absolute path of the file [optional] filename str File name [optional] is_directory bool Whether the entry is directory or not [optional] last_modified_time int Last modified time of the file [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FileEntry"},{"location":"api/docs/FileEntry/#fileentry","text":"","title":"FileEntry"},{"location":"api/docs/FileEntry/#properties","text":"Name Type Description Notes content_length int Content length of the file [optional] content_type str Content type of the file [optional] created_time int Created time of the file [optional] directory str Parent directory name [optional] etag str Etag of the file [optional] file_path str Absolute path of the file [optional] filename str File name [optional] is_directory bool Whether the entry is directory or not [optional] last_modified_time int Last modified time of the file [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FileEntryApi/","text":"soracom_api.FileEntryApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_directory DELETE /files/{scope}/{path}/ Delete specified directory in the scope. delete_file DELETE /files/{scope}/{path} Delete specified file in the scope. find_files GET /files Find files with prefix query parameter in the scope get_file GET /files/{scope}/{path} Download file specified by the path and the scope get_file_metadata HEAD /files/{scope}/{path} Get the metadata of the file specified by the path and the scope list_files GET /files/{scope}/{path}/ List files and directories on the path in the scope put_file PUT /files/{scope}/{path} Upload file to the path in the scope. delete_directory \u00b6 delete_directory(path) Delete specified directory in the scope. Deletes the specified directory in the scope. Only private scope is allowed for the operation. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target directory path # example passing only required values which don't have defaults set try: # Delete specified directory in the scope. api_instance.delete_directory(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->delete_directory: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes path str Target directory path scope str Scope of the request defaults to \"private\" Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The specified directory is successfully deleted - 400 The specified directory is not empty - 404 No such directory - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_file \u00b6 delete_file(path) Delete specified file in the scope. Deletes the specified file in the scope. Only private scope is allowed for the operation. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Delete specified file in the scope. api_instance.delete_file(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->delete_file: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\" Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The specified file is successfully deleted - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README] find_files \u00b6 [FileEntry] find_files(scope, prefix) Find files with prefix query parameter in the scope Returns a list of file entries which beginnings of their file paths are matched with the prefix query string in the ascending sorted UTF-8 bytes order of their file paths. An empty list is returned if the prefix does not match with any paths of file entries. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) scope = \"private\" # str | Scope of the request prefix = \"prefix_example\" # str | Prefix to match with file path limit = \"10\" # str | Num of entries (optional) if omitted the server will use the default value of \"10\" last_evaluated_key = \"last_evaluated_key_example\" # str | The filePath of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. (optional) # example passing only required values which don't have defaults set try: # Find files with prefix query parameter in the scope api_response = api_instance.find_files(scope, prefix) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->find_files: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Find files with prefix query parameter in the scope api_response = api_instance.find_files(scope, prefix, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->find_files: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes scope str Scope of the request prefix str Prefix to match with file path limit str Num of entries [optional] if omitted the server will use the default value of \"10\" last_evaluated_key str The filePath of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. [optional] Return type \u00b6 [FileEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 List of file entries found with query parameters, which can be empty if the prefix does not match with any paths of file entries. - 404 The specified scope does not exist - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_file \u00b6 get_file(path) Download file specified by the path and the scope Redirects the client to URL for the link to download the file specified by the scope and the path. By issuing HTTP GET request to the link returned in the response, the client is able to download the file. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Download file specified by the path and the scope api_instance.get_file(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->get_file: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\" Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 302 Client is redirected to the link to download the file. - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_file_metadata \u00b6 FileEntry get_file_metadata(path) Get the metadata of the file specified by the path and the scope Gets metadata of the file specified by the path and the scope. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Get the metadata of the file specified by the path and the scope api_response = api_instance.get_file_metadata(path) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->get_file_metadata: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\" Return type \u00b6 FileEntry Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Metadata of the file - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_files \u00b6 [FileEntry] list_files() List files and directories on the path in the scope Returns a list of file entries under the path in the scope. This operation works only for directories and an error will be retrurned if the file entry corresponds to the given path is not a directory. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) limit = \"10\" # str | Num of entries (optional) if omitted the server will use the default value of \"10\" last_evaluated_key = \"last_evaluated_key_example\" # str | The filename of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. (optional) # example passing only required values which don't have defaults set try: # List files and directories on the path in the scope api_response = api_instance.list_files() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->list_files: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List files and directories on the path in the scope api_response = api_instance.list_files(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->list_files: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes scope str Scope of the request defaults to \"private\" path str Target path defaults to \"/\" limit str Num of entries [optional] if omitted the server will use the default value of \"10\" last_evaluated_key str The filename of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. [optional] Return type \u00b6 [FileEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of file entries. - 404 No such directory - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_file \u00b6 put_file(path, body) Upload file to the path in the scope. Uploads the file to the specified path in the scope. Only private scope is allowed for the operation. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path body = open('/path/to/file', 'rb') # file_type | Content of the file to upload content_type = \"content-type_example\" # str | Content type of the file to upload (optional) # example passing only required values which don't have defaults set try: # Upload file to the path in the scope. api_instance.put_file(path, body) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->put_file: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Upload file to the path in the scope. api_instance.put_file(path, body, content_type=content_type) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->put_file: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes path str Target path body file_type Content of the file to upload scope str Scope of the request defaults to \"private\" content_type str Content type of the file to upload [optional] Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 File is successfully updated with the content - 201 File is successfully created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.FileEntryApi"},{"location":"api/docs/FileEntryApi/#soracom_apifileentryapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_directory DELETE /files/{scope}/{path}/ Delete specified directory in the scope. delete_file DELETE /files/{scope}/{path} Delete specified file in the scope. find_files GET /files Find files with prefix query parameter in the scope get_file GET /files/{scope}/{path} Download file specified by the path and the scope get_file_metadata HEAD /files/{scope}/{path} Get the metadata of the file specified by the path and the scope list_files GET /files/{scope}/{path}/ List files and directories on the path in the scope put_file PUT /files/{scope}/{path} Upload file to the path in the scope.","title":"soracom_api.FileEntryApi"},{"location":"api/docs/FileEntryApi/#delete_directory","text":"delete_directory(path) Delete specified directory in the scope. Deletes the specified directory in the scope. Only private scope is allowed for the operation.","title":"delete_directory"},{"location":"api/docs/FileEntryApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target directory path # example passing only required values which don't have defaults set try: # Delete specified directory in the scope. api_instance.delete_directory(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->delete_directory: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters","text":"Name Type Description Notes path str Target directory path scope str Scope of the request defaults to \"private\"","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details","text":"Status code Description Response headers 204 The specified directory is successfully deleted - 400 The specified directory is not empty - 404 No such directory - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#delete_file","text":"delete_file(path) Delete specified file in the scope. Deletes the specified file in the scope. Only private scope is allowed for the operation.","title":"delete_file"},{"location":"api/docs/FileEntryApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Delete specified file in the scope. api_instance.delete_file(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->delete_file: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_1","text":"Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\"","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_1","text":"Status code Description Response headers 204 The specified file is successfully deleted - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#find_files","text":"[FileEntry] find_files(scope, prefix) Find files with prefix query parameter in the scope Returns a list of file entries which beginnings of their file paths are matched with the prefix query string in the ascending sorted UTF-8 bytes order of their file paths. An empty list is returned if the prefix does not match with any paths of file entries.","title":"find_files"},{"location":"api/docs/FileEntryApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) scope = \"private\" # str | Scope of the request prefix = \"prefix_example\" # str | Prefix to match with file path limit = \"10\" # str | Num of entries (optional) if omitted the server will use the default value of \"10\" last_evaluated_key = \"last_evaluated_key_example\" # str | The filePath of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. (optional) # example passing only required values which don't have defaults set try: # Find files with prefix query parameter in the scope api_response = api_instance.find_files(scope, prefix) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->find_files: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Find files with prefix query parameter in the scope api_response = api_instance.find_files(scope, prefix, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->find_files: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_2","text":"Name Type Description Notes scope str Scope of the request prefix str Prefix to match with file path limit str Num of entries [optional] if omitted the server will use the default value of \"10\" last_evaluated_key str The filePath of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. [optional]","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_2","text":"[FileEntry]","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_2","text":"Status code Description Response headers 200 List of file entries found with query parameters, which can be empty if the prefix does not match with any paths of file entries. - 404 The specified scope does not exist - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#get_file","text":"get_file(path) Download file specified by the path and the scope Redirects the client to URL for the link to download the file specified by the scope and the path. By issuing HTTP GET request to the link returned in the response, the client is able to download the file.","title":"get_file"},{"location":"api/docs/FileEntryApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Download file specified by the path and the scope api_instance.get_file(path) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->get_file: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_3","text":"Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\"","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_3","text":"Status code Description Response headers 302 Client is redirected to the link to download the file. - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#get_file_metadata","text":"FileEntry get_file_metadata(path) Get the metadata of the file specified by the path and the scope Gets metadata of the file specified by the path and the scope.","title":"get_file_metadata"},{"location":"api/docs/FileEntryApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path # example passing only required values which don't have defaults set try: # Get the metadata of the file specified by the path and the scope api_response = api_instance.get_file_metadata(path) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->get_file_metadata: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_4","text":"Name Type Description Notes path str Target path scope str Scope of the request defaults to \"private\"","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_4","text":"FileEntry","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_4","text":"Status code Description Response headers 200 Metadata of the file - 404 No such file - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#list_files","text":"[FileEntry] list_files() List files and directories on the path in the scope Returns a list of file entries under the path in the scope. This operation works only for directories and an error will be retrurned if the file entry corresponds to the given path is not a directory. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_files"},{"location":"api/docs/FileEntryApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from soracom_api.model.file_entry import FileEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) limit = \"10\" # str | Num of entries (optional) if omitted the server will use the default value of \"10\" last_evaluated_key = \"last_evaluated_key_example\" # str | The filename of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. (optional) # example passing only required values which don't have defaults set try: # List files and directories on the path in the scope api_response = api_instance.list_files() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->list_files: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List files and directories on the path in the scope api_response = api_instance.list_files(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->list_files: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_5","text":"Name Type Description Notes scope str Scope of the request defaults to \"private\" path str Target path defaults to \"/\" limit str Num of entries [optional] if omitted the server will use the default value of \"10\" last_evaluated_key str The filename of the last file entry retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next file entry onward. [optional]","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_5","text":"[FileEntry]","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_5","text":"Status code Description Response headers 200 A list of file entries. - 404 No such directory - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileEntryApi/#put_file","text":"put_file(path, body) Upload file to the path in the scope. Uploads the file to the specified path in the scope. Only private scope is allowed for the operation.","title":"put_file"},{"location":"api/docs/FileEntryApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import file_entry_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = file_entry_api.FileEntryApi(api_client) path = \"path_example\" # str | Target path body = open('/path/to/file', 'rb') # file_type | Content of the file to upload content_type = \"content-type_example\" # str | Content type of the file to upload (optional) # example passing only required values which don't have defaults set try: # Upload file to the path in the scope. api_instance.put_file(path, body) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->put_file: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Upload file to the path in the scope. api_instance.put_file(path, body, content_type=content_type) except soracom_api.ApiException as e: print(\"Exception when calling FileEntryApi->put_file: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FileEntryApi/#parameters_6","text":"Name Type Description Notes path str Target path body file_type Content of the file to upload scope str Scope of the request defaults to \"private\" content_type str Content type of the file to upload [optional]","title":"Parameters"},{"location":"api/docs/FileEntryApi/#return-type_6","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/FileEntryApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FileEntryApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/FileEntryApi/#http-response-details_6","text":"Status code Description Response headers 200 File is successfully updated with the content - 201 File is successfully created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FileExportResponse/","text":"FileExportResponse \u00b6 Properties \u00b6 Name Type Description Notes exported_file_id str \u30d5\u30a1\u30a4\u30eb\u51fa\u529bID(\u30ea\u30af\u30a8\u30b9\u30c8\u306bexport_mode=async\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff09 [optional] exported_file_path str \u51fa\u529b\u6e08\u307f\u30d5\u30a1\u30a4\u30eb\u53d6\u5f97\u30d1\u30b9(\u30ea\u30af\u30a8\u30b9\u30c8\u306bexport_mode=async\u3092\u4ed8\u4e0e\u3057\u305f\u5834\u5408\uff09 [optional] url str \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL(export_mode\u6307\u5b9a\u306a\u3057\u3001\u3082\u3057\u304f\u306fexport_mode=sync\u306e\u5834\u5408 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FileExportResponse"},{"location":"api/docs/FileExportResponse/#fileexportresponse","text":"","title":"FileExportResponse"},{"location":"api/docs/FileExportResponse/#properties","text":"Name Type Description Notes exported_file_id str \u30d5\u30a1\u30a4\u30eb\u51fa\u529bID(\u30ea\u30af\u30a8\u30b9\u30c8\u306bexport_mode=async\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff09 [optional] exported_file_path str \u51fa\u529b\u6e08\u307f\u30d5\u30a1\u30a4\u30eb\u53d6\u5f97\u30d1\u30b9(\u30ea\u30af\u30a8\u30b9\u30c8\u306bexport_mode=async\u3092\u4ed8\u4e0e\u3057\u305f\u5834\u5408\uff09 [optional] url str \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL(export_mode\u6307\u5b9a\u306a\u3057\u3001\u3082\u3057\u304f\u306fexport_mode=sync\u306e\u5834\u5408 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FilesApi/","text":"soracom_api.FilesApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_exported_file GET /files/exported/{exported_file_id} Get an exported file. get_exported_file \u00b6 GetExportedFileResponse get_exported_file(exported_file_id) Get an exported file. Get an exported file. The url field in the response will contain a URL to download the exported file. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import files_api from soracom_api.model.get_exported_file_response import GetExportedFileResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = files_api.FilesApi(api_client) exported_file_id = \"exported_file_id_example\" # str | file export id # example passing only required values which don't have defaults set try: # Get an exported file. api_response = api_instance.get_exported_file(exported_file_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FilesApi->get_exported_file: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes exported_file_id str file export id Return type \u00b6 GetExportedFileResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.FilesApi"},{"location":"api/docs/FilesApi/#soracom_apifilesapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_exported_file GET /files/exported/{exported_file_id} Get an exported file.","title":"soracom_api.FilesApi"},{"location":"api/docs/FilesApi/#get_exported_file","text":"GetExportedFileResponse get_exported_file(exported_file_id) Get an exported file. Get an exported file. The url field in the response will contain a URL to download the exported file.","title":"get_exported_file"},{"location":"api/docs/FilesApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import files_api from soracom_api.model.get_exported_file_response import GetExportedFileResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = files_api.FilesApi(api_client) exported_file_id = \"exported_file_id_example\" # str | file export id # example passing only required values which don't have defaults set try: # Get an exported file. api_response = api_instance.get_exported_file(exported_file_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling FilesApi->get_exported_file: %s\\n\" % e)","title":"Example"},{"location":"api/docs/FilesApi/#parameters","text":"Name Type Description Notes exported_file_id str file export id","title":"Parameters"},{"location":"api/docs/FilesApi/#return-type","text":"GetExportedFileResponse","title":"Return type"},{"location":"api/docs/FilesApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/FilesApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/FilesApi/#http-response-details","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/FunnelAWSFirehoseDestination/","text":"FunnelAWSFirehoseDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"firehose\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAWSFirehoseDestination"},{"location":"api/docs/FunnelAWSFirehoseDestination/#funnelawsfirehosedestination","text":"","title":"FunnelAWSFirehoseDestination"},{"location":"api/docs/FunnelAWSFirehoseDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"firehose\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelAWSIoTDestination/","text":"FunnelAWSIoTDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"aws-iot\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAWSIoTDestination"},{"location":"api/docs/FunnelAWSIoTDestination/#funnelawsiotdestination","text":"","title":"FunnelAWSIoTDestination"},{"location":"api/docs/FunnelAWSIoTDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"aws-iot\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelAWSKinesisDestination/","text":"FunnelAWSKinesisDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" randomize_partition_key bool [optional] resource_url str [optional] service str [optional] if omitted the server will use the default value of \"kinesis\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAWSKinesisDestination"},{"location":"api/docs/FunnelAWSKinesisDestination/#funnelawskinesisdestination","text":"","title":"FunnelAWSKinesisDestination"},{"location":"api/docs/FunnelAWSKinesisDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"aws\" randomize_partition_key bool [optional] resource_url str [optional] service str [optional] if omitted the server will use the default value of \"kinesis\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelAcroquestTorrentioDestination/","text":"FunnelAcroquestTorrentioDestination \u00b6 Properties \u00b6 Name Type Description Notes endpoint_id str [optional] provider str [optional] if omitted the server will use the default value of \"acroquest\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"torrentio\" tenant_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAcroquestTorrentioDestination"},{"location":"api/docs/FunnelAcroquestTorrentioDestination/#funnelacroquesttorrentiodestination","text":"","title":"FunnelAcroquestTorrentioDestination"},{"location":"api/docs/FunnelAcroquestTorrentioDestination/#properties","text":"Name Type Description Notes endpoint_id str [optional] provider str [optional] if omitted the server will use the default value of \"acroquest\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"torrentio\" tenant_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelAppressoDataSpiderDestination/","text":"FunnelAppressoDataSpiderDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"appresso\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"dataspider\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAppressoDataSpiderDestination"},{"location":"api/docs/FunnelAppressoDataSpiderDestination/#funnelappressodataspiderdestination","text":"","title":"FunnelAppressoDataSpiderDestination"},{"location":"api/docs/FunnelAppressoDataSpiderDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"appresso\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"dataspider\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelAzureEventHubDestination/","text":"FunnelAzureEventHubDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"azure\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"eventhubs\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelAzureEventHubDestination"},{"location":"api/docs/FunnelAzureEventHubDestination/#funnelazureeventhubdestination","text":"","title":"FunnelAzureEventHubDestination"},{"location":"api/docs/FunnelAzureEventHubDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"azure\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"eventhubs\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelBrainsTechImpulseDestination/","text":"FunnelBrainsTechImpulseDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"brains-tech\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"impulse\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelBrainsTechImpulseDestination"},{"location":"api/docs/FunnelBrainsTechImpulseDestination/#funnelbrainstechimpulsedestination","text":"","title":"FunnelBrainsTechImpulseDestination"},{"location":"api/docs/FunnelBrainsTechImpulseDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"brains-tech\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"impulse\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelConfiguration/","text":"FunnelConfiguration \u00b6 Properties \u00b6 Name Type Description Notes add_sim_id bool [optional] if omitted the server will use the default value of False content_type FunnelContentType [optional] credentials_id str [optional] destination FunnelDestination [optional] enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelConfiguration"},{"location":"api/docs/FunnelConfiguration/#funnelconfiguration","text":"","title":"FunnelConfiguration"},{"location":"api/docs/FunnelConfiguration/#properties","text":"Name Type Description Notes add_sim_id bool [optional] if omitted the server will use the default value of False content_type FunnelContentType [optional] credentials_id str [optional] destination FunnelDestination [optional] enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelContentType/","text":"FunnelContentType \u00b6 Properties \u00b6 Name Type Description Notes value str must be one of [\"json\", \"text\", \"unspecified\", \"binary\", \"application/x-soracom-bf-v1\", ] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelContentType"},{"location":"api/docs/FunnelContentType/#funnelcontenttype","text":"","title":"FunnelContentType"},{"location":"api/docs/FunnelContentType/#properties","text":"Name Type Description Notes value str must be one of [\"json\", \"text\", \"unspecified\", \"binary\", \"application/x-soracom-bf-v1\", ] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelDestination/","text":"FunnelDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] resource_url str [optional] service str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelDestination"},{"location":"api/docs/FunnelDestination/#funneldestination","text":"","title":"FunnelDestination"},{"location":"api/docs/FunnelDestination/#properties","text":"Name Type Description Notes provider str [optional] resource_url str [optional] service str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelEsrijArcgisOnlineDestination/","text":"FunnelEsrijArcgisOnlineDestination \u00b6 Properties \u00b6 Name Type Description Notes config str [optional] provider str [optional] if omitted the server will use the default value of \"esrij\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"arcgis-online\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelEsrijArcgisOnlineDestination"},{"location":"api/docs/FunnelEsrijArcgisOnlineDestination/#funnelesrijarcgisonlinedestination","text":"","title":"FunnelEsrijArcgisOnlineDestination"},{"location":"api/docs/FunnelEsrijArcgisOnlineDestination/#properties","text":"Name Type Description Notes config str [optional] provider str [optional] if omitted the server will use the default value of \"esrij\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"arcgis-online\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelFusicMockmockDatarecorderDestination/","text":"FunnelFusicMockmockDatarecorderDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"fusic\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"mockmock-datarecorder\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelFusicMockmockDatarecorderDestination"},{"location":"api/docs/FunnelFusicMockmockDatarecorderDestination/#funnelfusicmockmockdatarecorderdestination","text":"","title":"FunnelFusicMockmockDatarecorderDestination"},{"location":"api/docs/FunnelFusicMockmockDatarecorderDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"fusic\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"mockmock-datarecorder\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelGooglePubSubDestination/","text":"FunnelGooglePubSubDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"google\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"pubsub\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelGooglePubSubDestination"},{"location":"api/docs/FunnelGooglePubSubDestination/#funnelgooglepubsubdestination","text":"","title":"FunnelGooglePubSubDestination"},{"location":"api/docs/FunnelGooglePubSubDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"google\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"pubsub\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelInfoteriaPlatioDestination/","text":"FunnelInfoteriaPlatioDestination \u00b6 Properties \u00b6 Name Type Description Notes application_id str [optional] collection_id str [optional] pass_all bool [optional] provider str [optional] if omitted the server will use the default value of \"infoteria\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"platio\" values str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelInfoteriaPlatioDestination"},{"location":"api/docs/FunnelInfoteriaPlatioDestination/#funnelinfoteriaplatiodestination","text":"","title":"FunnelInfoteriaPlatioDestination"},{"location":"api/docs/FunnelInfoteriaPlatioDestination/#properties","text":"Name Type Description Notes application_id str [optional] collection_id str [optional] pass_all bool [optional] provider str [optional] if omitted the server will use the default value of \"infoteria\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"platio\" values str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelKiiThingifDestination/","text":"FunnelKiiThingifDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"kii\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"thingif\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelKiiThingifDestination"},{"location":"api/docs/FunnelKiiThingifDestination/#funnelkiithingifdestination","text":"","title":"FunnelKiiThingifDestination"},{"location":"api/docs/FunnelKiiThingifDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"kii\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"thingif\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelLandlogDestination/","text":"FunnelLandlogDestination \u00b6 Properties \u00b6 Name Type Description Notes channel_id str [optional] data_format str [optional] provider str [optional] if omitted the server will use the default value of \"landlog\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"landlog\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelLandlogDestination"},{"location":"api/docs/FunnelLandlogDestination/#funnellandlogdestination","text":"","title":"FunnelLandlogDestination"},{"location":"api/docs/FunnelLandlogDestination/#properties","text":"Name Type Description Notes channel_id str [optional] data_format str [optional] provider str [optional] if omitted the server will use the default value of \"landlog\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"landlog\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelOptimCloudiotosDestination/","text":"FunnelOptimCloudiotosDestination \u00b6 Properties \u00b6 Name Type Description Notes channel_id str [optional] data_format str [optional] provider str [optional] if omitted the server will use the default value of \"optim\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"cloudiotos\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelOptimCloudiotosDestination"},{"location":"api/docs/FunnelOptimCloudiotosDestination/#funneloptimcloudiotosdestination","text":"","title":"FunnelOptimCloudiotosDestination"},{"location":"api/docs/FunnelOptimCloudiotosDestination/#properties","text":"Name Type Description Notes channel_id str [optional] data_format str [optional] provider str [optional] if omitted the server will use the default value of \"optim\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"cloudiotos\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelSensorCorpusDestination/","text":"FunnelSensorCorpusDestination \u00b6 Properties \u00b6 Name Type Description Notes additional_data str [optional] provider str [optional] if omitted the server will use the default value of \"infocorpus\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"sensorcorpus\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelSensorCorpusDestination"},{"location":"api/docs/FunnelSensorCorpusDestination/#funnelsensorcorpusdestination","text":"","title":"FunnelSensorCorpusDestination"},{"location":"api/docs/FunnelSensorCorpusDestination/#properties","text":"Name Type Description Notes additional_data str [optional] provider str [optional] if omitted the server will use the default value of \"infocorpus\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"sensorcorpus\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelTeradataIntellicloudDestination/","text":"FunnelTeradataIntellicloudDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"teradata\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"intellicloud\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelTeradataIntellicloudDestination"},{"location":"api/docs/FunnelTeradataIntellicloudDestination/#funnelteradataintelliclouddestination","text":"","title":"FunnelTeradataIntellicloudDestination"},{"location":"api/docs/FunnelTeradataIntellicloudDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"teradata\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"intellicloud\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelWingarcMotionboardDestination/","text":"FunnelWingarcMotionboardDestination \u00b6 Properties \u00b6 Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"wingarc\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"motionboard\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelWingarcMotionboardDestination"},{"location":"api/docs/FunnelWingarcMotionboardDestination/#funnelwingarcmotionboarddestination","text":"","title":"FunnelWingarcMotionboardDestination"},{"location":"api/docs/FunnelWingarcMotionboardDestination/#properties","text":"Name Type Description Notes provider str [optional] if omitted the server will use the default value of \"wingarc\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"motionboard\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/FunnelYaskawaMmcloudDestination/","text":"FunnelYaskawaMmcloudDestination \u00b6 Properties \u00b6 Name Type Description Notes desthost str [optional] destport int [optional] provider str [optional] if omitted the server will use the default value of \"yaskawa\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"mmcloud\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"FunnelYaskawaMmcloudDestination"},{"location":"api/docs/FunnelYaskawaMmcloudDestination/#funnelyaskawammclouddestination","text":"","title":"FunnelYaskawaMmcloudDestination"},{"location":"api/docs/FunnelYaskawaMmcloudDestination/#properties","text":"Name Type Description Notes desthost str [optional] destport int [optional] provider str [optional] if omitted the server will use the default value of \"yaskawa\" resource_url str [optional] service str [optional] if omitted the server will use the default value of \"mmcloud\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Gadget/","text":"Gadget \u00b6 Properties \u00b6 Name Type Description Notes attributes {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] group_id str, none_type [optional] id str [optional] last_modified_time datetime [optional] last_seen {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] operator_id str [optional] product_id str [optional] serial_number str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Gadget"},{"location":"api/docs/Gadget/#gadget","text":"","title":"Gadget"},{"location":"api/docs/Gadget/#properties","text":"Name Type Description Notes attributes {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] group_id str, none_type [optional] id str [optional] last_modified_time datetime [optional] last_seen {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] operator_id str [optional] product_id str [optional] serial_number str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GadgetApi/","text":"soracom_api.GadgetApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_gadget_tag DELETE /gadgets/{product_id}/{serial_number}/tags/{tag_name} Delete gadget Tag. disable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/disable_termination Disable Termination of gadget. enable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/enable_termination Enable Termination of gadget. get_gadget GET /gadgets/{product_id}/{serial_number} Get gadget. list_gadgets GET /gadgets List gadgets. put_gadget_tags PUT /gadgets/{product_id}/{serial_number}/tags Bulk Insert or Update gadget Tags. register_gadget POST /gadgets/{product_id}/{serial_number}/register Register a gadget. set_gadget_group POST /gadgets/{product_id}/{serial_number}/set_group Set Group of gadget. terminate_gadget POST /gadgets/{product_id}/{serial_number}/terminate Terminate gadget. unset_gadget_group POST /gadgets/{product_id}/{serial_number}/unset_group Unset Group of gadget. delete_gadget_tag \u00b6 delete_gadget_tag(product_id, serial_number, tag_name) Delete gadget Tag. Deletes a tag from the specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete gadget Tag. api_instance.delete_gadget_tag(product_id, serial_number, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->delete_gadget_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified gadget or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_termination_on_gadget \u00b6 Gadget disable_termination_on_gadget(product_id, serial_number) Disable Termination of gadget. Disables termination of specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Disable Termination of gadget. api_response = api_instance.disable_termination_on_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->disable_termination_on_gadget: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_termination_on_gadget \u00b6 Gadget enable_termination_on_gadget(product_id, serial_number) Enable Termination of gadget. Enables termination of specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Enable Termination of gadget. api_response = api_instance.enable_termination_on_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->enable_termination_on_gadget: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_gadget \u00b6 Gadget get_gadget(product_id, serial_number) Get gadget. Returns information about the specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Get gadget. api_response = api_instance.get_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->get_gadget: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_gadgets \u00b6 [Gadget] list_gadgets() List gadgets. Returns a list of gadgets that match certain criteria. If the total number of gadgets does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID for filtering the search. (optional) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of gadgets to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID ({product_id}/{serial_number}) of the last gadget retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List gadgets. api_response = api_instance.list_gadgets(product_id=product_id, tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->list_gadgets: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID for filtering the search. [optional] tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of gadgets to retrieve. [optional] last_evaluated_key str The ID ({product_id}/{serial_number}) of the last gadget retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [Gadget] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of Gadgets. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_gadget_tags \u00b6 Gadget put_gadget_tags(product_id, serial_number, tag_update_request) Bulk Insert or Update gadget Tags. Inserts/updates tags for the specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.tag_update_request import TagUpdateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update gadget Tags. api_response = api_instance.put_gadget_tags(product_id, serial_number, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->put_gadget_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_gadget \u00b6 Gadget register_gadget(product_id, serial_number, gadget_registration_request) Register a gadget. Registers a gadget Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.gadget_registration_request import GadgetRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. gadget_registration_request = GadgetRegistrationRequest( tags={ \"key\": \"key_example\", }, ) # GadgetRegistrationRequest | Gadget registration request # example passing only required values which don't have defaults set try: # Register a gadget. api_response = api_instance.register_gadget(product_id, serial_number, gadget_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->register_gadget: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. gadget_registration_request GadgetRegistrationRequest Gadget registration request Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Gadget successfully registered - 404 No such resource found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_gadget_group \u00b6 Gadget set_gadget_group(product_id, serial_number, group) Set Group of gadget. Sets or overwrites a group for the specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of gadget. api_response = api_instance.set_gadget_group(product_id, serial_number, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->set_gadget_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. group Group Group (may include ID only). Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_gadget \u00b6 Gadget terminate_gadget(product_id, serial_number) Terminate gadget. Terminates the specified gadget Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Terminate gadget. api_response = api_instance.terminate_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->terminate_gadget: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_gadget_group \u00b6 Gadget unset_gadget_group(product_id, serial_number) Unset Group of gadget. Removes the group configuration from the specified gadget. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Unset Group of gadget. api_response = api_instance.unset_gadget_group(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->unset_gadget_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. Return type \u00b6 Gadget Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist or the gadget does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.GadgetApi"},{"location":"api/docs/GadgetApi/#soracom_apigadgetapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_gadget_tag DELETE /gadgets/{product_id}/{serial_number}/tags/{tag_name} Delete gadget Tag. disable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/disable_termination Disable Termination of gadget. enable_termination_on_gadget POST /gadgets/{product_id}/{serial_number}/enable_termination Enable Termination of gadget. get_gadget GET /gadgets/{product_id}/{serial_number} Get gadget. list_gadgets GET /gadgets List gadgets. put_gadget_tags PUT /gadgets/{product_id}/{serial_number}/tags Bulk Insert or Update gadget Tags. register_gadget POST /gadgets/{product_id}/{serial_number}/register Register a gadget. set_gadget_group POST /gadgets/{product_id}/{serial_number}/set_group Set Group of gadget. terminate_gadget POST /gadgets/{product_id}/{serial_number}/terminate Terminate gadget. unset_gadget_group POST /gadgets/{product_id}/{serial_number}/unset_group Unset Group of gadget.","title":"soracom_api.GadgetApi"},{"location":"api/docs/GadgetApi/#delete_gadget_tag","text":"delete_gadget_tag(product_id, serial_number, tag_name) Delete gadget Tag. Deletes a tag from the specified gadget.","title":"delete_gadget_tag"},{"location":"api/docs/GadgetApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete gadget Tag. api_instance.delete_gadget_tag(product_id, serial_number, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->delete_gadget_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified gadget or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#disable_termination_on_gadget","text":"Gadget disable_termination_on_gadget(product_id, serial_number) Disable Termination of gadget. Disables termination of specified gadget.","title":"disable_termination_on_gadget"},{"location":"api/docs/GadgetApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Disable Termination of gadget. api_response = api_instance.disable_termination_on_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->disable_termination_on_gadget: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_1","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_1","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_1","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#enable_termination_on_gadget","text":"Gadget enable_termination_on_gadget(product_id, serial_number) Enable Termination of gadget. Enables termination of specified gadget.","title":"enable_termination_on_gadget"},{"location":"api/docs/GadgetApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Enable Termination of gadget. api_response = api_instance.enable_termination_on_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->enable_termination_on_gadget: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_2","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_2","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_2","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#get_gadget","text":"Gadget get_gadget(product_id, serial_number) Get gadget. Returns information about the specified gadget.","title":"get_gadget"},{"location":"api/docs/GadgetApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Get gadget. api_response = api_instance.get_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->get_gadget: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_3","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_3","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_3","text":"Status code Description Response headers 200 The gadget's detailed information. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#list_gadgets","text":"[Gadget] list_gadgets() List gadgets. Returns a list of gadgets that match certain criteria. If the total number of gadgets does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_gadgets"},{"location":"api/docs/GadgetApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID for filtering the search. (optional) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of gadgets to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID ({product_id}/{serial_number}) of the last gadget retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List gadgets. api_response = api_instance.list_gadgets(product_id=product_id, tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->list_gadgets: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_4","text":"Name Type Description Notes product_id str Product ID for filtering the search. [optional] tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of gadgets to retrieve. [optional] last_evaluated_key str The ID ({product_id}/{serial_number}) of the last gadget retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_4","text":"[Gadget]","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_4","text":"Status code Description Response headers 200 A list of Gadgets. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#put_gadget_tags","text":"Gadget put_gadget_tags(product_id, serial_number, tag_update_request) Bulk Insert or Update gadget Tags. Inserts/updates tags for the specified gadget.","title":"put_gadget_tags"},{"location":"api/docs/GadgetApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.tag_update_request import TagUpdateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update gadget Tags. api_response = api_instance.put_gadget_tags(product_id, serial_number, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->put_gadget_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_5","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_5","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_5","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_5","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#register_gadget","text":"Gadget register_gadget(product_id, serial_number, gadget_registration_request) Register a gadget. Registers a gadget","title":"register_gadget"},{"location":"api/docs/GadgetApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.gadget_registration_request import GadgetRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. gadget_registration_request = GadgetRegistrationRequest( tags={ \"key\": \"key_example\", }, ) # GadgetRegistrationRequest | Gadget registration request # example passing only required values which don't have defaults set try: # Register a gadget. api_response = api_instance.register_gadget(product_id, serial_number, gadget_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->register_gadget: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_6","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. gadget_registration_request GadgetRegistrationRequest Gadget registration request","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_6","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_6","text":"Status code Description Response headers 200 Gadget successfully registered - 404 No such resource found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#set_gadget_group","text":"Gadget set_gadget_group(product_id, serial_number, group) Set Group of gadget. Sets or overwrites a group for the specified gadget.","title":"set_gadget_group"},{"location":"api/docs/GadgetApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of gadget. api_response = api_instance.set_gadget_group(product_id, serial_number, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->set_gadget_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_7","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget. group Group Group (may include ID only).","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_7","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_7","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#terminate_gadget","text":"Gadget terminate_gadget(product_id, serial_number) Terminate gadget. Terminates the specified gadget","title":"terminate_gadget"},{"location":"api/docs/GadgetApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Terminate gadget. api_response = api_instance.terminate_gadget(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->terminate_gadget: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_8","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_8","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_8","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetApi/#unset_gadget_group","text":"Gadget unset_gadget_group(product_id, serial_number) Unset Group of gadget. Removes the group configuration from the specified gadget.","title":"unset_gadget_group"},{"location":"api/docs/GadgetApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import gadget_api from soracom_api.model.gadget import Gadget from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = gadget_api.GadgetApi(api_client) product_id = \"product_id_example\" # str | Product ID of the target gadget. serial_number = \"serial_number_example\" # str | Serial Number of the target gadget. # example passing only required values which don't have defaults set try: # Unset Group of gadget. api_response = api_instance.unset_gadget_group(product_id, serial_number) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GadgetApi->unset_gadget_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GadgetApi/#parameters_9","text":"Name Type Description Notes product_id str Product ID of the target gadget. serial_number str Serial Number of the target gadget.","title":"Parameters"},{"location":"api/docs/GadgetApi/#return-type_9","text":"Gadget","title":"Return type"},{"location":"api/docs/GadgetApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GadgetApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GadgetApi/#http-response-details_9","text":"Status code Description Response headers 200 The gadget's detailed information after the update. - 404 The specified gadget does not exist or the gadget does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GadgetRegistrationRequest/","text":"GadgetRegistrationRequest \u00b6 Properties \u00b6 Name Type Description Notes tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GadgetRegistrationRequest"},{"location":"api/docs/GadgetRegistrationRequest/#gadgetregistrationrequest","text":"","title":"GadgetRegistrationRequest"},{"location":"api/docs/GadgetRegistrationRequest/#properties","text":"Name Type Description Notes tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GatePeer/","text":"GatePeer \u00b6 Properties \u00b6 Name Type Description Notes inner_ip_address str [optional] outer_ip_address str [optional] owned_by_customer bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GatePeer"},{"location":"api/docs/GatePeer/#gatepeer","text":"","title":"GatePeer"},{"location":"api/docs/GatePeer/#properties","text":"Name Type Description Notes inner_ip_address str [optional] outer_ip_address str [optional] owned_by_customer bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GenerateOperatorsAuthKeyResponse/","text":"GenerateOperatorsAuthKeyResponse \u00b6 Properties \u00b6 Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GenerateOperatorsAuthKeyResponse"},{"location":"api/docs/GenerateOperatorsAuthKeyResponse/#generateoperatorsauthkeyresponse","text":"","title":"GenerateOperatorsAuthKeyResponse"},{"location":"api/docs/GenerateOperatorsAuthKeyResponse/#properties","text":"Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GenerateTokenRequest/","text":"GenerateTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes token_timeout_seconds int \u65b0\u3057\u3044 API \u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u306e\u9577\u3055\uff08\u79d2\u5358\u4f4d\uff09\u3002 \u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 86400 [\u79d2]\uff0824\u6642\u9593\uff09\u3002 \u6700\u5927\u5024\u306f 172800 [\u79d2]\uff0848\u6642\u9593\uff09\u3002 [optional] if omitted the server will use the default value of 86400 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GenerateTokenRequest"},{"location":"api/docs/GenerateTokenRequest/#generatetokenrequest","text":"","title":"GenerateTokenRequest"},{"location":"api/docs/GenerateTokenRequest/#properties","text":"Name Type Description Notes token_timeout_seconds int \u65b0\u3057\u3044 API \u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u306e\u9577\u3055\uff08\u79d2\u5358\u4f4d\uff09\u3002 \u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 86400 [\u79d2]\uff0824\u6642\u9593\uff09\u3002 \u6700\u5927\u5024\u306f 172800 [\u79d2]\uff0848\u6642\u9593\uff09\u3002 [optional] if omitted the server will use the default value of 86400 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GenerateTokenResponse/","text":"GenerateTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GenerateTokenResponse"},{"location":"api/docs/GenerateTokenResponse/#generatetokenresponse","text":"","title":"GenerateTokenResponse"},{"location":"api/docs/GenerateTokenResponse/#properties","text":"Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GenerateUserAuthKeyResponse/","text":"GenerateUserAuthKeyResponse \u00b6 Properties \u00b6 Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GenerateUserAuthKeyResponse"},{"location":"api/docs/GenerateUserAuthKeyResponse/#generateuserauthkeyresponse","text":"","title":"GenerateUserAuthKeyResponse"},{"location":"api/docs/GenerateUserAuthKeyResponse/#properties","text":"Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetBillingHistoryResponse/","text":"GetBillingHistoryResponse \u00b6 Properties \u00b6 Name Type Description Notes bill_list [MonthlyBill] \u6708\u3054\u3068\u306e\u5229\u7528\u6599\u30ea\u30b9\u30c8 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetBillingHistoryResponse"},{"location":"api/docs/GetBillingHistoryResponse/#getbillinghistoryresponse","text":"","title":"GetBillingHistoryResponse"},{"location":"api/docs/GetBillingHistoryResponse/#properties","text":"Name Type Description Notes bill_list [MonthlyBill] \u6708\u3054\u3068\u306e\u5229\u7528\u6599\u30ea\u30b9\u30c8 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetDefaultPermissionsResponse/","text":"GetDefaultPermissionsResponse \u00b6 Properties \u00b6 Name Type Description Notes default_permissions str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetDefaultPermissionsResponse"},{"location":"api/docs/GetDefaultPermissionsResponse/#getdefaultpermissionsresponse","text":"","title":"GetDefaultPermissionsResponse"},{"location":"api/docs/GetDefaultPermissionsResponse/#properties","text":"Name Type Description Notes default_permissions str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetExportedFileResponse/","text":"GetExportedFileResponse \u00b6 Properties \u00b6 Name Type Description Notes status str \u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u30b9\u30c6\u30fc\u30bf\u30b9 [optional] url str \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetExportedFileResponse"},{"location":"api/docs/GetExportedFileResponse/#getexportedfileresponse","text":"","title":"GetExportedFileResponse"},{"location":"api/docs/GetExportedFileResponse/#properties","text":"Name Type Description Notes status str \u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u30b9\u30c6\u30fc\u30bf\u30b9 [optional] url str \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9URL [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetLatestBill/","text":"GetLatestBill \u00b6 Properties \u00b6 Name Type Description Notes amount int \u91d1\u984d [optional] last_evaluated_time str \u5229\u7528\u984d\u8a08\u7b97\u3092\u5b9f\u65bd\u3057\u305f\u6642\u9593 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetLatestBill"},{"location":"api/docs/GetLatestBill/#getlatestbill","text":"","title":"GetLatestBill"},{"location":"api/docs/GetLatestBill/#properties","text":"Name Type Description Notes amount int \u91d1\u984d [optional] last_evaluated_time str \u5229\u7528\u984d\u8a08\u7b97\u3092\u5b9f\u65bd\u3057\u305f\u6642\u9593 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetOperatorResponse/","text":"GetOperatorResponse \u00b6 Properties \u00b6 Name Type Description Notes create_date str description str email str operator_id str root_operator_id str update_date str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetOperatorResponse"},{"location":"api/docs/GetOperatorResponse/#getoperatorresponse","text":"","title":"GetOperatorResponse"},{"location":"api/docs/GetOperatorResponse/#properties","text":"Name Type Description Notes create_date str description str email str operator_id str root_operator_id str update_date str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetOrderResponse/","text":"GetOrderResponse \u00b6 Properties \u00b6 Name Type Description Notes email str Email address [optional] order_date_time str Order date and time [optional] order_id str Order ID [optional] order_item_list [EstimatedOrderItemModel] Order item list [optional] order_status str Order status [optional] shipping_address ShippingAddressModel [optional] shipping_address_id str Shipping address ID [optional] shipping_cost float Shipping cost [optional] shipping_label_number str Shipping label number [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetOrderResponse"},{"location":"api/docs/GetOrderResponse/#getorderresponse","text":"","title":"GetOrderResponse"},{"location":"api/docs/GetOrderResponse/#properties","text":"Name Type Description Notes email str Email address [optional] order_date_time str Order date and time [optional] order_id str Order ID [optional] order_item_list [EstimatedOrderItemModel] Order item list [optional] order_status str Order status [optional] shipping_address ShippingAddressModel [optional] shipping_address_id str Shipping address ID [optional] shipping_cost float Shipping cost [optional] shipping_label_number str Shipping label number [optional] tax_amount float Tax amount [optional] total_amount float Total amount [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetPaymentMethodResult/","text":"GetPaymentMethodResult \u00b6 Properties \u00b6 Name Type Description Notes error_code str Error code (only if payment information is invalid) [optional] error_message str Error message (only if payment information is invalid) [optional] properties str Payment information [optional] provider_type str Provider type [optional] if omitted the server will use the default value of \"WebPay\" update_date str Update date [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetPaymentMethodResult"},{"location":"api/docs/GetPaymentMethodResult/#getpaymentmethodresult","text":"","title":"GetPaymentMethodResult"},{"location":"api/docs/GetPaymentMethodResult/#properties","text":"Name Type Description Notes error_code str Error code (only if payment information is invalid) [optional] error_message str Error message (only if payment information is invalid) [optional] properties str Payment information [optional] provider_type str Provider type [optional] if omitted the server will use the default value of \"WebPay\" update_date str Update date [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetPaymentTransactionResult/","text":"GetPaymentTransactionResult \u00b6 Properties \u00b6 Name Type Description Notes amount PaymentAmount [optional] description PaymentDescription [optional] message str Message [optional] message_code str Message code [optional] status str Status [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetPaymentTransactionResult"},{"location":"api/docs/GetPaymentTransactionResult/#getpaymenttransactionresult","text":"","title":"GetPaymentTransactionResult"},{"location":"api/docs/GetPaymentTransactionResult/#properties","text":"Name Type Description Notes amount PaymentAmount [optional] description PaymentDescription [optional] message str Message [optional] message_code str Message code [optional] status str Status [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetShippingAddressResponse/","text":"GetShippingAddressResponse \u00b6 Properties \u00b6 Name Type Description Notes address_line1 str city str phone_number str shipping_address_id str \u914d\u9001\u5148ID shipping_area str \u914d\u9001\u5148\u30a8\u30ea\u30a2 state str zip_code str address_line2 str [optional] building str [optional] company_name str [optional] department str [optional] full_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetShippingAddressResponse"},{"location":"api/docs/GetShippingAddressResponse/#getshippingaddressresponse","text":"","title":"GetShippingAddressResponse"},{"location":"api/docs/GetShippingAddressResponse/#properties","text":"Name Type Description Notes address_line1 str city str phone_number str shipping_address_id str \u914d\u9001\u5148ID shipping_area str \u914d\u9001\u5148\u30a8\u30ea\u30a2 state str zip_code str address_line2 str [optional] building str [optional] company_name str [optional] department str [optional] full_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetUserPasswordResponse/","text":"GetUserPasswordResponse \u00b6 Properties \u00b6 Name Type Description Notes has_password bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetUserPasswordResponse"},{"location":"api/docs/GetUserPasswordResponse/#getuserpasswordresponse","text":"","title":"GetUserPasswordResponse"},{"location":"api/docs/GetUserPasswordResponse/#properties","text":"Name Type Description Notes has_password bool [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetUserPermissionResponse/","text":"GetUserPermissionResponse \u00b6 Properties \u00b6 Name Type Description Notes permission str JSON string of permissions any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetUserPermissionResponse"},{"location":"api/docs/GetUserPermissionResponse/#getuserpermissionresponse","text":"","title":"GetUserPermissionResponse"},{"location":"api/docs/GetUserPermissionResponse/#properties","text":"Name Type Description Notes permission str JSON string of permissions any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GetVolumeDiscountResponse/","text":"GetVolumeDiscountResponse \u00b6 Properties \u00b6 Name Type Description Notes contract_date_time str Contract date time [optional] contract_id str Contract ID [optional] contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 end_date str End date [optional] initial_cost float Initial cost [optional] quantity int Quantity [optional] start_date str Start date [optional] status str Status [optional] unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GetVolumeDiscountResponse"},{"location":"api/docs/GetVolumeDiscountResponse/#getvolumediscountresponse","text":"","title":"GetVolumeDiscountResponse"},{"location":"api/docs/GetVolumeDiscountResponse/#properties","text":"Name Type Description Notes contract_date_time str Contract date time [optional] contract_id str Contract ID [optional] contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 end_date str End date [optional] initial_cost float Initial cost [optional] quantity int Quantity [optional] start_date str Start date [optional] status str Status [optional] unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GlobalSimAppletPLMNRecord/","text":"GlobalSimAppletPLMNRecord \u00b6 Properties \u00b6 Name Type Description Notes container_id int mcc str mnc str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GlobalSimAppletPLMNRecord"},{"location":"api/docs/GlobalSimAppletPLMNRecord/#globalsimappletplmnrecord","text":"","title":"GlobalSimAppletPLMNRecord"},{"location":"api/docs/GlobalSimAppletPLMNRecord/#properties","text":"Name Type Description Notes container_id int mcc str mnc str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Group/","text":"Group \u00b6 Properties \u00b6 Name Type Description Notes configuration {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] created_time int [optional] group_id str, none_type [optional] last_modified_time int [optional] operator_id str [optional] tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Group"},{"location":"api/docs/Group/#group","text":"","title":"Group"},{"location":"api/docs/Group/#properties","text":"Name Type Description Notes configuration {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] created_time int [optional] group_id str, none_type [optional] last_modified_time int [optional] operator_id str [optional] tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/GroupApi/","text":"soracom_api.GroupApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_group POST /groups Create Group. delete_configuration_namespace DELETE /groups/{group_id}/configuration/{namespace} Delete Group Configuration Namespace. delete_configuration_parameter DELETE /groups/{group_id}/configuration/{namespace}/{name} Delete Group Configuration Parameters. delete_group DELETE /groups/{group_id} Delete Group. delete_group_tag DELETE /groups/{group_id}/tags/{tag_name} Delete Group Tag. get_group GET /groups/{group_id} Get Group. list_groups GET /groups List Groups. list_subscribers_in_group GET /groups/{group_id}/subscribers List Subscribers in a group. put_configuration_parameters PUT /groups/{group_id}/configuration/{namespace} Update Group Configuration Parameters. put_group_tags PUT /groups/{group_id}/tags Update Group Tags. create_group \u00b6 Group create_group(create_group_request) Create Group. Create a new group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from soracom_api.model.create_group_request import CreateGroupRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) create_group_request = CreateGroupRequest( tags=TagSet( key=\"key_example\", ), ) # CreateGroupRequest | Tags for group to be created. # example passing only required values which don't have defaults set try: # Create Group. api_response = api_instance.create_group(create_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->create_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_group_request CreateGroupRequest Tags for group to be created. Return type \u00b6 Group Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_configuration_namespace \u00b6 delete_configuration_namespace(group_id, namespace) Delete Group Configuration Namespace. Delete a namespace for the specified group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Namespace to be deleted. # example passing only required values which don't have defaults set try: # Delete Group Configuration Namespace. api_instance.delete_configuration_namespace(group_id, namespace) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_configuration_namespace: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group. namespace str Namespace to be deleted. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The namespace was successfully deleted. - 400 The specified namespace does not exist. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_configuration_parameter \u00b6 delete_configuration_parameter(group_id, namespace, name) Delete Group Configuration Parameters. Delete parameters for the specified group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Namespace of target parameters. name = \"name_example\" # str | Parameter name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Group Configuration Parameters. api_instance.delete_configuration_parameter(group_id, namespace, name) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_configuration_parameter: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group. namespace str Namespace of target parameters. name str Parameter name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The parameter was successfully deleted. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_group \u00b6 delete_group(group_id) Delete Group. Deletes the specified group by group ID Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. # example passing only required values which don't have defaults set try: # Delete Group. api_instance.delete_group(group_id) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group ID. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified group complete. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_group_tag \u00b6 delete_group_tag(group_id, tag_name) Delete Group Tag. Deletes tag from the specified group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Group Tag. api_instance.delete_group_tag(group_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_group_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group ID. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Tag deletion complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_group \u00b6 Group get_group(group_id) Get Group. Returns the group specified by the group ID. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. # example passing only required values which don't have defaults set try: # Get Group. api_response = api_instance.get_group(group_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->get_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group ID. Return type \u00b6 Group Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The specified group. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_groups \u00b6 [Group] list_groups() List Groups. Returns a list of groups. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) tag_name = \"tag_name_example\" # str | Tag name of the group. Filters through all groups that exactly match the tag name. When tag_name is specified, tag_value is required. (optional) tag_value = \"tag_value_example\" # str | Tag value of the groups. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last Group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Groups. api_response = api_instance.list_groups(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_groups: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name of the group. Filters through all groups that exactly match the tag name. When tag_name is specified, tag_value is required. [optional] tag_value str Tag value of the groups. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of results per response page. [optional] last_evaluated_key str The last Group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. [optional] Return type \u00b6 [Group] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of groups. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_subscribers_in_group \u00b6 Group list_subscribers_in_group(group_id) List Subscribers in a group. Returns a list of subscribers that belong to the specified group by group ID. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) # example passing only required values which don't have defaults set try: # List Subscribers in a group. api_response = api_instance.list_subscribers_in_group(group_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_subscribers_in_group: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Subscribers in a group. api_response = api_instance.list_subscribers_in_group(group_id, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_subscribers_in_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group ID. limit int Maximum number of results per response page. [optional] last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional] Return type \u00b6 Group Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Target group ID - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_configuration_parameters \u00b6 Group put_configuration_parameters(group_id, namespace, group_configuration_update_request) Update Group Configuration Parameters. Adds/updates parameters for the specified group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group_configuration_update_request import GroupConfigurationUpdateRequest from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Target configuration. group_configuration_update_request = [ GroupConfigurationUpdateRequest( key=\"key_example\", value=\"value_example\", ), ] # [GroupConfigurationUpdateRequest] | Array of values for target object to be updated. # example passing only required values which don't have defaults set try: # Update Group Configuration Parameters. api_response = api_instance.put_configuration_parameters(group_id, namespace, group_configuration_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->put_configuration_parameters: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group. namespace str Target configuration. group_configuration_update_request [GroupConfigurationUpdateRequest] Array of values for target object to be updated. Return type \u00b6 Group Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The group after the update. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_group_tags \u00b6 Subscriber put_group_tags(group_id, tag_update_request) Update Group Tags. Adds/updates tags of specified configuration group. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of values for tags to be updated. # example passing only required values which don't have defaults set try: # Update Group Tags. api_response = api_instance.put_group_tags(group_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->put_group_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes group_id str Target group ID. tag_update_request [TagUpdateRequest] Array of values for tags to be updated. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.GroupApi"},{"location":"api/docs/GroupApi/#soracom_apigroupapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_group POST /groups Create Group. delete_configuration_namespace DELETE /groups/{group_id}/configuration/{namespace} Delete Group Configuration Namespace. delete_configuration_parameter DELETE /groups/{group_id}/configuration/{namespace}/{name} Delete Group Configuration Parameters. delete_group DELETE /groups/{group_id} Delete Group. delete_group_tag DELETE /groups/{group_id}/tags/{tag_name} Delete Group Tag. get_group GET /groups/{group_id} Get Group. list_groups GET /groups List Groups. list_subscribers_in_group GET /groups/{group_id}/subscribers List Subscribers in a group. put_configuration_parameters PUT /groups/{group_id}/configuration/{namespace} Update Group Configuration Parameters. put_group_tags PUT /groups/{group_id}/tags Update Group Tags.","title":"soracom_api.GroupApi"},{"location":"api/docs/GroupApi/#create_group","text":"Group create_group(create_group_request) Create Group. Create a new group.","title":"create_group"},{"location":"api/docs/GroupApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from soracom_api.model.create_group_request import CreateGroupRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) create_group_request = CreateGroupRequest( tags=TagSet( key=\"key_example\", ), ) # CreateGroupRequest | Tags for group to be created. # example passing only required values which don't have defaults set try: # Create Group. api_response = api_instance.create_group(create_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->create_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters","text":"Name Type Description Notes create_group_request CreateGroupRequest Tags for group to be created.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type","text":"Group","title":"Return type"},{"location":"api/docs/GroupApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#delete_configuration_namespace","text":"delete_configuration_namespace(group_id, namespace) Delete Group Configuration Namespace. Delete a namespace for the specified group.","title":"delete_configuration_namespace"},{"location":"api/docs/GroupApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Namespace to be deleted. # example passing only required values which don't have defaults set try: # Delete Group Configuration Namespace. api_instance.delete_configuration_namespace(group_id, namespace) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_configuration_namespace: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_1","text":"Name Type Description Notes group_id str Target group. namespace str Namespace to be deleted.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_1","text":"Status code Description Response headers 204 The namespace was successfully deleted. - 400 The specified namespace does not exist. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#delete_configuration_parameter","text":"delete_configuration_parameter(group_id, namespace, name) Delete Group Configuration Parameters. Delete parameters for the specified group.","title":"delete_configuration_parameter"},{"location":"api/docs/GroupApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Namespace of target parameters. name = \"name_example\" # str | Parameter name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Group Configuration Parameters. api_instance.delete_configuration_parameter(group_id, namespace, name) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_configuration_parameter: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_2","text":"Name Type Description Notes group_id str Target group. namespace str Namespace of target parameters. name str Parameter name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_2","text":"Status code Description Response headers 204 The parameter was successfully deleted. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#delete_group","text":"delete_group(group_id) Delete Group. Deletes the specified group by group ID","title":"delete_group"},{"location":"api/docs/GroupApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. # example passing only required values which don't have defaults set try: # Delete Group. api_instance.delete_group(group_id) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_3","text":"Name Type Description Notes group_id str Target group ID.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_3","text":"Status code Description Response headers 204 Deletion of specified group complete. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#delete_group_tag","text":"delete_group_tag(group_id, tag_name) Delete Group Tag. Deletes tag from the specified group.","title":"delete_group_tag"},{"location":"api/docs/GroupApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Group Tag. api_instance.delete_group_tag(group_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->delete_group_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_4","text":"Name Type Description Notes group_id str Target group ID. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_4","text":"Status code Description Response headers 204 Tag deletion complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#get_group","text":"Group get_group(group_id) Get Group. Returns the group specified by the group ID.","title":"get_group"},{"location":"api/docs/GroupApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. # example passing only required values which don't have defaults set try: # Get Group. api_response = api_instance.get_group(group_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->get_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_5","text":"Name Type Description Notes group_id str Target group ID.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_5","text":"Group","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_5","text":"Status code Description Response headers 200 The specified group. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#list_groups","text":"[Group] list_groups() List Groups. Returns a list of groups.","title":"list_groups"},{"location":"api/docs/GroupApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) tag_name = \"tag_name_example\" # str | Tag name of the group. Filters through all groups that exactly match the tag name. When tag_name is specified, tag_value is required. (optional) tag_value = \"tag_value_example\" # str | Tag value of the groups. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last Group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Groups. api_response = api_instance.list_groups(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_groups: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_6","text":"Name Type Description Notes tag_name str Tag name of the group. Filters through all groups that exactly match the tag name. When tag_name is specified, tag_value is required. [optional] tag_value str Tag value of the groups. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of results per response page. [optional] last_evaluated_key str The last Group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. [optional]","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_6","text":"[Group]","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_6","text":"Status code Description Response headers 200 A list of groups. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#list_subscribers_in_group","text":"Group list_subscribers_in_group(group_id) List Subscribers in a group. Returns a list of subscribers that belong to the specified group by group ID.","title":"list_subscribers_in_group"},{"location":"api/docs/GroupApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) # example passing only required values which don't have defaults set try: # List Subscribers in a group. api_response = api_instance.list_subscribers_in_group(group_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_subscribers_in_group: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Subscribers in a group. api_response = api_instance.list_subscribers_in_group(group_id, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->list_subscribers_in_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_7","text":"Name Type Description Notes group_id str Target group ID. limit int Maximum number of results per response page. [optional] last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional]","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_7","text":"Group","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_7","text":"Status code Description Response headers 200 Target group ID - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#put_configuration_parameters","text":"Group put_configuration_parameters(group_id, namespace, group_configuration_update_request) Update Group Configuration Parameters. Adds/updates parameters for the specified group.","title":"put_configuration_parameters"},{"location":"api/docs/GroupApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.group_configuration_update_request import GroupConfigurationUpdateRequest from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group. namespace = \"SoracomAir\" # str | Target configuration. group_configuration_update_request = [ GroupConfigurationUpdateRequest( key=\"key_example\", value=\"value_example\", ), ] # [GroupConfigurationUpdateRequest] | Array of values for target object to be updated. # example passing only required values which don't have defaults set try: # Update Group Configuration Parameters. api_response = api_instance.put_configuration_parameters(group_id, namespace, group_configuration_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->put_configuration_parameters: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_8","text":"Name Type Description Notes group_id str Target group. namespace str Target configuration. group_configuration_update_request [GroupConfigurationUpdateRequest] Array of values for target object to be updated.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_8","text":"Group","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_8","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_8","text":"Status code Description Response headers 200 The group after the update. - 404 The specified group does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupApi/#put_group_tags","text":"Subscriber put_group_tags(group_id, tag_update_request) Update Group Tags. Adds/updates tags of specified configuration group.","title":"put_group_tags"},{"location":"api/docs/GroupApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import group_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = group_api.GroupApi(api_client) group_id = \"group_id_example\" # str | Target group ID. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of values for tags to be updated. # example passing only required values which don't have defaults set try: # Update Group Tags. api_response = api_instance.put_group_tags(group_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling GroupApi->put_group_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/GroupApi/#parameters_9","text":"Name Type Description Notes group_id str Target group ID. tag_update_request [TagUpdateRequest] Array of values for tags to be updated.","title":"Parameters"},{"location":"api/docs/GroupApi/#return-type_9","text":"Subscriber","title":"Return type"},{"location":"api/docs/GroupApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/GroupApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/GroupApi/#http-response-details_9","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/GroupConfigurationUpdateRequest/","text":"GroupConfigurationUpdateRequest \u00b6 Properties \u00b6 Name Type Description Notes key str value str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"GroupConfigurationUpdateRequest"},{"location":"api/docs/GroupConfigurationUpdateRequest/#groupconfigurationupdaterequest","text":"","title":"GroupConfigurationUpdateRequest"},{"location":"api/docs/GroupConfigurationUpdateRequest/#properties","text":"Name Type Description Notes key str value str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/HarvestExportedDataStatsResponse/","text":"HarvestExportedDataStatsResponse \u00b6 Properties \u00b6 Name Type Description Notes exported_bytes int exportedBytes [optional] year_month str yearMonth [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"HarvestExportedDataStatsResponse"},{"location":"api/docs/HarvestExportedDataStatsResponse/#harvestexporteddatastatsresponse","text":"","title":"HarvestExportedDataStatsResponse"},{"location":"api/docs/HarvestExportedDataStatsResponse/#properties","text":"Name Type Description Notes exported_bytes int exportedBytes [optional] year_month str yearMonth [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ImeiLock/","text":"ImeiLock \u00b6 Properties \u00b6 Name Type Description Notes imei str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ImeiLock"},{"location":"api/docs/ImeiLock/#imeilock","text":"","title":"ImeiLock"},{"location":"api/docs/ImeiLock/#properties","text":"Name Type Description Notes imei str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IndividualInformationModel/","text":"IndividualInformationModel \u00b6 Properties \u00b6 Name Type Description Notes country_code str full_name str phone_number str zip_code str address_line1 str [optional] address_line2 str [optional] building str [optional] city str [optional] state str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IndividualInformationModel"},{"location":"api/docs/IndividualInformationModel/#individualinformationmodel","text":"","title":"IndividualInformationModel"},{"location":"api/docs/IndividualInformationModel/#properties","text":"Name Type Description Notes country_code str full_name str phone_number str zip_code str address_line1 str [optional] address_line2 str [optional] building str [optional] city str [optional] state str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/InlineObject/","text":"InlineObject \u00b6 Properties \u00b6 Name Type Description Notes value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject"},{"location":"api/docs/InlineObject/#inlineobject","text":"","title":"InlineObject"},{"location":"api/docs/InlineObject/#properties","text":"Name Type Description Notes value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/InlineObject1/","text":"InlineObject1 \u00b6 Properties \u00b6 Name Type Description Notes value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject1"},{"location":"api/docs/InlineObject1/#inlineobject1","text":"","title":"InlineObject1"},{"location":"api/docs/InlineObject1/#properties","text":"Name Type Description Notes value str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/InlineObject2/","text":"InlineObject2 \u00b6 Properties \u00b6 Name Type Description Notes group_id str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject2"},{"location":"api/docs/InlineObject2/#inlineobject2","text":"","title":"InlineObject2"},{"location":"api/docs/InlineObject2/#properties","text":"Name Type Description Notes group_id str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/InlineObject3/","text":"InlineObject3 \u00b6 Properties \u00b6 Name Type Description Notes subscription str, none_type Name of the subscription plan enable bool A flag to indicate if it should cause a switch to the subscription after the download has finished. If it is set to true, the downloaded subscriber will be enabled immediately. [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"InlineObject3"},{"location":"api/docs/InlineObject3/#inlineobject3","text":"","title":"InlineObject3"},{"location":"api/docs/InlineObject3/#properties","text":"Name Type Description Notes subscription str, none_type Name of the subscription plan enable bool A flag to indicate if it should cause a switch to the subscription after the download has finished. If it is set to true, the downloaded subscriber will be enabled immediately. [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Insight/","text":"Insight \u00b6 Properties \u00b6 Name Type Description Notes anomaly_detected_times [str] Times that possible anomaly behaviors were detected. The format depends on the timestamp of events relating to the category. (e.g. unixtime milliseconds for session category) [optional] category str [optional] insight_id str [optional] message str [optional] reference_urls [{str: (ReferenceUrl,)}] Reference URLs that is related to the insight [optional] severity str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Insight"},{"location":"api/docs/Insight/#insight","text":"","title":"Insight"},{"location":"api/docs/Insight/#properties","text":"Name Type Description Notes anomaly_detected_times [str] Times that possible anomaly behaviors were detected. The format depends on the timestamp of events relating to the category. (e.g. unixtime milliseconds for session category) [optional] category str [optional] insight_id str [optional] message str [optional] reference_urls [{str: (ReferenceUrl,)}] Reference URLs that is related to the insight [optional] severity str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IpAddressMapEntry/","text":"IpAddressMapEntry \u00b6 Properties \u00b6 Name Type Description Notes ip_address str [optional] key str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IpAddressMapEntry"},{"location":"api/docs/IpAddressMapEntry/#ipaddressmapentry","text":"","title":"IpAddressMapEntry"},{"location":"api/docs/IpAddressMapEntry/#properties","text":"Name Type Description Notes ip_address str [optional] key str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IssueAddEmailTokenRequest/","text":"IssueAddEmailTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes email str Email address to be added password str Password of the operator any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IssueAddEmailTokenRequest"},{"location":"api/docs/IssueAddEmailTokenRequest/#issueaddemailtokenrequest","text":"","title":"IssueAddEmailTokenRequest"},{"location":"api/docs/IssueAddEmailTokenRequest/#properties","text":"Name Type Description Notes email str Email address to be added password str Password of the operator any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IssuePasswordResetTokenRequest/","text":"IssuePasswordResetTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes email str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IssuePasswordResetTokenRequest"},{"location":"api/docs/IssuePasswordResetTokenRequest/#issuepasswordresettokenrequest","text":"","title":"IssuePasswordResetTokenRequest"},{"location":"api/docs/IssuePasswordResetTokenRequest/#properties","text":"Name Type Description Notes email str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IssueSubscriberTransferTokenRequest/","text":"IssueSubscriberTransferTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes transfer_destination_operator_email str \u79fb\u7ba1\u5148\u30aa\u30da\u30ec\u30fc\u30bf\u30fcEmail transfer_destination_operator_id str \u79fb\u7ba1\u5148\u30aa\u30da\u30ec\u30fc\u30bf\u30fcID transfer_imsi [str] \u79fb\u7ba1\u3059\u308bIMSI\u30ea\u30b9\u30c8 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IssueSubscriberTransferTokenRequest"},{"location":"api/docs/IssueSubscriberTransferTokenRequest/#issuesubscribertransfertokenrequest","text":"","title":"IssueSubscriberTransferTokenRequest"},{"location":"api/docs/IssueSubscriberTransferTokenRequest/#properties","text":"Name Type Description Notes transfer_destination_operator_email str \u79fb\u7ba1\u5148\u30aa\u30da\u30ec\u30fc\u30bf\u30fcEmail transfer_destination_operator_id str \u79fb\u7ba1\u5148\u30aa\u30da\u30ec\u30fc\u30bf\u30fcID transfer_imsi [str] \u79fb\u7ba1\u3059\u308bIMSI\u30ea\u30b9\u30c8 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/IssueSubscriberTransferTokenResponse/","text":"IssueSubscriberTransferTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str \u30c8\u30fc\u30af\u30f3 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"IssueSubscriberTransferTokenResponse"},{"location":"api/docs/IssueSubscriberTransferTokenResponse/#issuesubscribertransfertokenresponse","text":"","title":"IssueSubscriberTransferTokenResponse"},{"location":"api/docs/IssueSubscriberTransferTokenResponse/#properties","text":"Name Type Description Notes token str \u30c8\u30fc\u30af\u30f3 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/JunctionInspectionConfiguration/","text":"JunctionInspectionConfiguration \u00b6 Properties \u00b6 Name Type Description Notes enabled bool [optional] if omitted the server will use the default value of False report FunnelConfiguration [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"JunctionInspectionConfiguration"},{"location":"api/docs/JunctionInspectionConfiguration/#junctioninspectionconfiguration","text":"","title":"JunctionInspectionConfiguration"},{"location":"api/docs/JunctionInspectionConfiguration/#properties","text":"Name Type Description Notes enabled bool [optional] if omitted the server will use the default value of False report FunnelConfiguration [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/JunctionMirroringConfiguration/","text":"JunctionMirroringConfiguration \u00b6 Properties \u00b6 Name Type Description Notes peers {str: (JunctionMirroringPeer,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"JunctionMirroringConfiguration"},{"location":"api/docs/JunctionMirroringConfiguration/#junctionmirroringconfiguration","text":"","title":"JunctionMirroringConfiguration"},{"location":"api/docs/JunctionMirroringConfiguration/#properties","text":"Name Type Description Notes peers {str: (JunctionMirroringPeer,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/JunctionMirroringPeer/","text":"JunctionMirroringPeer \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] enabled bool [optional] if omitted the server will use the default value of False ip_address str [optional] protocol str [optional] if omitted the server will use the default value of \"gre\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"JunctionMirroringPeer"},{"location":"api/docs/JunctionMirroringPeer/#junctionmirroringpeer","text":"","title":"JunctionMirroringPeer"},{"location":"api/docs/JunctionMirroringPeer/#properties","text":"Name Type Description Notes description str [optional] enabled bool [optional] if omitted the server will use the default value of False ip_address str [optional] protocol str [optional] if omitted the server will use the default value of \"gre\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/JunctionRedirectionConfiguration/","text":"JunctionRedirectionConfiguration \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] enabled bool [optional] if omitted the server will use the default value of False gateway str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"JunctionRedirectionConfiguration"},{"location":"api/docs/JunctionRedirectionConfiguration/#junctionredirectionconfiguration","text":"","title":"JunctionRedirectionConfiguration"},{"location":"api/docs/JunctionRedirectionConfiguration/#properties","text":"Name Type Description Notes description str [optional] enabled bool [optional] if omitted the server will use the default value of False gateway str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonApi/","text":"soracom_api.LagoonApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_lagoon_user POST /lagoon/users Create a SORACOM Lagoon user delete_lagoon_user DELETE /lagoon/users/{lagoon_user_id} Delete a SORACOM Lagoon user get_image_link GET /lagoon/image/link Get a custom icon image link of SORACOM Lagoon get_lagoon_migration_info GET /lagoon/migration Get the version migration information for SORACOM Lagoon initialize_lagoon_dashboard_permissions POST /lagoon/dashboards/{dashboard_id}/permissions/init Update permissions to the initial state for a dashboard of SORACOM Lagoon list_lagoon_dashboards_permissions GET /lagoon/dashboards/permissions List permissions for all SORACOM Lagoon dashboards list_lagoon_license_pack_status GET /lagoon/license_packs Get the status of active SORACOM Lagoon license packs list_lagoon_users GET /lagoon/users List SORACOM Lagoon users that belong to operator migrate_lagoon POST /lagoon/migration Migrate SORACOM Lagoon version register_lagoon POST /lagoon/register Register (activate) SORACOM Lagoon terminate_lagoon POST /lagoon/terminate Terminate (deactivate) SORACOM Lagoon update_lagoon_dashboard_permissions PUT /lagoon/dashboards/{dashboard_id}/permissions Update permissions for a dashboard of SORACOM Lagoon update_lagoon_license_pack PUT /lagoon/license_packs Update the quantities for license packs of SORACOM Lagoon update_lagoon_plan PUT /lagoon/plan Update the plan of SORACOM Lagoon update_lagoon_user_email PUT /lagoon/users/{lagoon_user_id}/email Update email address of a SORACOM Lagoon user update_lagoon_user_password PUT /lagoon/users/{lagoon_user_id}/password Update password of a SORACOM Lagoon user update_lagoon_user_permission PUT /lagoon/users/{lagoon_user_id}/permission Update permission of a SORACOM Lagoon user create_lagoon_user \u00b6 LagoonUserCreationResponse create_lagoon_user(lagoon_user_creation_request) Create a SORACOM Lagoon user Create a SORACOM Lagoon user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_creation_response import LagoonUserCreationResponse from soracom_api.model.lagoon_user_creation_request import LagoonUserCreationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_creation_request = LagoonUserCreationRequest( role=\"Viewer\", user_email=\"user_email_example\", user_password=\"user_password_example\", ) # LagoonUserCreationRequest | request # example passing only required values which don't have defaults set try: # Create a SORACOM Lagoon user api_response = api_instance.create_lagoon_user(lagoon_user_creation_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->create_lagoon_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_user_creation_request LagoonUserCreationRequest request Return type \u00b6 LagoonUserCreationResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Created - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_lagoon_user \u00b6 delete_lagoon_user(lagoon_user_id) Delete a SORACOM Lagoon user Delete a SORACOM Lagoon user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user # example passing only required values which don't have defaults set try: # Delete a SORACOM Lagoon user api_instance.delete_lagoon_user(lagoon_user_id) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->delete_lagoon_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_user_id int Target ID of the lagoon user Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deleted - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_image_link \u00b6 str get_image_link() Get a custom icon image link of SORACOM Lagoon Get a custom icon image link of SORACOM Lagoon Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get a custom icon image link of SORACOM Lagoon api_response = api_instance.get_image_link(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->get_image_link: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional] Return type \u00b6 str Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_lagoon_migration_info \u00b6 get_lagoon_migration_info(lagoon_plan_changing_request) Get the version migration information for SORACOM Lagoon Get the version migration information for SORACOM Lagoon. Only the root account can operate this. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_plan_changing_request import LagoonPlanChangingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_plan_changing_request = LagoonPlanChangingRequest( plan=\"maker\", ) # LagoonPlanChangingRequest | req # example passing only required values which don't have defaults set try: # Get the version migration information for SORACOM Lagoon api_instance.get_lagoon_migration_info(lagoon_plan_changing_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->get_lagoon_migration_info: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_plan_changing_request LagoonPlanChangingRequest req Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] initialize_lagoon_dashboard_permissions \u00b6 initialize_lagoon_dashboard_permissions(dashboard_id) Update permissions to the initial state for a dashboard of SORACOM Lagoon Update permissions to the initial state for a dashboard of SORACOM Lagoon Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) dashboard_id = 1 # int | dashboard_id classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set try: # Update permissions to the initial state for a dashboard of SORACOM Lagoon api_instance.initialize_lagoon_dashboard_permissions(dashboard_id) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->initialize_lagoon_dashboard_permissions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Update permissions to the initial state for a dashboard of SORACOM Lagoon api_instance.initialize_lagoon_dashboard_permissions(dashboard_id, classic=classic) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->initialize_lagoon_dashboard_permissions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes dashboard_id int dashboard_id classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional] Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Updated - 400 Bad request - 403 Unauthorized operation - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lagoon_dashboards_permissions \u00b6 [LagoonDashboardPermissionsResponse] list_lagoon_dashboards_permissions() List permissions for all SORACOM Lagoon dashboards List permissions for all SORACOM Lagoon dashboards Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_dashboard_permissions_response import LagoonDashboardPermissionsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # List permissions for all SORACOM Lagoon dashboards api_response = api_instance.list_lagoon_dashboards_permissions(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_dashboards_permissions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional] Return type \u00b6 [LagoonDashboardPermissionsResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lagoon_license_pack_status \u00b6 [LagoonLicensePackStatusResponse] list_lagoon_license_pack_status() Get the status of active SORACOM Lagoon license packs Get the status of active SORACOM Lagoon license packs Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_license_pack_status_response import LagoonLicensePackStatusResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) # example, this endpoint has no required or optional parameters try: # Get the status of active SORACOM Lagoon license packs api_response = api_instance.list_lagoon_license_pack_status() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_license_pack_status: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 [LagoonLicensePackStatusResponse] Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lagoon_users \u00b6 [LagoonUser] list_lagoon_users() List SORACOM Lagoon users that belong to operator List SORACOM Lagoon users that belong to operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user import LagoonUser from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # List SORACOM Lagoon users that belong to operator api_response = api_instance.list_lagoon_users(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_users: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional] Return type \u00b6 [LagoonUser] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] migrate_lagoon \u00b6 migrate_lagoon(lagoon_migration_from_classic_request) Migrate SORACOM Lagoon version Migrate SORACOM Lagoon version. Only the root account can operate this. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_migration_from_classic_request import LagoonMigrationFromClassicRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_migration_from_classic_request = LagoonMigrationFromClassicRequest( dashboard_ids=[ \"dashboard_ids_example\", ], ) # LagoonMigrationFromClassicRequest | req # example passing only required values which don't have defaults set try: # Migrate SORACOM Lagoon version api_instance.migrate_lagoon(lagoon_migration_from_classic_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->migrate_lagoon: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_migration_from_classic_request LagoonMigrationFromClassicRequest req Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_lagoon \u00b6 LagoonRegistrationResponse register_lagoon(lagoon_registration_request) Register (activate) SORACOM Lagoon Register (activate) SORACOM Lagoon. This API is only allowed to operate by root account. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_registration_response import LagoonRegistrationResponse from soracom_api.model.lagoon_registration_request import LagoonRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_registration_request = LagoonRegistrationRequest( plan=\"free\", user_password=\"user_password_example\", ) # LagoonRegistrationRequest | request # example passing only required values which don't have defaults set try: # Register (activate) SORACOM Lagoon api_response = api_instance.register_lagoon(lagoon_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->register_lagoon: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_registration_request LagoonRegistrationRequest request Return type \u00b6 LagoonRegistrationResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Registered - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_lagoon \u00b6 terminate_lagoon() Terminate (deactivate) SORACOM Lagoon Terminate (deactivate) SORACOM Lagoon. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) # example, this endpoint has no required or optional parameters try: # Terminate (deactivate) SORACOM Lagoon api_instance.terminate_lagoon() except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->terminate_lagoon: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Terminated - 400 Bad request - 404 Operator not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_dashboard_permissions \u00b6 update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request) Update permissions for a dashboard of SORACOM Lagoon Update permissions for a dashboard of SORACOM Lagoon Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_dashboard_permissions_updating_request import LagoonDashboardPermissionsUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) dashboard_id = 1 # int | dashboard_id lagoon_dashboard_permissions_updating_request = LagoonDashboardPermissionsUpdatingRequest( permissions=[ LagoonDashboardPermissionsUpdatingRequestPermissions( permission=\"permission_example\", user_id=1, ), ], ) # LagoonDashboardPermissionsUpdatingRequest | req classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set try: # Update permissions for a dashboard of SORACOM Lagoon api_instance.update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_dashboard_permissions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Update permissions for a dashboard of SORACOM Lagoon api_instance.update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request, classic=classic) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_dashboard_permissions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes dashboard_id int dashboard_id lagoon_dashboard_permissions_updating_request LagoonDashboardPermissionsUpdatingRequest req classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional] Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Updated - 400 Bad request - 403 Unauthorized operation - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_license_pack \u00b6 update_lagoon_license_pack(lagoon_license_packs_updating_request) Update the quantities for license packs of SORACOM Lagoon Update the quantities for license packs of SORACOM Lagoon. This API is only allowed to operate by root account. Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_license_packs_updating_request import LagoonLicensePacksUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_license_packs_updating_request = LagoonLicensePacksUpdatingRequest( license_pack_quantities=[ LagoonLicensePacksUpdatingRequestLicensePackQuantities( desired_quantity=1, license_pack_name=\"license_pack_name_example\", ), ], ) # LagoonLicensePacksUpdatingRequest | req # example passing only required values which don't have defaults set try: # Update the quantities for license packs of SORACOM Lagoon api_instance.update_lagoon_license_pack(lagoon_license_packs_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_license_pack: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_license_packs_updating_request LagoonLicensePacksUpdatingRequest req Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Updated - 400 Bad request - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_plan \u00b6 update_lagoon_plan(lagoon_plan_changing_request) Update the plan of SORACOM Lagoon Update the plan of SORACOM Lagoon. This API is only allowed to operate by root account. Example \u00b6 import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_plan_changing_request import LagoonPlanChangingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_plan_changing_request = LagoonPlanChangingRequest( plan=\"maker\", ) # LagoonPlanChangingRequest | req # example passing only required values which don't have defaults set try: # Update the plan of SORACOM Lagoon api_instance.update_lagoon_plan(lagoon_plan_changing_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_plan: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_plan_changing_request LagoonPlanChangingRequest req Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Updated - 400 Bad request - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_user_email \u00b6 update_lagoon_user_email(lagoon_user_id, lagoon_user_email_updating_request) Update email address of a SORACOM Lagoon user Update email address of a SORACOM Lagoon user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_email_updating_request import LagoonUserEmailUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_email_updating_request = LagoonUserEmailUpdatingRequest( user_email=\"user_email_example\", ) # LagoonUserEmailUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update email address of a SORACOM Lagoon user api_instance.update_lagoon_user_email(lagoon_user_id, lagoon_user_email_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_email: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_email_updating_request LagoonUserEmailUpdatingRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_user_password \u00b6 update_lagoon_user_password(lagoon_user_id, lagoon_user_password_updating_request) Update password of a SORACOM Lagoon user Update password of a SORACOM Lagoon user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_password_updating_request import LagoonUserPasswordUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_password_updating_request = LagoonUserPasswordUpdatingRequest( new_password=\"new_password_example\", old_password=\"old_password_example\", ) # LagoonUserPasswordUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update password of a SORACOM Lagoon user api_instance.update_lagoon_user_password(lagoon_user_id, lagoon_user_password_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_password_updating_request LagoonUserPasswordUpdatingRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_lagoon_user_permission \u00b6 update_lagoon_user_permission(lagoon_user_id, lagoon_user_permission_updating_request) Update permission of a SORACOM Lagoon user Update permission of a SORACOM Lagoon user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_permission_updating_request import LagoonUserPermissionUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_permission_updating_request = LagoonUserPermissionUpdatingRequest( role=\"Viewer\", ) # LagoonUserPermissionUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update permission of a SORACOM Lagoon user api_instance.update_lagoon_user_permission(lagoon_user_id, lagoon_user_permission_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_permission: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_permission_updating_request LagoonUserPermissionUpdatingRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.LagoonApi"},{"location":"api/docs/LagoonApi/#soracom_apilagoonapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_lagoon_user POST /lagoon/users Create a SORACOM Lagoon user delete_lagoon_user DELETE /lagoon/users/{lagoon_user_id} Delete a SORACOM Lagoon user get_image_link GET /lagoon/image/link Get a custom icon image link of SORACOM Lagoon get_lagoon_migration_info GET /lagoon/migration Get the version migration information for SORACOM Lagoon initialize_lagoon_dashboard_permissions POST /lagoon/dashboards/{dashboard_id}/permissions/init Update permissions to the initial state for a dashboard of SORACOM Lagoon list_lagoon_dashboards_permissions GET /lagoon/dashboards/permissions List permissions for all SORACOM Lagoon dashboards list_lagoon_license_pack_status GET /lagoon/license_packs Get the status of active SORACOM Lagoon license packs list_lagoon_users GET /lagoon/users List SORACOM Lagoon users that belong to operator migrate_lagoon POST /lagoon/migration Migrate SORACOM Lagoon version register_lagoon POST /lagoon/register Register (activate) SORACOM Lagoon terminate_lagoon POST /lagoon/terminate Terminate (deactivate) SORACOM Lagoon update_lagoon_dashboard_permissions PUT /lagoon/dashboards/{dashboard_id}/permissions Update permissions for a dashboard of SORACOM Lagoon update_lagoon_license_pack PUT /lagoon/license_packs Update the quantities for license packs of SORACOM Lagoon update_lagoon_plan PUT /lagoon/plan Update the plan of SORACOM Lagoon update_lagoon_user_email PUT /lagoon/users/{lagoon_user_id}/email Update email address of a SORACOM Lagoon user update_lagoon_user_password PUT /lagoon/users/{lagoon_user_id}/password Update password of a SORACOM Lagoon user update_lagoon_user_permission PUT /lagoon/users/{lagoon_user_id}/permission Update permission of a SORACOM Lagoon user","title":"soracom_api.LagoonApi"},{"location":"api/docs/LagoonApi/#create_lagoon_user","text":"LagoonUserCreationResponse create_lagoon_user(lagoon_user_creation_request) Create a SORACOM Lagoon user Create a SORACOM Lagoon user.","title":"create_lagoon_user"},{"location":"api/docs/LagoonApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_creation_response import LagoonUserCreationResponse from soracom_api.model.lagoon_user_creation_request import LagoonUserCreationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_creation_request = LagoonUserCreationRequest( role=\"Viewer\", user_email=\"user_email_example\", user_password=\"user_password_example\", ) # LagoonUserCreationRequest | request # example passing only required values which don't have defaults set try: # Create a SORACOM Lagoon user api_response = api_instance.create_lagoon_user(lagoon_user_creation_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->create_lagoon_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters","text":"Name Type Description Notes lagoon_user_creation_request LagoonUserCreationRequest request","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type","text":"LagoonUserCreationResponse","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details","text":"Status code Description Response headers 201 Created - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#delete_lagoon_user","text":"delete_lagoon_user(lagoon_user_id) Delete a SORACOM Lagoon user Delete a SORACOM Lagoon user.","title":"delete_lagoon_user"},{"location":"api/docs/LagoonApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user # example passing only required values which don't have defaults set try: # Delete a SORACOM Lagoon user api_instance.delete_lagoon_user(lagoon_user_id) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->delete_lagoon_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_1","text":"Name Type Description Notes lagoon_user_id int Target ID of the lagoon user","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_1","text":"Status code Description Response headers 204 Deleted - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#get_image_link","text":"str get_image_link() Get a custom icon image link of SORACOM Lagoon Get a custom icon image link of SORACOM Lagoon","title":"get_image_link"},{"location":"api/docs/LagoonApi/#example_2","text":"import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get a custom icon image link of SORACOM Lagoon api_response = api_instance.get_image_link(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->get_image_link: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_2","text":"Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional]","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_2","text":"str","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#get_lagoon_migration_info","text":"get_lagoon_migration_info(lagoon_plan_changing_request) Get the version migration information for SORACOM Lagoon Get the version migration information for SORACOM Lagoon. Only the root account can operate this.","title":"get_lagoon_migration_info"},{"location":"api/docs/LagoonApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_plan_changing_request import LagoonPlanChangingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_plan_changing_request = LagoonPlanChangingRequest( plan=\"maker\", ) # LagoonPlanChangingRequest | req # example passing only required values which don't have defaults set try: # Get the version migration information for SORACOM Lagoon api_instance.get_lagoon_migration_info(lagoon_plan_changing_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->get_lagoon_migration_info: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_3","text":"Name Type Description Notes lagoon_plan_changing_request LagoonPlanChangingRequest req","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_3","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#initialize_lagoon_dashboard_permissions","text":"initialize_lagoon_dashboard_permissions(dashboard_id) Update permissions to the initial state for a dashboard of SORACOM Lagoon Update permissions to the initial state for a dashboard of SORACOM Lagoon","title":"initialize_lagoon_dashboard_permissions"},{"location":"api/docs/LagoonApi/#example_4","text":"import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) dashboard_id = 1 # int | dashboard_id classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set try: # Update permissions to the initial state for a dashboard of SORACOM Lagoon api_instance.initialize_lagoon_dashboard_permissions(dashboard_id) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->initialize_lagoon_dashboard_permissions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Update permissions to the initial state for a dashboard of SORACOM Lagoon api_instance.initialize_lagoon_dashboard_permissions(dashboard_id, classic=classic) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->initialize_lagoon_dashboard_permissions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_4","text":"Name Type Description Notes dashboard_id int dashboard_id classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional]","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_4","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_4","text":"Status code Description Response headers 204 Updated - 400 Bad request - 403 Unauthorized operation - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#list_lagoon_dashboards_permissions","text":"[LagoonDashboardPermissionsResponse] list_lagoon_dashboards_permissions() List permissions for all SORACOM Lagoon dashboards List permissions for all SORACOM Lagoon dashboards","title":"list_lagoon_dashboards_permissions"},{"location":"api/docs/LagoonApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_dashboard_permissions_response import LagoonDashboardPermissionsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # List permissions for all SORACOM Lagoon dashboards api_response = api_instance.list_lagoon_dashboards_permissions(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_dashboards_permissions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_5","text":"Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional]","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_5","text":"[LagoonDashboardPermissionsResponse]","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_5","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#list_lagoon_license_pack_status","text":"[LagoonLicensePackStatusResponse] list_lagoon_license_pack_status() Get the status of active SORACOM Lagoon license packs Get the status of active SORACOM Lagoon license packs","title":"list_lagoon_license_pack_status"},{"location":"api/docs/LagoonApi/#example_6","text":"import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_license_pack_status_response import LagoonLicensePackStatusResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) # example, this endpoint has no required or optional parameters try: # Get the status of active SORACOM Lagoon license packs api_response = api_instance.list_lagoon_license_pack_status() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_license_pack_status: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_6","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_6","text":"[LagoonLicensePackStatusResponse]","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_6","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_6","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#list_lagoon_users","text":"[LagoonUser] list_lagoon_users() List SORACOM Lagoon users that belong to operator List SORACOM Lagoon users that belong to operator.","title":"list_lagoon_users"},{"location":"api/docs/LagoonApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user import LagoonUser from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set # and optional values try: # List SORACOM Lagoon users that belong to operator api_response = api_instance.list_lagoon_users(classic=classic) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->list_lagoon_users: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_7","text":"Name Type Description Notes classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional]","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_7","text":"[LagoonUser]","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_7","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#migrate_lagoon","text":"migrate_lagoon(lagoon_migration_from_classic_request) Migrate SORACOM Lagoon version Migrate SORACOM Lagoon version. Only the root account can operate this.","title":"migrate_lagoon"},{"location":"api/docs/LagoonApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_migration_from_classic_request import LagoonMigrationFromClassicRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_migration_from_classic_request = LagoonMigrationFromClassicRequest( dashboard_ids=[ \"dashboard_ids_example\", ], ) # LagoonMigrationFromClassicRequest | req # example passing only required values which don't have defaults set try: # Migrate SORACOM Lagoon version api_instance.migrate_lagoon(lagoon_migration_from_classic_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->migrate_lagoon: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_8","text":"Name Type Description Notes lagoon_migration_from_classic_request LagoonMigrationFromClassicRequest req","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_8","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_8","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#register_lagoon","text":"LagoonRegistrationResponse register_lagoon(lagoon_registration_request) Register (activate) SORACOM Lagoon Register (activate) SORACOM Lagoon. This API is only allowed to operate by root account.","title":"register_lagoon"},{"location":"api/docs/LagoonApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_registration_response import LagoonRegistrationResponse from soracom_api.model.lagoon_registration_request import LagoonRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_registration_request = LagoonRegistrationRequest( plan=\"free\", user_password=\"user_password_example\", ) # LagoonRegistrationRequest | request # example passing only required values which don't have defaults set try: # Register (activate) SORACOM Lagoon api_response = api_instance.register_lagoon(lagoon_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->register_lagoon: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_9","text":"Name Type Description Notes lagoon_registration_request LagoonRegistrationRequest request","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_9","text":"LagoonRegistrationResponse","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_9","text":"Status code Description Response headers 201 Registered - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#terminate_lagoon","text":"terminate_lagoon() Terminate (deactivate) SORACOM Lagoon Terminate (deactivate) SORACOM Lagoon.","title":"terminate_lagoon"},{"location":"api/docs/LagoonApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) # example, this endpoint has no required or optional parameters try: # Terminate (deactivate) SORACOM Lagoon api_instance.terminate_lagoon() except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->terminate_lagoon: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_10","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_10","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_10","text":"Status code Description Response headers 204 Terminated - 400 Bad request - 404 Operator not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_dashboard_permissions","text":"update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request) Update permissions for a dashboard of SORACOM Lagoon Update permissions for a dashboard of SORACOM Lagoon","title":"update_lagoon_dashboard_permissions"},{"location":"api/docs/LagoonApi/#example_11","text":"import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_dashboard_permissions_updating_request import LagoonDashboardPermissionsUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) dashboard_id = 1 # int | dashboard_id lagoon_dashboard_permissions_updating_request = LagoonDashboardPermissionsUpdatingRequest( permissions=[ LagoonDashboardPermissionsUpdatingRequestPermissions( permission=\"permission_example\", user_id=1, ), ], ) # LagoonDashboardPermissionsUpdatingRequest | req classic = True # bool | If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. (optional) # example passing only required values which don't have defaults set try: # Update permissions for a dashboard of SORACOM Lagoon api_instance.update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_dashboard_permissions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Update permissions for a dashboard of SORACOM Lagoon api_instance.update_lagoon_dashboard_permissions(dashboard_id, lagoon_dashboard_permissions_updating_request, classic=classic) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_dashboard_permissions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_11","text":"Name Type Description Notes dashboard_id int dashboard_id lagoon_dashboard_permissions_updating_request LagoonDashboardPermissionsUpdatingRequest req classic bool If the value is true, a request will be issued to Lagoon Classic. This is only valid if both Lagoon and Lagoon Classic are enabled. [optional]","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_11","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_11","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_11","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_11","text":"Status code Description Response headers 204 Updated - 400 Bad request - 403 Unauthorized operation - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_license_pack","text":"update_lagoon_license_pack(lagoon_license_packs_updating_request) Update the quantities for license packs of SORACOM Lagoon Update the quantities for license packs of SORACOM Lagoon. This API is only allowed to operate by root account.","title":"update_lagoon_license_pack"},{"location":"api/docs/LagoonApi/#example_12","text":"import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_license_packs_updating_request import LagoonLicensePacksUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_license_packs_updating_request = LagoonLicensePacksUpdatingRequest( license_pack_quantities=[ LagoonLicensePacksUpdatingRequestLicensePackQuantities( desired_quantity=1, license_pack_name=\"license_pack_name_example\", ), ], ) # LagoonLicensePacksUpdatingRequest | req # example passing only required values which don't have defaults set try: # Update the quantities for license packs of SORACOM Lagoon api_instance.update_lagoon_license_pack(lagoon_license_packs_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_license_pack: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_12","text":"Name Type Description Notes lagoon_license_packs_updating_request LagoonLicensePacksUpdatingRequest req","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_12","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_12","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_12","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_12","text":"Status code Description Response headers 204 Updated - 400 Bad request - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_plan","text":"update_lagoon_plan(lagoon_plan_changing_request) Update the plan of SORACOM Lagoon Update the plan of SORACOM Lagoon. This API is only allowed to operate by root account.","title":"update_lagoon_plan"},{"location":"api/docs/LagoonApi/#example_13","text":"import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_plan_changing_request import LagoonPlanChangingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_plan_changing_request = LagoonPlanChangingRequest( plan=\"maker\", ) # LagoonPlanChangingRequest | req # example passing only required values which don't have defaults set try: # Update the plan of SORACOM Lagoon api_instance.update_lagoon_plan(lagoon_plan_changing_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_plan: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_13","text":"Name Type Description Notes lagoon_plan_changing_request LagoonPlanChangingRequest req","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_13","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_13","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_13","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_13","text":"Status code Description Response headers 204 Updated - 400 Bad request - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_user_email","text":"update_lagoon_user_email(lagoon_user_id, lagoon_user_email_updating_request) Update email address of a SORACOM Lagoon user Update email address of a SORACOM Lagoon user.","title":"update_lagoon_user_email"},{"location":"api/docs/LagoonApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_email_updating_request import LagoonUserEmailUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_email_updating_request = LagoonUserEmailUpdatingRequest( user_email=\"user_email_example\", ) # LagoonUserEmailUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update email address of a SORACOM Lagoon user api_instance.update_lagoon_user_email(lagoon_user_id, lagoon_user_email_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_email: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_14","text":"Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_email_updating_request LagoonUserEmailUpdatingRequest request","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_14","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_14","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_14","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_user_password","text":"update_lagoon_user_password(lagoon_user_id, lagoon_user_password_updating_request) Update password of a SORACOM Lagoon user Update password of a SORACOM Lagoon user.","title":"update_lagoon_user_password"},{"location":"api/docs/LagoonApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_password_updating_request import LagoonUserPasswordUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_password_updating_request = LagoonUserPasswordUpdatingRequest( new_password=\"new_password_example\", old_password=\"old_password_example\", ) # LagoonUserPasswordUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update password of a SORACOM Lagoon user api_instance.update_lagoon_user_password(lagoon_user_id, lagoon_user_password_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_15","text":"Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_password_updating_request LagoonUserPasswordUpdatingRequest request","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_15","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_15","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_15","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonApi/#update_lagoon_user_permission","text":"update_lagoon_user_permission(lagoon_user_id, lagoon_user_permission_updating_request) Update permission of a SORACOM Lagoon user Update permission of a SORACOM Lagoon user.","title":"update_lagoon_user_permission"},{"location":"api/docs/LagoonApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lagoon_api from soracom_api.model.lagoon_user_permission_updating_request import LagoonUserPermissionUpdatingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lagoon_api.LagoonApi(api_client) lagoon_user_id = 1 # int | Target ID of the lagoon user lagoon_user_permission_updating_request = LagoonUserPermissionUpdatingRequest( role=\"Viewer\", ) # LagoonUserPermissionUpdatingRequest | request # example passing only required values which don't have defaults set try: # Update permission of a SORACOM Lagoon user api_instance.update_lagoon_user_permission(lagoon_user_id, lagoon_user_permission_updating_request) except soracom_api.ApiException as e: print(\"Exception when calling LagoonApi->update_lagoon_user_permission: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LagoonApi/#parameters_16","text":"Name Type Description Notes lagoon_user_id int Target ID of the lagoon user lagoon_user_permission_updating_request LagoonUserPermissionUpdatingRequest request","title":"Parameters"},{"location":"api/docs/LagoonApi/#return-type_16","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LagoonApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LagoonApi/#http-request-headers_16","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LagoonApi/#http-response-details_16","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LagoonDashboardPermissionsResponse/","text":"LagoonDashboardPermissionsResponse \u00b6 Properties \u00b6 Name Type Description Notes dashboard_id float [optional] dashboard_title str [optional] permissions [LagoonDashboardPermissionsResponsePermissions] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonDashboardPermissionsResponse"},{"location":"api/docs/LagoonDashboardPermissionsResponse/#lagoondashboardpermissionsresponse","text":"","title":"LagoonDashboardPermissionsResponse"},{"location":"api/docs/LagoonDashboardPermissionsResponse/#properties","text":"Name Type Description Notes dashboard_id float [optional] dashboard_title str [optional] permissions [LagoonDashboardPermissionsResponsePermissions] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonDashboardPermissionsResponsePermissions/","text":"LagoonDashboardPermissionsResponsePermissions \u00b6 Properties \u00b6 Name Type Description Notes dashboard_id float [optional] dashboard_title str [optional] permission_name str [optional] user_email str [optional] user_id float [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonDashboardPermissionsResponsePermissions"},{"location":"api/docs/LagoonDashboardPermissionsResponsePermissions/#lagoondashboardpermissionsresponsepermissions","text":"","title":"LagoonDashboardPermissionsResponsePermissions"},{"location":"api/docs/LagoonDashboardPermissionsResponsePermissions/#properties","text":"Name Type Description Notes dashboard_id float [optional] dashboard_title str [optional] permission_name str [optional] user_email str [optional] user_id float [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequest/","text":"LagoonDashboardPermissionsUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes permissions [LagoonDashboardPermissionsUpdatingRequestPermissions] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonDashboardPermissionsUpdatingRequest"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequest/#lagoondashboardpermissionsupdatingrequest","text":"","title":"LagoonDashboardPermissionsUpdatingRequest"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequest/#properties","text":"Name Type Description Notes permissions [LagoonDashboardPermissionsUpdatingRequestPermissions] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequestPermissions/","text":"LagoonDashboardPermissionsUpdatingRequestPermissions \u00b6 Properties \u00b6 Name Type Description Notes permission str [optional] user_id int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonDashboardPermissionsUpdatingRequestPermissions"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequestPermissions/#lagoondashboardpermissionsupdatingrequestpermissions","text":"","title":"LagoonDashboardPermissionsUpdatingRequestPermissions"},{"location":"api/docs/LagoonDashboardPermissionsUpdatingRequestPermissions/#properties","text":"Name Type Description Notes permission str [optional] user_id int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonLicensePackStatusResponse/","text":"LagoonLicensePackStatusResponse \u00b6 Properties \u00b6 Name Type Description Notes license_pack_name str [optional] quantity int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonLicensePackStatusResponse"},{"location":"api/docs/LagoonLicensePackStatusResponse/#lagoonlicensepackstatusresponse","text":"","title":"LagoonLicensePackStatusResponse"},{"location":"api/docs/LagoonLicensePackStatusResponse/#properties","text":"Name Type Description Notes license_pack_name str [optional] quantity int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonLicensePacksUpdatingRequest/","text":"LagoonLicensePacksUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes license_pack_quantities [LagoonLicensePacksUpdatingRequestLicensePackQuantities] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonLicensePacksUpdatingRequest"},{"location":"api/docs/LagoonLicensePacksUpdatingRequest/#lagoonlicensepacksupdatingrequest","text":"","title":"LagoonLicensePacksUpdatingRequest"},{"location":"api/docs/LagoonLicensePacksUpdatingRequest/#properties","text":"Name Type Description Notes license_pack_quantities [LagoonLicensePacksUpdatingRequestLicensePackQuantities] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonLicensePacksUpdatingRequestLicensePackQuantities/","text":"LagoonLicensePacksUpdatingRequestLicensePackQuantities \u00b6 Properties \u00b6 Name Type Description Notes desired_quantity int [optional] license_pack_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonLicensePacksUpdatingRequestLicensePackQuantities"},{"location":"api/docs/LagoonLicensePacksUpdatingRequestLicensePackQuantities/#lagoonlicensepacksupdatingrequestlicensepackquantities","text":"","title":"LagoonLicensePacksUpdatingRequestLicensePackQuantities"},{"location":"api/docs/LagoonLicensePacksUpdatingRequestLicensePackQuantities/#properties","text":"Name Type Description Notes desired_quantity int [optional] license_pack_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonMigrationFromClassicRequest/","text":"LagoonMigrationFromClassicRequest \u00b6 Properties \u00b6 Name Type Description Notes dashboard_ids [str] A list of dashboard IDs to migrate [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonMigrationFromClassicRequest"},{"location":"api/docs/LagoonMigrationFromClassicRequest/#lagoonmigrationfromclassicrequest","text":"","title":"LagoonMigrationFromClassicRequest"},{"location":"api/docs/LagoonMigrationFromClassicRequest/#properties","text":"Name Type Description Notes dashboard_ids [str] A list of dashboard IDs to migrate [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonPlanChangingRequest/","text":"LagoonPlanChangingRequest \u00b6 Properties \u00b6 Name Type Description Notes plan str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonPlanChangingRequest"},{"location":"api/docs/LagoonPlanChangingRequest/#lagoonplanchangingrequest","text":"","title":"LagoonPlanChangingRequest"},{"location":"api/docs/LagoonPlanChangingRequest/#properties","text":"Name Type Description Notes plan str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonRegistrationRequest/","text":"LagoonRegistrationRequest \u00b6 Properties \u00b6 Name Type Description Notes plan str [optional] user_password str This password is used by the initial user's login. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonRegistrationRequest"},{"location":"api/docs/LagoonRegistrationRequest/#lagoonregistrationrequest","text":"","title":"LagoonRegistrationRequest"},{"location":"api/docs/LagoonRegistrationRequest/#properties","text":"Name Type Description Notes plan str [optional] user_password str This password is used by the initial user's login. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonRegistrationResponse/","text":"LagoonRegistrationResponse \u00b6 Properties \u00b6 Name Type Description Notes lagoon_user_email str This email address is used on login with the initial user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonRegistrationResponse"},{"location":"api/docs/LagoonRegistrationResponse/#lagoonregistrationresponse","text":"","title":"LagoonRegistrationResponse"},{"location":"api/docs/LagoonRegistrationResponse/#properties","text":"Name Type Description Notes lagoon_user_email str This email address is used on login with the initial user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUser/","text":"LagoonUser \u00b6 Properties \u00b6 Name Type Description Notes email str This value used on login. [optional] id float [optional] last_seen_at str The last login datetime. [optional] last_seen_at_age str The last login datetime as age. [optional] role str A role that represents the permission. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUser"},{"location":"api/docs/LagoonUser/#lagoonuser","text":"","title":"LagoonUser"},{"location":"api/docs/LagoonUser/#properties","text":"Name Type Description Notes email str This value used on login. [optional] id float [optional] last_seen_at str The last login datetime. [optional] last_seen_at_age str The last login datetime as age. [optional] role str A role that represents the permission. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUserCreationRequest/","text":"LagoonUserCreationRequest \u00b6 Properties \u00b6 Name Type Description Notes role str A role that represents the permission. [optional] user_email str [optional] user_password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUserCreationRequest"},{"location":"api/docs/LagoonUserCreationRequest/#lagoonusercreationrequest","text":"","title":"LagoonUserCreationRequest"},{"location":"api/docs/LagoonUserCreationRequest/#properties","text":"Name Type Description Notes role str A role that represents the permission. [optional] user_email str [optional] user_password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUserCreationResponse/","text":"LagoonUserCreationResponse \u00b6 Properties \u00b6 Name Type Description Notes id int Lagoon user ID assigned to the created user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUserCreationResponse"},{"location":"api/docs/LagoonUserCreationResponse/#lagoonusercreationresponse","text":"","title":"LagoonUserCreationResponse"},{"location":"api/docs/LagoonUserCreationResponse/#properties","text":"Name Type Description Notes id int Lagoon user ID assigned to the created user. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUserEmailUpdatingRequest/","text":"LagoonUserEmailUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes user_email str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUserEmailUpdatingRequest"},{"location":"api/docs/LagoonUserEmailUpdatingRequest/#lagoonuseremailupdatingrequest","text":"","title":"LagoonUserEmailUpdatingRequest"},{"location":"api/docs/LagoonUserEmailUpdatingRequest/#properties","text":"Name Type Description Notes user_email str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUserPasswordUpdatingRequest/","text":"LagoonUserPasswordUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes new_password str [optional] old_password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUserPasswordUpdatingRequest"},{"location":"api/docs/LagoonUserPasswordUpdatingRequest/#lagoonuserpasswordupdatingrequest","text":"","title":"LagoonUserPasswordUpdatingRequest"},{"location":"api/docs/LagoonUserPasswordUpdatingRequest/#properties","text":"Name Type Description Notes new_password str [optional] old_password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LagoonUserPermissionUpdatingRequest/","text":"LagoonUserPermissionUpdatingRequest \u00b6 Properties \u00b6 Name Type Description Notes role str A role that represents the permission. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LagoonUserPermissionUpdatingRequest"},{"location":"api/docs/LagoonUserPermissionUpdatingRequest/#lagoonuserpermissionupdatingrequest","text":"","title":"LagoonUserPermissionUpdatingRequest"},{"location":"api/docs/LagoonUserPermissionUpdatingRequest/#properties","text":"Name Type Description Notes role str A role that represents the permission. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LastSeen/","text":"LastSeen \u00b6 Properties \u00b6 Name Type Description Notes rssi int [optional] snr int [optional] time datetime [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LastSeen"},{"location":"api/docs/LastSeen/#lastseen","text":"","title":"LastSeen"},{"location":"api/docs/LastSeen/#properties","text":"Name Type Description Notes rssi int [optional] snr int [optional] time datetime [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListCouponResponse/","text":"ListCouponResponse \u00b6 Properties \u00b6 Name Type Description Notes coupon_list [CouponResponse] Coupons [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListCouponResponse"},{"location":"api/docs/ListCouponResponse/#listcouponresponse","text":"","title":"ListCouponResponse"},{"location":"api/docs/ListCouponResponse/#properties","text":"Name Type Description Notes coupon_list [CouponResponse] Coupons [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListOrderResponse/","text":"ListOrderResponse \u00b6 Properties \u00b6 Name Type Description Notes order_list [GetOrderResponse] List of confirmed orders [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListOrderResponse"},{"location":"api/docs/ListOrderResponse/#listorderresponse","text":"","title":"ListOrderResponse"},{"location":"api/docs/ListOrderResponse/#properties","text":"Name Type Description Notes order_list [GetOrderResponse] List of confirmed orders [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListOrderedSubscriberResponse/","text":"ListOrderedSubscriberResponse \u00b6 Properties \u00b6 Name Type Description Notes ordered_subscriber_list [OrderedSubscriber] List of ordered SIMs [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListOrderedSubscriberResponse"},{"location":"api/docs/ListOrderedSubscriberResponse/#listorderedsubscriberresponse","text":"","title":"ListOrderedSubscriberResponse"},{"location":"api/docs/ListOrderedSubscriberResponse/#properties","text":"Name Type Description Notes ordered_subscriber_list [OrderedSubscriber] List of ordered SIMs [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListPaymentStatementResponse/","text":"ListPaymentStatementResponse \u00b6 Properties \u00b6 Name Type Description Notes payment_statements_list [PaymentStatementResponse] Payment statements [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListPaymentStatementResponse"},{"location":"api/docs/ListPaymentStatementResponse/#listpaymentstatementresponse","text":"","title":"ListPaymentStatementResponse"},{"location":"api/docs/ListPaymentStatementResponse/#properties","text":"Name Type Description Notes payment_statements_list [PaymentStatementResponse] Payment statements [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListProductResponse/","text":"ListProductResponse \u00b6 Properties \u00b6 Name Type Description Notes product_list [ProductModel] [optional] shipping_cost_list [ShippingCostModel] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListProductResponse"},{"location":"api/docs/ListProductResponse/#listproductresponse","text":"","title":"ListProductResponse"},{"location":"api/docs/ListProductResponse/#properties","text":"Name Type Description Notes product_list [ProductModel] [optional] shipping_cost_list [ShippingCostModel] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListRolesResponse/","text":"ListRolesResponse \u00b6 Properties \u00b6 Name Type Description Notes create_date_time int [optional] description str [optional] role_id str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListRolesResponse"},{"location":"api/docs/ListRolesResponse/#listrolesresponse","text":"","title":"ListRolesResponse"},{"location":"api/docs/ListRolesResponse/#properties","text":"Name Type Description Notes create_date_time int [optional] description str [optional] role_id str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListShippingAddressResponse/","text":"ListShippingAddressResponse \u00b6 Properties \u00b6 Name Type Description Notes shipping_addresses [GetShippingAddressResponse] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListShippingAddressResponse"},{"location":"api/docs/ListShippingAddressResponse/#listshippingaddressresponse","text":"","title":"ListShippingAddressResponse"},{"location":"api/docs/ListShippingAddressResponse/#properties","text":"Name Type Description Notes shipping_addresses [GetShippingAddressResponse] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ListVolumeDiscountResponse/","text":"ListVolumeDiscountResponse \u00b6 Properties \u00b6 Name Type Description Notes volume_discount_list [GetVolumeDiscountResponse] Contracted long term discounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ListVolumeDiscountResponse"},{"location":"api/docs/ListVolumeDiscountResponse/#listvolumediscountresponse","text":"","title":"ListVolumeDiscountResponse"},{"location":"api/docs/ListVolumeDiscountResponse/#properties","text":"Name Type Description Notes volume_discount_list [GetVolumeDiscountResponse] Contracted long term discounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LogApi/","text":"soracom_api.LogApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_logs GET /logs Get Logs. get_logs \u00b6 [LogEntry] get_logs() Get Logs. Returns a list of log entries that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import log_api from soracom_api.model.log_entry import LogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = log_api.LogApi(api_client) resource_type = \"Subscriber\" # str | Type of the target resource to query log entries. (optional) resource_id = \"resource_id_example\" # str | Identity of the target resource to query log entries. (optional) service = \"Air\" # str | Service name to filter log entries. (optional) _from = 1 # int | Start time for the log search range (unixtime). (optional) to = 1 # int | End time for the log search range (unixtime). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get Logs. api_response = api_instance.get_logs(resource_type=resource_type, resource_id=resource_id, service=service, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LogApi->get_logs: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes resource_type str Type of the target resource to query log entries. [optional] resource_id str Identity of the target resource to query log entries. [optional] service str Service name to filter log entries. [optional] _from int Start time for the log search range (unixtime). [optional] to int End time for the log search range (unixtime). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [LogEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.LogApi"},{"location":"api/docs/LogApi/#soracom_apilogapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description get_logs GET /logs Get Logs.","title":"soracom_api.LogApi"},{"location":"api/docs/LogApi/#get_logs","text":"[LogEntry] get_logs() Get Logs. Returns a list of log entries that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_logs"},{"location":"api/docs/LogApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import log_api from soracom_api.model.log_entry import LogEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = log_api.LogApi(api_client) resource_type = \"Subscriber\" # str | Type of the target resource to query log entries. (optional) resource_id = \"resource_id_example\" # str | Identity of the target resource to query log entries. (optional) service = \"Air\" # str | Service name to filter log entries. (optional) _from = 1 # int | Start time for the log search range (unixtime). (optional) to = 1 # int | End time for the log search range (unixtime). (optional) limit = 1 # int | Maximum number of log entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get Logs. api_response = api_instance.get_logs(resource_type=resource_type, resource_id=resource_id, service=service, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LogApi->get_logs: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LogApi/#parameters","text":"Name Type Description Notes resource_type str Type of the target resource to query log entries. [optional] resource_id str Identity of the target resource to query log entries. [optional] service str Service name to filter log entries. [optional] _from int Start time for the log search range (unixtime). [optional] to int End time for the log search range (unixtime). [optional] limit int Maximum number of log entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/LogApi/#return-type","text":"[LogEntry]","title":"Return type"},{"location":"api/docs/LogApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LogApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LogApi/#http-response-details","text":"Status code Description Response headers 200 A list of log entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LogEntry/","text":"LogEntry \u00b6 Properties \u00b6 Name Type Description Notes body {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] resource_id str [optional] resource_type str [optional] service str [optional] time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LogEntry"},{"location":"api/docs/LogEntry/#logentry","text":"","title":"LogEntry"},{"location":"api/docs/LogEntry/#properties","text":"Name Type Description Notes body {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] resource_id str [optional] resource_type str [optional] service str [optional] time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LoraData/","text":"LoraData \u00b6 Properties \u00b6 Name Type Description Notes data str [optional] f_port int [optional] if omitted the server will use the default value of 2 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoraData"},{"location":"api/docs/LoraData/#loradata","text":"","title":"LoraData"},{"location":"api/docs/LoraData/#properties","text":"Name Type Description Notes data str [optional] f_port int [optional] if omitted the server will use the default value of 2 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LoraDevice/","text":"LoraDevice \u00b6 Properties \u00b6 Name Type Description Notes device_id str [optional] group_id str, none_type [optional] last_modified_time datetime [optional] last_seen LastSeen [optional] operator_id str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoraDevice"},{"location":"api/docs/LoraDevice/#loradevice","text":"","title":"LoraDevice"},{"location":"api/docs/LoraDevice/#properties","text":"Name Type Description Notes device_id str [optional] group_id str, none_type [optional] last_modified_time datetime [optional] last_seen LastSeen [optional] operator_id str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LoraDeviceApi/","text":"soracom_api.LoraDeviceApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_lora_device_tag DELETE /lora_devices/{device_id}/tags/{tag_name} Delete LoRa device Tag. disable_termination_on_lora_device POST /lora_devices/{device_id}/disable_termination Disable Termination of LoRa device. enable_termination_on_lora_device POST /lora_devices/{device_id}/enable_termination Enable Termination of LoRa device. get_data_from_lora_device GET /lora_devices/{device_id}/data Get data sent from a LoRa device. get_lora_device GET /lora_devices/{device_id} Get LoRa device. list_lora_devices GET /lora_devices List LoRa devices. put_lora_device_tags PUT /lora_devices/{device_id}/tags Bulk Insert or Update LoRa device Tags. register_lora_device POST /lora_devices/{device_id}/register Register LoRa device. send_data_to_lora_device POST /lora_devices/{device_id}/data Send data to a LoRa device. set_lora_device_group POST /lora_devices/{device_id}/set_group Set Group of LoRa device. terminate_lora_device POST /lora_devices/{device_id}/terminate Terminate LoRa device. unset_lora_device_group POST /lora_devices/{device_id}/unset_group Unset Group of LoRa device. delete_lora_device_tag \u00b6 delete_lora_device_tag(device_id, tag_name) Delete LoRa device Tag. Deletes a tag from the specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | device ID of the target LoRa device. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa device Tag. api_instance.delete_lora_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->delete_lora_device_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str device ID of the target LoRa device. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa device or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_termination_on_lora_device \u00b6 LoraDevice disable_termination_on_lora_device(device_id) Disable Termination of LoRa device. Disables termination of specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Disable Termination of LoRa device. api_response = api_instance.disable_termination_on_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->disable_termination_on_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_termination_on_lora_device \u00b6 LoraDevice enable_termination_on_lora_device(device_id) Enable Termination of LoRa device. Enables termination of specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Enable Termination of LoRa device. api_response = api_instance.enable_termination_on_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->enable_termination_on_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_from_lora_device \u00b6 [DataEntry] get_data_from_lora_device(device_id) Get data sent from a LoRa device. Returns a list of data entries sent from a LoRa device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a LoRa device. api_response = api_instance.get_data_from_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_data_from_lora_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a LoRa device. api_response = api_instance.get_data_from_lora_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_data_from_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_lora_device \u00b6 LoraDevice get_lora_device(device_id) Get LoRa device. Returns information about the specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Get LoRa device. api_response = api_instance.get_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lora_devices \u00b6 [LoraDevice] list_lora_devices() List LoRa devices. Returns a list of LoRa devices that match certain criteria. If the total number of LoRa devices does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa devices. api_response = api_instance.list_lora_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->list_lora_devices: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [LoraDevice] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of LoRa devices. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_lora_device_tags \u00b6 LoraDevice put_lora_device_tags(device_id, tag_update_request) Bulk Insert or Update LoRa device Tags. Inserts/updates tags for the specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.tag_update_request import TagUpdateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa device Tags. api_response = api_instance.put_lora_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->put_lora_device_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_lora_device \u00b6 LoraDevice register_lora_device(device_id, register_lora_device_request) Register LoRa device. Registers a LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.register_lora_device_request import RegisterLoraDeviceRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. register_lora_device_request = RegisterLoraDeviceRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags={ \"key\": \"key_example\", }, ) # RegisterLoraDeviceRequest | LoRa device # example passing only required values which don't have defaults set try: # Register LoRa device. api_response = api_instance.register_lora_device(device_id, register_lora_device_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->register_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. register_lora_device_request RegisterLoraDeviceRequest LoRa device Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 LoRa device registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_data_to_lora_device \u00b6 send_data_to_lora_device(device_id, lora_data) Send data to a LoRa device. Sends data to the specified LoRa device. The data is sent to the LoRa network server, to be sent out to the device using the next available slot. If another message destined for the same LoRa device ID is already waiting to be sent, the existing message will be discarded, and the new message will be sent instead. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_data import LoraData from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | ID of the recipient device. lora_data = LoraData( data=\"data_example\", f_port=2, ) # LoraData | Binary data encoded as a hexadecimal string. Maximum length of original binary data is 11 octets (22 characters when encoded as a hexadecimal string). The number of characters must be even. fPort MUST be equal to or greater than 0. 0 is used for the control plane and 1 or greater values should be used in general. It defaults to 2 to avoid the issues of some devices from some vendors and all invalid values that can not be parsed fallback to 2. # example passing only required values which don't have defaults set try: # Send data to a LoRa device. api_instance.send_data_to_lora_device(device_id, lora_data) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->send_data_to_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str ID of the recipient device. lora_data LoraData Binary data encoded as a hexadecimal string. Maximum length of original binary data is 11 octets (22 characters when encoded as a hexadecimal string). The number of characters must be even. fPort MUST be equal to or greater than 0. 0 is used for the control plane and 1 or greater values should be used in general. It defaults to 2 to avoid the issues of some devices from some vendors and all invalid values that can not be parsed fallback to 2. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Data has been received and sent to the LoRa network server for the recipient device to retrieve. - 400 The payload JSON data contains one or more invalid parameters. - 404 No such device found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_lora_device_group \u00b6 LoraDevice set_lora_device_group(device_id, group) Set Group of LoRa device. Sets or overwrites a group for the specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of LoRa device. api_response = api_instance.set_lora_device_group(device_id, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->set_lora_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. group Group Group (may include ID only). Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_lora_device \u00b6 LoraDevice terminate_lora_device(device_id) Terminate LoRa device. Terminates the specified LoRa device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Terminate LoRa device. api_response = api_instance.terminate_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->terminate_lora_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_lora_device_group \u00b6 LoraDevice unset_lora_device_group(device_id) Unset Group of LoRa device. Removes the group configuration from the specified LoRa device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Unset Group of LoRa device. api_response = api_instance.unset_lora_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->unset_lora_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target LoRa device. Return type \u00b6 LoraDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist or the LoRa device does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.LoraDeviceApi"},{"location":"api/docs/LoraDeviceApi/#soracom_apiloradeviceapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_lora_device_tag DELETE /lora_devices/{device_id}/tags/{tag_name} Delete LoRa device Tag. disable_termination_on_lora_device POST /lora_devices/{device_id}/disable_termination Disable Termination of LoRa device. enable_termination_on_lora_device POST /lora_devices/{device_id}/enable_termination Enable Termination of LoRa device. get_data_from_lora_device GET /lora_devices/{device_id}/data Get data sent from a LoRa device. get_lora_device GET /lora_devices/{device_id} Get LoRa device. list_lora_devices GET /lora_devices List LoRa devices. put_lora_device_tags PUT /lora_devices/{device_id}/tags Bulk Insert or Update LoRa device Tags. register_lora_device POST /lora_devices/{device_id}/register Register LoRa device. send_data_to_lora_device POST /lora_devices/{device_id}/data Send data to a LoRa device. set_lora_device_group POST /lora_devices/{device_id}/set_group Set Group of LoRa device. terminate_lora_device POST /lora_devices/{device_id}/terminate Terminate LoRa device. unset_lora_device_group POST /lora_devices/{device_id}/unset_group Unset Group of LoRa device.","title":"soracom_api.LoraDeviceApi"},{"location":"api/docs/LoraDeviceApi/#delete_lora_device_tag","text":"delete_lora_device_tag(device_id, tag_name) Delete LoRa device Tag. Deletes a tag from the specified LoRa device.","title":"delete_lora_device_tag"},{"location":"api/docs/LoraDeviceApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | device ID of the target LoRa device. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa device Tag. api_instance.delete_lora_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->delete_lora_device_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters","text":"Name Type Description Notes device_id str device ID of the target LoRa device. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa device or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#disable_termination_on_lora_device","text":"LoraDevice disable_termination_on_lora_device(device_id) Disable Termination of LoRa device. Disables termination of specified LoRa device.","title":"disable_termination_on_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Disable Termination of LoRa device. api_response = api_instance.disable_termination_on_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->disable_termination_on_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_1","text":"Name Type Description Notes device_id str Device ID of the target LoRa device.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_1","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_1","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#enable_termination_on_lora_device","text":"LoraDevice enable_termination_on_lora_device(device_id) Enable Termination of LoRa device. Enables termination of specified LoRa device.","title":"enable_termination_on_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Enable Termination of LoRa device. api_response = api_instance.enable_termination_on_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->enable_termination_on_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_2","text":"Name Type Description Notes device_id str Device ID of the target LoRa device.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_2","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_2","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#get_data_from_lora_device","text":"[DataEntry] get_data_from_lora_device(device_id) Get data sent from a LoRa device. Returns a list of data entries sent from a LoRa device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_from_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a LoRa device. api_response = api_instance.get_data_from_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_data_from_lora_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a LoRa device. api_response = api_instance.get_data_from_lora_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_data_from_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_3","text":"Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_3","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_3","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#get_lora_device","text":"LoraDevice get_lora_device(device_id) Get LoRa device. Returns information about the specified LoRa device.","title":"get_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Get LoRa device. api_response = api_instance.get_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->get_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_4","text":"Name Type Description Notes device_id str Device ID of the target LoRa device.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_4","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_4","text":"Status code Description Response headers 200 The LoRa device's detailed information. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#list_lora_devices","text":"[LoraDevice] list_lora_devices() List LoRa devices. Returns a list of LoRa devices that match certain criteria. If the total number of LoRa devices does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_lora_devices"},{"location":"api/docs/LoraDeviceApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa devices. api_response = api_instance.list_lora_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->list_lora_devices: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_5","text":"Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_5","text":"[LoraDevice]","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_5","text":"Status code Description Response headers 200 A list of LoRa devices. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#put_lora_device_tags","text":"LoraDevice put_lora_device_tags(device_id, tag_update_request) Bulk Insert or Update LoRa device Tags. Inserts/updates tags for the specified LoRa device.","title":"put_lora_device_tags"},{"location":"api/docs/LoraDeviceApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.tag_update_request import TagUpdateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa device Tags. api_response = api_instance.put_lora_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->put_lora_device_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_6","text":"Name Type Description Notes device_id str Device ID of the target LoRa device. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_6","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_6","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#register_lora_device","text":"LoraDevice register_lora_device(device_id, register_lora_device_request) Register LoRa device. Registers a LoRa device.","title":"register_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.register_lora_device_request import RegisterLoraDeviceRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. register_lora_device_request = RegisterLoraDeviceRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags={ \"key\": \"key_example\", }, ) # RegisterLoraDeviceRequest | LoRa device # example passing only required values which don't have defaults set try: # Register LoRa device. api_response = api_instance.register_lora_device(device_id, register_lora_device_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->register_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_7","text":"Name Type Description Notes device_id str Device ID of the target LoRa device. register_lora_device_request RegisterLoraDeviceRequest LoRa device","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_7","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_7","text":"Status code Description Response headers 201 LoRa device registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#send_data_to_lora_device","text":"send_data_to_lora_device(device_id, lora_data) Send data to a LoRa device. Sends data to the specified LoRa device. The data is sent to the LoRa network server, to be sent out to the device using the next available slot. If another message destined for the same LoRa device ID is already waiting to be sent, the existing message will be discarded, and the new message will be sent instead.","title":"send_data_to_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_data import LoraData from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | ID of the recipient device. lora_data = LoraData( data=\"data_example\", f_port=2, ) # LoraData | Binary data encoded as a hexadecimal string. Maximum length of original binary data is 11 octets (22 characters when encoded as a hexadecimal string). The number of characters must be even. fPort MUST be equal to or greater than 0. 0 is used for the control plane and 1 or greater values should be used in general. It defaults to 2 to avoid the issues of some devices from some vendors and all invalid values that can not be parsed fallback to 2. # example passing only required values which don't have defaults set try: # Send data to a LoRa device. api_instance.send_data_to_lora_device(device_id, lora_data) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->send_data_to_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_8","text":"Name Type Description Notes device_id str ID of the recipient device. lora_data LoraData Binary data encoded as a hexadecimal string. Maximum length of original binary data is 11 octets (22 characters when encoded as a hexadecimal string). The number of characters must be even. fPort MUST be equal to or greater than 0. 0 is used for the control plane and 1 or greater values should be used in general. It defaults to 2 to avoid the issues of some devices from some vendors and all invalid values that can not be parsed fallback to 2.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_8","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_8","text":"Status code Description Response headers 204 Data has been received and sent to the LoRa network server for the recipient device to retrieve. - 400 The payload JSON data contains one or more invalid parameters. - 404 No such device found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#set_lora_device_group","text":"LoraDevice set_lora_device_group(device_id, group) Set Group of LoRa device. Sets or overwrites a group for the specified LoRa device.","title":"set_lora_device_group"},{"location":"api/docs/LoraDeviceApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of LoRa device. api_response = api_instance.set_lora_device_group(device_id, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->set_lora_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_9","text":"Name Type Description Notes device_id str Device ID of the target LoRa device. group Group Group (may include ID only).","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_9","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_9","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#terminate_lora_device","text":"LoraDevice terminate_lora_device(device_id) Terminate LoRa device. Terminates the specified LoRa device","title":"terminate_lora_device"},{"location":"api/docs/LoraDeviceApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Terminate LoRa device. api_response = api_instance.terminate_lora_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->terminate_lora_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_10","text":"Name Type Description Notes device_id str Device ID of the target LoRa device.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_10","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_10","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraDeviceApi/#unset_lora_device_group","text":"LoraDevice unset_lora_device_group(device_id) Unset Group of LoRa device. Removes the group configuration from the specified LoRa device.","title":"unset_lora_device_group"},{"location":"api/docs/LoraDeviceApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_device_api from soracom_api.model.lora_device import LoraDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_device_api.LoraDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target LoRa device. # example passing only required values which don't have defaults set try: # Unset Group of LoRa device. api_response = api_instance.unset_lora_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraDeviceApi->unset_lora_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraDeviceApi/#parameters_11","text":"Name Type Description Notes device_id str Device ID of the target LoRa device.","title":"Parameters"},{"location":"api/docs/LoraDeviceApi/#return-type_11","text":"LoraDevice","title":"Return type"},{"location":"api/docs/LoraDeviceApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraDeviceApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraDeviceApi/#http-response-details_11","text":"Status code Description Response headers 200 The LoRa device's detailed information after the update. - 404 The specified LoRa device does not exist or the LoRa device does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGateway/","text":"LoraGateway \u00b6 Properties \u00b6 Name Type Description Notes address str [optional] created_time datetime [optional] gateway_id str [optional] last_modified_time datetime [optional] network_set_id str [optional] online bool [optional] if omitted the server will use the default value of False operator_id str [optional] owned bool [optional] if omitted the server will use the default value of False status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoraGateway"},{"location":"api/docs/LoraGateway/#loragateway","text":"","title":"LoraGateway"},{"location":"api/docs/LoraGateway/#properties","text":"Name Type Description Notes address str [optional] created_time datetime [optional] gateway_id str [optional] last_modified_time datetime [optional] network_set_id str [optional] online bool [optional] if omitted the server will use the default value of False operator_id str [optional] owned bool [optional] if omitted the server will use the default value of False status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LoraGatewayApi/","text":"soracom_api.LoraGatewayApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_lora_gateway_tag DELETE /lora_gateways/{gateway_id}/tags/{tag_name} Delete LoRa gateway tag. disable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/disable_termination Disable Termination of LoRa gateway. enable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/enable_termination Enable Termination of LoRa gateway. get_lora_gateway GET /lora_gateways/{gateway_id} Get LoRa gateway. list_lora_gateways GET /lora_gateways List LoRa Gateways. put_lora_gateway_tags PUT /lora_gateways/{gateway_id}/tags Bulk Insert or Update LoRa gateway Tags. set_lora_network_set POST /lora_gateways/{gateway_id}/set_network_set Set Network Set ID of LoRa gateway. terminate_lora_gateway POST /lora_gateways/{gateway_id}/terminate Terminate LoRa gateway. unset_lora_network_set POST /lora_gateways/{gateway_id}/unset_network_set Unset Network Set ID of LoRa gateway. delete_lora_gateway_tag \u00b6 delete_lora_gateway_tag(gateway_id, tag_name) Delete LoRa gateway tag. Deletes a tag from the specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. tag_name = \"tag_name_example\" # str | Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa gateway tag. api_instance.delete_lora_gateway_tag(gateway_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->delete_lora_gateway_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. tag_name str Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa gateway or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_termination_on_lora_gateway \u00b6 LoraGateway disable_termination_on_lora_gateway(gateway_id) Disable Termination of LoRa gateway. Disables termination of specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Disable Termination of LoRa gateway. api_response = api_instance.disable_termination_on_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->disable_termination_on_lora_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_termination_on_lora_gateway \u00b6 LoraGateway enable_termination_on_lora_gateway(gateway_id) Enable Termination of LoRa gateway. Enables termination of specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Enable Termination of LoRa gateway. api_response = api_instance.enable_termination_on_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->enable_termination_on_lora_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_lora_gateway \u00b6 LoraGateway get_lora_gateway(gateway_id) Get LoRa gateway. Returns information about the specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | Gateway ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Get LoRa gateway. api_response = api_instance.get_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->get_lora_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str Gateway ID of the target LoRa gateway. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lora_gateways \u00b6 [LoraGateway] list_lora_gateways() List LoRa Gateways. Returns a list of LoRa gateways that match certain criteria. If the total number of LoRa gateways does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Gateways. api_response = api_instance.list_lora_gateways(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->list_lora_gateways: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [LoraGateway] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of LoRa gateways. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_lora_gateway_tags \u00b6 LoraGateway put_lora_gateway_tags(gateway_id, tag_update_request) Bulk Insert or Update LoRa gateway Tags. Inserts/updates tags for the specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa gateway Tags. api_response = api_instance.put_lora_gateway_tags(gateway_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->put_lora_gateway_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_lora_network_set \u00b6 LoraGateway set_lora_network_set(gateway_id) Set Network Set ID of LoRa gateway. Sets or overwrites network set ID for the specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from soracom_api.model.set_network_set_request import SetNetworkSetRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. set_network_set_request = SetNetworkSetRequest( network_set_id=\"network_set_id_example\", ) # SetNetworkSetRequest | LoRa Network Set ID. (optional) # example passing only required values which don't have defaults set try: # Set Network Set ID of LoRa gateway. api_response = api_instance.set_lora_network_set(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->set_lora_network_set: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set Network Set ID of LoRa gateway. api_response = api_instance.set_lora_network_set(gateway_id, set_network_set_request=set_network_set_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->set_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. set_network_set_request SetNetworkSetRequest LoRa Network Set ID. [optional] Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : text/plain Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_lora_gateway \u00b6 LoraGateway terminate_lora_gateway(gateway_id) Terminate LoRa gateway. Terminates the specified LoRa gateway Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | Device ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Terminate LoRa gateway. api_response = api_instance.terminate_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->terminate_lora_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str Device ID of the target LoRa gateway. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_lora_network_set \u00b6 LoraGateway unset_lora_network_set(gateway_id) Unset Network Set ID of LoRa gateway. Unset network set ID of the specified LoRa gateway. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Unset Network Set ID of LoRa gateway. api_response = api_instance.unset_lora_network_set(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->unset_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes gateway_id str ID of the target LoRa gateway. Return type \u00b6 LoraGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.LoraGatewayApi"},{"location":"api/docs/LoraGatewayApi/#soracom_apiloragatewayapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_lora_gateway_tag DELETE /lora_gateways/{gateway_id}/tags/{tag_name} Delete LoRa gateway tag. disable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/disable_termination Disable Termination of LoRa gateway. enable_termination_on_lora_gateway POST /lora_gateways/{gateway_id}/enable_termination Enable Termination of LoRa gateway. get_lora_gateway GET /lora_gateways/{gateway_id} Get LoRa gateway. list_lora_gateways GET /lora_gateways List LoRa Gateways. put_lora_gateway_tags PUT /lora_gateways/{gateway_id}/tags Bulk Insert or Update LoRa gateway Tags. set_lora_network_set POST /lora_gateways/{gateway_id}/set_network_set Set Network Set ID of LoRa gateway. terminate_lora_gateway POST /lora_gateways/{gateway_id}/terminate Terminate LoRa gateway. unset_lora_network_set POST /lora_gateways/{gateway_id}/unset_network_set Unset Network Set ID of LoRa gateway.","title":"soracom_api.LoraGatewayApi"},{"location":"api/docs/LoraGatewayApi/#delete_lora_gateway_tag","text":"delete_lora_gateway_tag(gateway_id, tag_name) Delete LoRa gateway tag. Deletes a tag from the specified LoRa gateway.","title":"delete_lora_gateway_tag"},{"location":"api/docs/LoraGatewayApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. tag_name = \"tag_name_example\" # str | Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa gateway tag. api_instance.delete_lora_gateway_tag(gateway_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->delete_lora_gateway_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway. tag_name str Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa gateway or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#disable_termination_on_lora_gateway","text":"LoraGateway disable_termination_on_lora_gateway(gateway_id) Disable Termination of LoRa gateway. Disables termination of specified LoRa gateway.","title":"disable_termination_on_lora_gateway"},{"location":"api/docs/LoraGatewayApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Disable Termination of LoRa gateway. api_response = api_instance.disable_termination_on_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->disable_termination_on_lora_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_1","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_1","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_1","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#enable_termination_on_lora_gateway","text":"LoraGateway enable_termination_on_lora_gateway(gateway_id) Enable Termination of LoRa gateway. Enables termination of specified LoRa gateway.","title":"enable_termination_on_lora_gateway"},{"location":"api/docs/LoraGatewayApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Enable Termination of LoRa gateway. api_response = api_instance.enable_termination_on_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->enable_termination_on_lora_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_2","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_2","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_2","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#get_lora_gateway","text":"LoraGateway get_lora_gateway(gateway_id) Get LoRa gateway. Returns information about the specified LoRa gateway.","title":"get_lora_gateway"},{"location":"api/docs/LoraGatewayApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | Gateway ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Get LoRa gateway. api_response = api_instance.get_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->get_lora_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_3","text":"Name Type Description Notes gateway_id str Gateway ID of the target LoRa gateway.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_3","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_3","text":"Status code Description Response headers 200 The LoRa gateway's detailed information. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#list_lora_gateways","text":"[LoraGateway] list_lora_gateways() List LoRa Gateways. Returns a list of LoRa gateways that match certain criteria. If the total number of LoRa gateways does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_lora_gateways"},{"location":"api/docs/LoraGatewayApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Gateways. api_response = api_instance.list_lora_gateways(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->list_lora_gateways: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_4","text":"Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_4","text":"[LoraGateway]","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_4","text":"Status code Description Response headers 200 A list of LoRa gateways. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#put_lora_gateway_tags","text":"LoraGateway put_lora_gateway_tags(gateway_id, tag_update_request) Bulk Insert or Update LoRa gateway Tags. Inserts/updates tags for the specified LoRa gateway.","title":"put_lora_gateway_tags"},{"location":"api/docs/LoraGatewayApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa gateway Tags. api_response = api_instance.put_lora_gateway_tags(gateway_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->put_lora_gateway_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_5","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_5","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_5","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_5","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#set_lora_network_set","text":"LoraGateway set_lora_network_set(gateway_id) Set Network Set ID of LoRa gateway. Sets or overwrites network set ID for the specified LoRa gateway.","title":"set_lora_network_set"},{"location":"api/docs/LoraGatewayApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from soracom_api.model.set_network_set_request import SetNetworkSetRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. set_network_set_request = SetNetworkSetRequest( network_set_id=\"network_set_id_example\", ) # SetNetworkSetRequest | LoRa Network Set ID. (optional) # example passing only required values which don't have defaults set try: # Set Network Set ID of LoRa gateway. api_response = api_instance.set_lora_network_set(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->set_lora_network_set: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set Network Set ID of LoRa gateway. api_response = api_instance.set_lora_network_set(gateway_id, set_network_set_request=set_network_set_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->set_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_6","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway. set_network_set_request SetNetworkSetRequest LoRa Network Set ID. [optional]","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_6","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_6","text":"Content-Type : text/plain Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_6","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#terminate_lora_gateway","text":"LoraGateway terminate_lora_gateway(gateway_id) Terminate LoRa gateway. Terminates the specified LoRa gateway","title":"terminate_lora_gateway"},{"location":"api/docs/LoraGatewayApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | Device ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Terminate LoRa gateway. api_response = api_instance.terminate_lora_gateway(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->terminate_lora_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_7","text":"Name Type Description Notes gateway_id str Device ID of the target LoRa gateway.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_7","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_7","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraGatewayApi/#unset_lora_network_set","text":"LoraGateway unset_lora_network_set(gateway_id) Unset Network Set ID of LoRa gateway. Unset network set ID of the specified LoRa gateway.","title":"unset_lora_network_set"},{"location":"api/docs/LoraGatewayApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_gateway_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_gateway_api.LoraGatewayApi(api_client) gateway_id = \"gateway_id_example\" # str | ID of the target LoRa gateway. # example passing only required values which don't have defaults set try: # Unset Network Set ID of LoRa gateway. api_response = api_instance.unset_lora_network_set(gateway_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraGatewayApi->unset_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraGatewayApi/#parameters_8","text":"Name Type Description Notes gateway_id str ID of the target LoRa gateway.","title":"Parameters"},{"location":"api/docs/LoraGatewayApi/#return-type_8","text":"LoraGateway","title":"Return type"},{"location":"api/docs/LoraGatewayApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraGatewayApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraGatewayApi/#http-response-details_8","text":"Status code Description Response headers 200 The LoRa gateway's detailed information after the update. - 404 The specified LoRa gateway does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSet/","text":"LoraNetworkSet \u00b6 Properties \u00b6 Name Type Description Notes allowed_operators [str] [optional] created_time datetime [optional] last_modified_time datetime [optional] network_set_id str [optional] operator_id str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"LoraNetworkSet"},{"location":"api/docs/LoraNetworkSet/#loranetworkset","text":"","title":"LoraNetworkSet"},{"location":"api/docs/LoraNetworkSet/#properties","text":"Name Type Description Notes allowed_operators [str] [optional] created_time datetime [optional] last_modified_time datetime [optional] network_set_id str [optional] operator_id str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/LoraNetworkSetApi/","text":"soracom_api.LoraNetworkSetApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description add_permission_to_lora_network_set POST /lora_network_sets/{ns_id}/add_permission Adds permission to a LoRa network set. create_lora_network_set POST /lora_network_sets Create a LoRa network set. delete_lora_network_set DELETE /lora_network_sets/{ns_id} Delete LoRa network set. delete_lora_network_set_tag DELETE /lora_network_sets/{ns_id}/tags/{tag_name} Delete LoRa network set tag. get_lora_network_set GET /lora_network_sets/{ns_id} Get LoRa network set. list_gateways_in_lora_network_set GET /lora_network_sets/{ns_id}/gateways List LoRa Gateways in a Network Set. list_lora_network_sets GET /lora_network_sets List LoRa Network Sets. put_lora_network_set_tags PUT /lora_network_sets/{ns_id}/tags Bulk Insert or Update LoRa network set tags. revoke_permission_from_lora_network_set POST /lora_network_sets/{ns_id}/revoke_permission Revokes a permission from a LoRa network set. add_permission_to_lora_network_set \u00b6 LoraNetworkSet add_permission_to_lora_network_set(ns_id, update_permission_request) Adds permission to a LoRa network set. Adds permission to allow another operator to use the network set. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.update_permission_request import UpdatePermissionRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. update_permission_request = UpdatePermissionRequest( operator_id=\"operator_id_example\", ) # UpdatePermissionRequest | ID of the operator to be added to the list of allowed operators. # example passing only required values which don't have defaults set try: # Adds permission to a LoRa network set. api_response = api_instance.add_permission_to_lora_network_set(ns_id, update_permission_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->add_permission_to_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. update_permission_request UpdatePermissionRequest ID of the operator to be added to the list of allowed operators. Return type \u00b6 LoraNetworkSet Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Permission added to the network set. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_lora_network_set \u00b6 LoraNetworkSet create_lora_network_set(lora_network_set) Create a LoRa network set. Creates a specified LoRa network set Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) lora_network_set = LoraNetworkSet( allowed_operators=[ \"allowed_operators_example\", ], created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), network_set_id=\"network_set_id_example\", operator_id=\"operator_id_example\", tags={ \"key\": \"key_example\", }, ) # LoraNetworkSet | Additional metadata such as tags for a LoRa network set to create. # example passing only required values which don't have defaults set try: # Create a LoRa network set. api_response = api_instance.create_lora_network_set(lora_network_set) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->create_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes lora_network_set LoraNetworkSet Additional metadata such as tags for a LoRa network set to create. Return type \u00b6 LoraNetworkSet Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 A LoRa network set was created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_lora_network_set \u00b6 delete_lora_network_set(ns_id) Delete LoRa network set. Deletes the specified LoRa network set Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. # example passing only required values which don't have defaults set try: # Delete LoRa network set. api_instance.delete_lora_network_set(ns_id) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->delete_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Successfully deleted. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_lora_network_set_tag \u00b6 delete_lora_network_set_tag(ns_id, tag_name) Delete LoRa network set tag. Deletes a tag from the specified LoRa network set. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. tag_name = \"tag_name_example\" # str | Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa network set tag. api_instance.delete_lora_network_set_tag(ns_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->delete_lora_network_set_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. tag_name str Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa network set or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_lora_network_set \u00b6 LoraNetworkSet get_lora_network_set(ns_id) Get LoRa network set. Returns information about the specified LoRa network set. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. # example passing only required values which don't have defaults set try: # Get LoRa network set. api_response = api_instance.get_lora_network_set(ns_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->get_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. Return type \u00b6 LoraNetworkSet Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa network set's detailed information. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_gateways_in_lora_network_set \u00b6 [LoraGateway] list_gateways_in_lora_network_set(ns_id) List LoRa Gateways in a Network Set. Returns a list of LoRa gateways that belong to the specified network set. If the total number of LoRa gateways does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. limit = 1 # int | Maximum number of LoRa gateways to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last gateway retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set try: # List LoRa Gateways in a Network Set. api_response = api_instance.list_gateways_in_lora_network_set(ns_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_gateways_in_lora_network_set: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Gateways in a Network Set. api_response = api_instance.list_gateways_in_lora_network_set(ns_id, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_gateways_in_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. limit int Maximum number of LoRa gateways to retrieve. [optional] last_evaluated_key str The ID of the last gateway retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [LoraGateway] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of LoRa gateways. - 404 The specified network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_lora_network_sets \u00b6 [LoraNetworkSet] list_lora_network_sets() List LoRa Network Sets. Returns a list of LoRa network sets that match certain criteria. If the total number of LoRa network sets does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last network set retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Network Sets. api_response = api_instance.list_lora_network_sets(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_lora_network_sets: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The ID of the last network set retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [LoraNetworkSet] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of LoRa network sets. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_lora_network_set_tags \u00b6 LoraNetworkSet put_lora_network_set_tags(ns_id, tag_update_request) Bulk Insert or Update LoRa network set tags. Inserts/updates tags for the specified LoRa network set. Example \u00b6 import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa network set tags. api_response = api_instance.put_lora_network_set_tags(ns_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->put_lora_network_set_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 LoraNetworkSet Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The LoRa network set's detailed information after the update. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] revoke_permission_from_lora_network_set \u00b6 LoraNetworkSet revoke_permission_from_lora_network_set(ns_id, update_permission_request) Revokes a permission from a LoRa network set. Revokes a permission and removes an operator from the list of allowed operators in the network set. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.update_permission_request import UpdatePermissionRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. update_permission_request = UpdatePermissionRequest( operator_id=\"operator_id_example\", ) # UpdatePermissionRequest | ID of the operator to be added to the list of allowed operators. # example passing only required values which don't have defaults set try: # Revokes a permission from a LoRa network set. api_response = api_instance.revoke_permission_from_lora_network_set(ns_id, update_permission_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->revoke_permission_from_lora_network_set: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ns_id str ID of the target LoRa network set. update_permission_request UpdatePermissionRequest ID of the operator to be added to the list of allowed operators. Return type \u00b6 LoraNetworkSet Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Permission revoked from the network set. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.LoraNetworkSetApi"},{"location":"api/docs/LoraNetworkSetApi/#soracom_apiloranetworksetapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description add_permission_to_lora_network_set POST /lora_network_sets/{ns_id}/add_permission Adds permission to a LoRa network set. create_lora_network_set POST /lora_network_sets Create a LoRa network set. delete_lora_network_set DELETE /lora_network_sets/{ns_id} Delete LoRa network set. delete_lora_network_set_tag DELETE /lora_network_sets/{ns_id}/tags/{tag_name} Delete LoRa network set tag. get_lora_network_set GET /lora_network_sets/{ns_id} Get LoRa network set. list_gateways_in_lora_network_set GET /lora_network_sets/{ns_id}/gateways List LoRa Gateways in a Network Set. list_lora_network_sets GET /lora_network_sets List LoRa Network Sets. put_lora_network_set_tags PUT /lora_network_sets/{ns_id}/tags Bulk Insert or Update LoRa network set tags. revoke_permission_from_lora_network_set POST /lora_network_sets/{ns_id}/revoke_permission Revokes a permission from a LoRa network set.","title":"soracom_api.LoraNetworkSetApi"},{"location":"api/docs/LoraNetworkSetApi/#add_permission_to_lora_network_set","text":"LoraNetworkSet add_permission_to_lora_network_set(ns_id, update_permission_request) Adds permission to a LoRa network set. Adds permission to allow another operator to use the network set.","title":"add_permission_to_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.update_permission_request import UpdatePermissionRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. update_permission_request = UpdatePermissionRequest( operator_id=\"operator_id_example\", ) # UpdatePermissionRequest | ID of the operator to be added to the list of allowed operators. # example passing only required values which don't have defaults set try: # Adds permission to a LoRa network set. api_response = api_instance.add_permission_to_lora_network_set(ns_id, update_permission_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->add_permission_to_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters","text":"Name Type Description Notes ns_id str ID of the target LoRa network set. update_permission_request UpdatePermissionRequest ID of the operator to be added to the list of allowed operators.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type","text":"LoraNetworkSet","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details","text":"Status code Description Response headers 200 Permission added to the network set. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#create_lora_network_set","text":"LoraNetworkSet create_lora_network_set(lora_network_set) Create a LoRa network set. Creates a specified LoRa network set","title":"create_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) lora_network_set = LoraNetworkSet( allowed_operators=[ \"allowed_operators_example\", ], created_time=dateutil_parser('1970-01-01T00:00:00.00Z'), last_modified_time=dateutil_parser('1970-01-01T00:00:00.00Z'), network_set_id=\"network_set_id_example\", operator_id=\"operator_id_example\", tags={ \"key\": \"key_example\", }, ) # LoraNetworkSet | Additional metadata such as tags for a LoRa network set to create. # example passing only required values which don't have defaults set try: # Create a LoRa network set. api_response = api_instance.create_lora_network_set(lora_network_set) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->create_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_1","text":"Name Type Description Notes lora_network_set LoraNetworkSet Additional metadata such as tags for a LoRa network set to create.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_1","text":"LoraNetworkSet","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_1","text":"Status code Description Response headers 201 A LoRa network set was created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#delete_lora_network_set","text":"delete_lora_network_set(ns_id) Delete LoRa network set. Deletes the specified LoRa network set","title":"delete_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. # example passing only required values which don't have defaults set try: # Delete LoRa network set. api_instance.delete_lora_network_set(ns_id) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->delete_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_2","text":"Name Type Description Notes ns_id str ID of the target LoRa network set.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_2","text":"Status code Description Response headers 204 Successfully deleted. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#delete_lora_network_set_tag","text":"delete_lora_network_set_tag(ns_id, tag_name) Delete LoRa network set tag. Deletes a tag from the specified LoRa network set.","title":"delete_lora_network_set_tag"},{"location":"api/docs/LoraNetworkSetApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. tag_name = \"tag_name_example\" # str | Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete LoRa network set tag. api_instance.delete_lora_network_set_tag(ns_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->delete_lora_network_set_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_3","text":"Name Type Description Notes ns_id str ID of the target LoRa network set. tag_name str Name of tag to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_3","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified LoRa network set or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#get_lora_network_set","text":"LoraNetworkSet get_lora_network_set(ns_id) Get LoRa network set. Returns information about the specified LoRa network set.","title":"get_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. # example passing only required values which don't have defaults set try: # Get LoRa network set. api_response = api_instance.get_lora_network_set(ns_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->get_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_4","text":"Name Type Description Notes ns_id str ID of the target LoRa network set.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_4","text":"LoraNetworkSet","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_4","text":"Status code Description Response headers 200 The LoRa network set's detailed information. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#list_gateways_in_lora_network_set","text":"[LoraGateway] list_gateways_in_lora_network_set(ns_id) List LoRa Gateways in a Network Set. Returns a list of LoRa gateways that belong to the specified network set. If the total number of LoRa gateways does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_gateways_in_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_gateway import LoraGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. limit = 1 # int | Maximum number of LoRa gateways to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last gateway retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set try: # List LoRa Gateways in a Network Set. api_response = api_instance.list_gateways_in_lora_network_set(ns_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_gateways_in_lora_network_set: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Gateways in a Network Set. api_response = api_instance.list_gateways_in_lora_network_set(ns_id, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_gateways_in_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_5","text":"Name Type Description Notes ns_id str ID of the target LoRa network set. limit int Maximum number of LoRa gateways to retrieve. [optional] last_evaluated_key str The ID of the last gateway retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_5","text":"[LoraGateway]","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_5","text":"Status code Description Response headers 200 A list of LoRa gateways. - 404 The specified network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#list_lora_network_sets","text":"[LoraNetworkSet] list_lora_network_sets() List LoRa Network Sets. Returns a list of LoRa network sets that match certain criteria. If the total number of LoRa network sets does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_lora_network_sets"},{"location":"api/docs/LoraNetworkSetApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of LoRa devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last network set retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List LoRa Network Sets. api_response = api_instance.list_lora_network_sets(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->list_lora_network_sets: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_6","text":"Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of LoRa devices to retrieve. [optional] last_evaluated_key str The ID of the last network set retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_6","text":"[LoraNetworkSet]","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_6","text":"Status code Description Response headers 200 A list of LoRa network sets. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#put_lora_network_set_tags","text":"LoraNetworkSet put_lora_network_set_tags(ns_id, tag_update_request) Bulk Insert or Update LoRa network set tags. Inserts/updates tags for the specified LoRa network set.","title":"put_lora_network_set_tags"},{"location":"api/docs/LoraNetworkSetApi/#example_7","text":"import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update LoRa network set tags. api_response = api_instance.put_lora_network_set_tags(ns_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->put_lora_network_set_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_7","text":"Name Type Description Notes ns_id str ID of the target LoRa network set. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_7","text":"LoraNetworkSet","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_7","text":"No authorization required","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_7","text":"Status code Description Response headers 200 The LoRa network set's detailed information after the update. - 404 The specified LoRa network set does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/LoraNetworkSetApi/#revoke_permission_from_lora_network_set","text":"LoraNetworkSet revoke_permission_from_lora_network_set(ns_id, update_permission_request) Revokes a permission from a LoRa network set. Revokes a permission and removes an operator from the list of allowed operators in the network set.","title":"revoke_permission_from_lora_network_set"},{"location":"api/docs/LoraNetworkSetApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import lora_network_set_api from soracom_api.model.update_permission_request import UpdatePermissionRequest from soracom_api.model.lora_network_set import LoraNetworkSet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = lora_network_set_api.LoraNetworkSetApi(api_client) ns_id = \"ns_id_example\" # str | ID of the target LoRa network set. update_permission_request = UpdatePermissionRequest( operator_id=\"operator_id_example\", ) # UpdatePermissionRequest | ID of the operator to be added to the list of allowed operators. # example passing only required values which don't have defaults set try: # Revokes a permission from a LoRa network set. api_response = api_instance.revoke_permission_from_lora_network_set(ns_id, update_permission_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling LoraNetworkSetApi->revoke_permission_from_lora_network_set: %s\\n\" % e)","title":"Example"},{"location":"api/docs/LoraNetworkSetApi/#parameters_8","text":"Name Type Description Notes ns_id str ID of the target LoRa network set. update_permission_request UpdatePermissionRequest ID of the operator to be added to the list of allowed operators.","title":"Parameters"},{"location":"api/docs/LoraNetworkSetApi/#return-type_8","text":"LoraNetworkSet","title":"Return type"},{"location":"api/docs/LoraNetworkSetApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/LoraNetworkSetApi/#http-request-headers_8","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/LoraNetworkSetApi/#http-response-details_8","text":"Status code Description Response headers 200 Permission revoked from the network set. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/MFAAuthenticationRequest/","text":"MFAAuthenticationRequest \u00b6 Properties \u00b6 Name Type Description Notes mfa_otp_code str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MFAAuthenticationRequest"},{"location":"api/docs/MFAAuthenticationRequest/#mfaauthenticationrequest","text":"","title":"MFAAuthenticationRequest"},{"location":"api/docs/MFAAuthenticationRequest/#properties","text":"Name Type Description Notes mfa_otp_code str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/MFAIssueRevokingTokenRequest/","text":"MFAIssueRevokingTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes email str [optional] password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MFAIssueRevokingTokenRequest"},{"location":"api/docs/MFAIssueRevokingTokenRequest/#mfaissuerevokingtokenrequest","text":"","title":"MFAIssueRevokingTokenRequest"},{"location":"api/docs/MFAIssueRevokingTokenRequest/#properties","text":"Name Type Description Notes email str [optional] password str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/MFARevokingTokenVerifyRequest/","text":"MFARevokingTokenVerifyRequest \u00b6 Properties \u00b6 Name Type Description Notes backup_code str [optional] email str [optional] password str [optional] token str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MFARevokingTokenVerifyRequest"},{"location":"api/docs/MFARevokingTokenVerifyRequest/#mfarevokingtokenverifyrequest","text":"","title":"MFARevokingTokenVerifyRequest"},{"location":"api/docs/MFARevokingTokenVerifyRequest/#properties","text":"Name Type Description Notes backup_code str [optional] email str [optional] password str [optional] token str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/MFAStatusOfUseResponse/","text":"MFAStatusOfUseResponse \u00b6 Properties \u00b6 Name Type Description Notes status str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MFAStatusOfUseResponse"},{"location":"api/docs/MFAStatusOfUseResponse/#mfastatusofuseresponse","text":"","title":"MFAStatusOfUseResponse"},{"location":"api/docs/MFAStatusOfUseResponse/#properties","text":"Name Type Description Notes status str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/MappingEntries/","text":"MappingEntries \u00b6 Properties \u00b6 Name Type Description Notes mapping_entries [GlobalSimAppletPLMNRecord] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MappingEntries"},{"location":"api/docs/MappingEntries/#mappingentries","text":"","title":"MappingEntries"},{"location":"api/docs/MappingEntries/#properties","text":"Name Type Description Notes mapping_entries [GlobalSimAppletPLMNRecord] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/MonthlyBill/","text":"MonthlyBill \u00b6 Properties \u00b6 Name Type Description Notes amount int \u91d1\u984d [optional] payment_status str \u76f4\u8fd1\u306e\u8ab2\u91d1\u30b9\u30c6\u30fc\u30bf\u30b9 [optional] payment_transaction_id str \u8ab2\u91d1\u8a73\u7d30\u53d6\u5f97\u7528\u306eID [optional] year_month str \u5e74\u6708 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"MonthlyBill"},{"location":"api/docs/MonthlyBill/#monthlybill","text":"","title":"MonthlyBill"},{"location":"api/docs/MonthlyBill/#properties","text":"Name Type Description Notes amount int \u91d1\u984d [optional] payment_status str \u76f4\u8fd1\u306e\u8ab2\u91d1\u30b9\u30c6\u30fc\u30bf\u30b9 [optional] payment_transaction_id str \u8ab2\u91d1\u8a73\u7d30\u53d6\u5f97\u7528\u306eID [optional] year_month str \u5e74\u6708 [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/NapterAuditLogDirection/","text":"NapterAuditLogDirection \u00b6 Properties \u00b6 Name Type Description Notes destination_ip_address str [optional] destination_port int [optional] source_ip_address str [optional] source_port int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"NapterAuditLogDirection"},{"location":"api/docs/NapterAuditLogDirection/#napterauditlogdirection","text":"","title":"NapterAuditLogDirection"},{"location":"api/docs/NapterAuditLogDirection/#properties","text":"Name Type Description Notes destination_ip_address str [optional] destination_port int [optional] source_ip_address str [optional] source_port int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/NapterAuditLogEntry/","text":"NapterAuditLogEntry \u00b6 Properties \u00b6 Name Type Description Notes connection_id str [optional] created_at int [optional] direction NapterAuditLogDirection [optional] imsi str [optional] is_tls bool [optional] operator_id str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"NapterAuditLogEntry"},{"location":"api/docs/NapterAuditLogEntry/#napterauditlogentry","text":"","title":"NapterAuditLogEntry"},{"location":"api/docs/NapterAuditLogEntry/#properties","text":"Name Type Description Notes connection_id str [optional] created_at int [optional] direction NapterAuditLogDirection [optional] imsi str [optional] is_tls bool [optional] operator_id str [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/NapterAuditLogsExportedDataStatsResponse/","text":"NapterAuditLogsExportedDataStatsResponse \u00b6 Properties \u00b6 Name Type Description Notes exported_bytes int exportedBytes [optional] year_month str yearMonth [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"NapterAuditLogsExportedDataStatsResponse"},{"location":"api/docs/NapterAuditLogsExportedDataStatsResponse/#napterauditlogsexporteddatastatsresponse","text":"","title":"NapterAuditLogsExportedDataStatsResponse"},{"location":"api/docs/NapterAuditLogsExportedDataStatsResponse/#properties","text":"Name Type Description Notes exported_bytes int exportedBytes [optional] year_month str yearMonth [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ObjectInstance/","text":"ObjectInstance \u00b6 Properties \u00b6 Name Type Description Notes id int [optional] observed bool [optional] if omitted the server will use the default value of False resources {str: (ResourceInstance,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ObjectInstance"},{"location":"api/docs/ObjectInstance/#objectinstance","text":"","title":"ObjectInstance"},{"location":"api/docs/ObjectInstance/#properties","text":"Name Type Description Notes id int [optional] observed bool [optional] if omitted the server will use the default value of False resources {str: (ResourceInstance,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/OpenGateRequest/","text":"OpenGateRequest \u00b6 Properties \u00b6 Name Type Description Notes privacy_separator_enabled bool [optional] if omitted the server will use the default value of False vxlan_id int [optional] if omitted the server will use the default value of 10 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"OpenGateRequest"},{"location":"api/docs/OpenGateRequest/#opengaterequest","text":"","title":"OpenGateRequest"},{"location":"api/docs/OpenGateRequest/#properties","text":"Name Type Description Notes privacy_separator_enabled bool [optional] if omitted the server will use the default value of False vxlan_id int [optional] if omitted the server will use the default value of 10 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/OperatorApi/","text":"soracom_api.OperatorApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description add_coverage_type POST /operators/{operator_id}/coverage_type/{coverage_type} Add coverage type. add_operator_contract POST /operators/{operator_id}/contracts Add Operator Contract. create_company_information POST /operators/{operator_id}/company_information Create company information. create_individual_information POST /operators/{operator_id}/individual_information Create individual information. create_operator POST /operators Create Operator. delete_operator_auth_key DELETE /operators/{operator_id}/auth_keys/{auth_key_id} Delete Operator AuthKey. delete_operator_contract DELETE /operators/{operator_id}/contracts/{contract_name} Delete Operator Contract. enable_mfa POST /operators/{operator_id}/mfa Enable Operator's MFA. generate_auth_token POST /operators/{operator_id}/token Generate Authentication Token. generate_operator_auth_key POST /operators/{operator_id}/auth_keys Generate Operator AuthKey. generate_support_token POST /operators/{operator_id}/support/token Generate Token for Support Console. get_company_information GET /operators/{operator_id}/company_information Get company information. get_individual_information GET /operators/{operator_id}/individual_information Get individual information. get_mfa_status GET /operators/{operator_id}/mfa Get Operator's MFA Status. get_operator GET /operators/{operator_id} Get Operator. issue_mfa_revoking_token POST /operators/mfa_revoke_token/issue Issue Operator's MFA Revoke Token. list_operator_auth_keys GET /operators/{operator_id}/auth_keys List Operator AuthKeys. revoke_mfa DELETE /operators/{operator_id}/mfa Revoke Operator's MFA. update_company_information PUT /operators/{operator_id}/company_information Update company information. update_individual_information PUT /operators/{operator_id}/individual_information Update individual information. update_operator_password POST /operators/{operator_id}/password Update Operator Password. verify_mfa POST /operators/{operator_id}/mfa/verify Verify Operator's MFA OTP Code. verify_mfa_revoking_token POST /operators/mfa_revoke_token/verify Verify Operator's MFA revoke token. verify_operator POST /operators/verify Verify Operator. add_coverage_type \u00b6 add_coverage_type(operator_id, coverage_type) Add coverage type. Adds the operator's coverage type. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id coverage_type = \"coverage_type_example\" # str | coverage_type # example passing only required values which don't have defaults set try: # Add coverage type. api_instance.add_coverage_type(operator_id, coverage_type) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->add_coverage_type: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id coverage_type str coverage_type Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] add_operator_contract \u00b6 ContractUpdatedResponse add_operator_contract(operator_id, contract_updating_request) Add Operator Contract. Adds the operator's contract. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.contract_updating_request import ContractUpdatingRequest from soracom_api.model.contract_updated_response import ContractUpdatedResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id contract_updating_request = ContractUpdatingRequest( contract_detail={}, contract_name=\"contract_name_example\", ) # ContractUpdatingRequest | model # example passing only required values which don't have defaults set try: # Add Operator Contract. api_response = api_instance.add_operator_contract(operator_id, contract_updating_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->add_operator_contract: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id contract_updating_request ContractUpdatingRequest model Return type \u00b6 ContractUpdatedResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_company_information \u00b6 create_company_information(operator_id, company_information_model) Create company information. Creates the operator's company information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id company_information_model = CompanyInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", contact_person_name=\"contact_person_name_example\", country_code=\"country_code_example\", department=\"department_example\", phone_number=\"phone_number_example\", state=\"state_example\", vat_identification_number=\"vat_identification_number_example\", zip_code=\"zip_code_example\", ) # CompanyInformationModel | model # example passing only required values which don't have defaults set try: # Create company information. api_instance.create_company_information(operator_id, company_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_company_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id company_information_model CompanyInformationModel model Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_individual_information \u00b6 create_individual_information(operator_id, individual_information_model) Create individual information. Creates the operator's individual information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id individual_information_model = IndividualInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", country_code=\"country_code_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # IndividualInformationModel | model # example passing only required values which don't have defaults set try: # Create individual information. api_instance.create_individual_information(operator_id, individual_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_individual_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id individual_information_model IndividualInformationModel model Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_operator \u00b6 create_operator(register_operators_request) Create Operator. Makes a request to create a new operator. An e-mail is sent to the e-mail address specified in the parameters, containing a one-time token for verifying the operator\u2019s registration. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.register_operators_request import RegisterOperatorsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) register_operators_request = RegisterOperatorsRequest( email=\"email_example\", password=\"password_example\", ) # RegisterOperatorsRequest | email, password # example passing only required values which don't have defaults set try: # Create Operator. api_instance.create_operator(register_operators_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_operator: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes register_operators_request RegisterOperatorsRequest email, password Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Operator created. - 400 The e-mail address is already registered or the password has an incorrect format. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_operator_auth_key \u00b6 delete_operator_auth_key(operator_id, auth_key_id) Delete Operator AuthKey. Deletes an AuthKey from the operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Delete Operator AuthKey. api_instance.delete_operator_auth_key(operator_id, auth_key_id) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->delete_operator_auth_key: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id auth_key_id str auth_key_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 AuthKey was deleted. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_operator_contract \u00b6 delete_operator_contract(operator_id, contract_name) Delete Operator Contract. Deletes the operator's contract. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id contract_name = \"contract_name_example\" # str | contract_name # example passing only required values which don't have defaults set try: # Delete Operator Contract. api_instance.delete_operator_contract(operator_id, contract_name) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->delete_operator_contract: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id contract_name str contract_name Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 No Content. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_mfa \u00b6 EnableMFAOTPResponse enable_mfa(operator_id) Enable Operator's MFA. Enables operator's MFA. After calling this APIg, it should be verified by calling Operator:verifyMFA API. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.enable_mfaotp_response import EnableMFAOTPResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Enable Operator's MFA. api_response = api_instance.enable_mfa(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->enable_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 EnableMFAOTPResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] generate_auth_token \u00b6 GenerateTokenResponse generate_auth_token(operator_id, generate_token_request) Generate Authentication Token. Generates a new API token. If you insert the current API token into the header and make a request, a response is returned containing the new API token. You can then use the new API token in future requests. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.generate_token_response import GenerateTokenResponse from soracom_api.model.generate_token_request import GenerateTokenRequest from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id generate_token_request = GenerateTokenRequest( token_timeout_seconds=86400, ) # GenerateTokenRequest | token timeout seconds # example passing only required values which don't have defaults set try: # Generate Authentication Token. api_response = api_instance.generate_auth_token(operator_id, generate_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_auth_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id generate_token_request GenerateTokenRequest token timeout seconds Return type \u00b6 GenerateTokenResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 There was an error in the request or the specified token has already expired. (In the latter case, you will need to use the /auth API to do authentication once again.) - [Back to top] [Back to API list] [Back to Model list] [Back to README] generate_operator_auth_key \u00b6 GenerateOperatorsAuthKeyResponse generate_operator_auth_key(operator_id) Generate Operator AuthKey. Generates an AuthKey for the operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.generate_operators_auth_key_response import GenerateOperatorsAuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Generate Operator AuthKey. api_response = api_instance.generate_operator_auth_key(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_operator_auth_key: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 GenerateOperatorsAuthKeyResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 AuthKey was generated. - [Back to top] [Back to API list] [Back to Model list] [Back to README] generate_support_token \u00b6 SupportTokenResponse generate_support_token(operator_id) Generate Token for Support Console. Returns a token for accessing the support console. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.support_token_response import SupportTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Generate Token for Support Console. api_response = api_instance.generate_support_token(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_support_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 SupportTokenResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid Operator Id - 403 Invalid token. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_company_information \u00b6 CompanyInformationModel get_company_information(operator_id) Get company information. Gets the operator's company information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get company information. api_response = api_instance.get_company_information(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_company_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 CompanyInformationModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_individual_information \u00b6 IndividualInformationModel get_individual_information(operator_id) Get individual information. Gets the operator's individual information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get individual information. api_response = api_instance.get_individual_information(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_individual_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 IndividualInformationModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_mfa_status \u00b6 MFAStatusOfUseResponse get_mfa_status(operator_id) Get Operator's MFA Status. Gets operator's MFA status. The MFA status is one of ACTIVE , INACTIVE or UNCONFIRMED . Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_status_of_use_response import MFAStatusOfUseResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get Operator's MFA Status. api_response = api_instance.get_mfa_status(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_mfa_status: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 MFAStatusOfUseResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_operator \u00b6 GetOperatorResponse get_operator(operator_id) Get Operator. Returns information about the operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.get_operator_response import GetOperatorResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get Operator. api_response = api_instance.get_operator(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_operator: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 GetOperatorResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid Operator Id - [Back to top] [Back to API list] [Back to Model list] [Back to README] issue_mfa_revoking_token \u00b6 issue_mfa_revoking_token(mfa_issue_revoking_token_request) Issue Operator's MFA Revoke Token. Issues a token to revoke operator's MFA. The issued token will be sent to the operator via email. Example \u00b6 import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_issue_revoking_token_request import MFAIssueRevokingTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) mfa_issue_revoking_token_request = MFAIssueRevokingTokenRequest( email=\"email_example\", password=\"password_example\", ) # MFAIssueRevokingTokenRequest | request # example passing only required values which don't have defaults set try: # Issue Operator's MFA Revoke Token. api_instance.issue_mfa_revoking_token(mfa_issue_revoking_token_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->issue_mfa_revoking_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes mfa_issue_revoking_token_request MFAIssueRevokingTokenRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - 404 Operator not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_operator_auth_keys \u00b6 [AuthKeyResponse] list_operator_auth_keys(operator_id) List Operator AuthKeys. Returns the operator's AuthKey list. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Operator AuthKeys. api_response = api_instance.list_operator_auth_keys(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->list_operator_auth_keys: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 [AuthKeyResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] revoke_mfa \u00b6 revoke_mfa(operator_id) Revoke Operator's MFA. Revokes operator's MFA without backup codes. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Revoke Operator's MFA. api_instance.revoke_mfa(operator_id) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->revoke_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Revoked - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_company_information \u00b6 update_company_information(operator_id, company_information_model) Update company information. Updates the operator's company information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id company_information_model = CompanyInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", contact_person_name=\"contact_person_name_example\", country_code=\"country_code_example\", department=\"department_example\", phone_number=\"phone_number_example\", state=\"state_example\", vat_identification_number=\"vat_identification_number_example\", zip_code=\"zip_code_example\", ) # CompanyInformationModel | model # example passing only required values which don't have defaults set try: # Update company information. api_instance.update_company_information(operator_id, company_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_company_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id company_information_model CompanyInformationModel model Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_individual_information \u00b6 update_individual_information(operator_id, individual_information_model) Update individual information. Updates the operator's individual information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id individual_information_model = IndividualInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", country_code=\"country_code_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # IndividualInformationModel | model # example passing only required values which don't have defaults set try: # Update individual information. api_instance.update_individual_information(operator_id, individual_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_individual_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id individual_information_model IndividualInformationModel model Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_operator_password \u00b6 update_operator_password(operator_id, update_password_request) Update Operator Password. Updates the operator's password. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.update_password_request import UpdatePasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id update_password_request = UpdatePasswordRequest( current_password=\"current_password_example\", new_password=\"new_password_example\", ) # UpdatePasswordRequest | current password, new password # example passing only required values which don't have defaults set try: # Update Operator Password. api_instance.update_operator_password(operator_id, update_password_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_operator_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id update_password_request UpdatePasswordRequest current password, new password Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid password. - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_mfa \u00b6 OperatorMFAVerifyingResponse verify_mfa(operator_id, mfa_authentication_request) Verify Operator's MFA OTP Code. Verifies operator's MFA with OTP code after calling Operator:enableMFA API. MFA will not be activated unless the MFA OTP is verified with this API. Backup codes are going to be returned in the response. These codes must be securely stored. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_authentication_request import MFAAuthenticationRequest from soracom_api.model.operator_mfa_verifying_response import OperatorMFAVerifyingResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id mfa_authentication_request = MFAAuthenticationRequest( mfa_otp_code=\"mfa_otp_code_example\", ) # MFAAuthenticationRequest | request # example passing only required values which don't have defaults set try: # Verify Operator's MFA OTP Code. api_response = api_instance.verify_mfa(operator_id, mfa_authentication_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id mfa_authentication_request MFAAuthenticationRequest request Return type \u00b6 OperatorMFAVerifyingResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_mfa_revoking_token \u00b6 verify_mfa_revoking_token(mfa_revoking_token_verify_request) Verify Operator's MFA revoke token. Verifies the one-time token which is previously issued by calling /operators/mfa_revoke_token/issue API, operator's email address, password, and one of the backup codes. If verified, operator's MFA is going to be revoked. Example \u00b6 import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_revoking_token_verify_request import MFARevokingTokenVerifyRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) mfa_revoking_token_verify_request = MFARevokingTokenVerifyRequest( backup_code=\"backup_code_example\", email=\"email_example\", password=\"password_example\", token=\"token_example\", ) # MFARevokingTokenVerifyRequest | request # example passing only required values which don't have defaults set try: # Verify Operator's MFA revoke token. api_instance.verify_mfa_revoking_token(mfa_revoking_token_verify_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_mfa_revoking_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes mfa_revoking_token_verify_request MFARevokingTokenVerifyRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Revoked - 400 Bad request - 403 Invalid username or password - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_operator \u00b6 verify_operator(verify_operators_request) Verify Operator. Verifies the operator's registration. Called by setting as parameter the one-time verification token received via e-mail. Example \u00b6 import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.verify_operators_request import VerifyOperatorsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) verify_operators_request = VerifyOperatorsRequest( token=\"token_example\", ) # VerifyOperatorsRequest | token # example passing only required values which don't have defaults set try: # Verify Operator. api_instance.verify_operator(verify_operators_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_operator: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes verify_operators_request VerifyOperatorsRequest token Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Registration successful. - 400 The one-time token is incorrect. - 404 The one-time token has expired. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.OperatorApi"},{"location":"api/docs/OperatorApi/#soracom_apioperatorapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description add_coverage_type POST /operators/{operator_id}/coverage_type/{coverage_type} Add coverage type. add_operator_contract POST /operators/{operator_id}/contracts Add Operator Contract. create_company_information POST /operators/{operator_id}/company_information Create company information. create_individual_information POST /operators/{operator_id}/individual_information Create individual information. create_operator POST /operators Create Operator. delete_operator_auth_key DELETE /operators/{operator_id}/auth_keys/{auth_key_id} Delete Operator AuthKey. delete_operator_contract DELETE /operators/{operator_id}/contracts/{contract_name} Delete Operator Contract. enable_mfa POST /operators/{operator_id}/mfa Enable Operator's MFA. generate_auth_token POST /operators/{operator_id}/token Generate Authentication Token. generate_operator_auth_key POST /operators/{operator_id}/auth_keys Generate Operator AuthKey. generate_support_token POST /operators/{operator_id}/support/token Generate Token for Support Console. get_company_information GET /operators/{operator_id}/company_information Get company information. get_individual_information GET /operators/{operator_id}/individual_information Get individual information. get_mfa_status GET /operators/{operator_id}/mfa Get Operator's MFA Status. get_operator GET /operators/{operator_id} Get Operator. issue_mfa_revoking_token POST /operators/mfa_revoke_token/issue Issue Operator's MFA Revoke Token. list_operator_auth_keys GET /operators/{operator_id}/auth_keys List Operator AuthKeys. revoke_mfa DELETE /operators/{operator_id}/mfa Revoke Operator's MFA. update_company_information PUT /operators/{operator_id}/company_information Update company information. update_individual_information PUT /operators/{operator_id}/individual_information Update individual information. update_operator_password POST /operators/{operator_id}/password Update Operator Password. verify_mfa POST /operators/{operator_id}/mfa/verify Verify Operator's MFA OTP Code. verify_mfa_revoking_token POST /operators/mfa_revoke_token/verify Verify Operator's MFA revoke token. verify_operator POST /operators/verify Verify Operator.","title":"soracom_api.OperatorApi"},{"location":"api/docs/OperatorApi/#add_coverage_type","text":"add_coverage_type(operator_id, coverage_type) Add coverage type. Adds the operator's coverage type.","title":"add_coverage_type"},{"location":"api/docs/OperatorApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id coverage_type = \"coverage_type_example\" # str | coverage_type # example passing only required values which don't have defaults set try: # Add coverage type. api_instance.add_coverage_type(operator_id, coverage_type) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->add_coverage_type: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters","text":"Name Type Description Notes operator_id str operator_id coverage_type str coverage_type","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details","text":"Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#add_operator_contract","text":"ContractUpdatedResponse add_operator_contract(operator_id, contract_updating_request) Add Operator Contract. Adds the operator's contract.","title":"add_operator_contract"},{"location":"api/docs/OperatorApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.contract_updating_request import ContractUpdatingRequest from soracom_api.model.contract_updated_response import ContractUpdatedResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id contract_updating_request = ContractUpdatingRequest( contract_detail={}, contract_name=\"contract_name_example\", ) # ContractUpdatingRequest | model # example passing only required values which don't have defaults set try: # Add Operator Contract. api_response = api_instance.add_operator_contract(operator_id, contract_updating_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->add_operator_contract: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id contract_updating_request ContractUpdatingRequest model","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_1","text":"ContractUpdatedResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#create_company_information","text":"create_company_information(operator_id, company_information_model) Create company information. Creates the operator's company information.","title":"create_company_information"},{"location":"api/docs/OperatorApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id company_information_model = CompanyInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", contact_person_name=\"contact_person_name_example\", country_code=\"country_code_example\", department=\"department_example\", phone_number=\"phone_number_example\", state=\"state_example\", vat_identification_number=\"vat_identification_number_example\", zip_code=\"zip_code_example\", ) # CompanyInformationModel | model # example passing only required values which don't have defaults set try: # Create company information. api_instance.create_company_information(operator_id, company_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_company_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_2","text":"Name Type Description Notes operator_id str operator_id company_information_model CompanyInformationModel model","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_2","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_2","text":"Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#create_individual_information","text":"create_individual_information(operator_id, individual_information_model) Create individual information. Creates the operator's individual information.","title":"create_individual_information"},{"location":"api/docs/OperatorApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id individual_information_model = IndividualInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", country_code=\"country_code_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # IndividualInformationModel | model # example passing only required values which don't have defaults set try: # Create individual information. api_instance.create_individual_information(operator_id, individual_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_individual_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id individual_information_model IndividualInformationModel model","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_3","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_3","text":"Status code Description Response headers 201 Created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#create_operator","text":"create_operator(register_operators_request) Create Operator. Makes a request to create a new operator. An e-mail is sent to the e-mail address specified in the parameters, containing a one-time token for verifying the operator\u2019s registration.","title":"create_operator"},{"location":"api/docs/OperatorApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.register_operators_request import RegisterOperatorsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) register_operators_request = RegisterOperatorsRequest( email=\"email_example\", password=\"password_example\", ) # RegisterOperatorsRequest | email, password # example passing only required values which don't have defaults set try: # Create Operator. api_instance.create_operator(register_operators_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->create_operator: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_4","text":"Name Type Description Notes register_operators_request RegisterOperatorsRequest email, password","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_4","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_4","text":"Status code Description Response headers 201 Operator created. - 400 The e-mail address is already registered or the password has an incorrect format. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#delete_operator_auth_key","text":"delete_operator_auth_key(operator_id, auth_key_id) Delete Operator AuthKey. Deletes an AuthKey from the operator.","title":"delete_operator_auth_key"},{"location":"api/docs/OperatorApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Delete Operator AuthKey. api_instance.delete_operator_auth_key(operator_id, auth_key_id) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->delete_operator_auth_key: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_5","text":"Name Type Description Notes operator_id str operator_id auth_key_id str auth_key_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_5","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_5","text":"Status code Description Response headers 204 AuthKey was deleted. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#delete_operator_contract","text":"delete_operator_contract(operator_id, contract_name) Delete Operator Contract. Deletes the operator's contract.","title":"delete_operator_contract"},{"location":"api/docs/OperatorApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id contract_name = \"contract_name_example\" # str | contract_name # example passing only required values which don't have defaults set try: # Delete Operator Contract. api_instance.delete_operator_contract(operator_id, contract_name) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->delete_operator_contract: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_6","text":"Name Type Description Notes operator_id str operator_id contract_name str contract_name","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_6","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_6","text":"Status code Description Response headers 204 No Content. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#enable_mfa","text":"EnableMFAOTPResponse enable_mfa(operator_id) Enable Operator's MFA. Enables operator's MFA. After calling this APIg, it should be verified by calling Operator:verifyMFA API.","title":"enable_mfa"},{"location":"api/docs/OperatorApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.enable_mfaotp_response import EnableMFAOTPResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Enable Operator's MFA. api_response = api_instance.enable_mfa(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->enable_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_7","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_7","text":"EnableMFAOTPResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_7","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#generate_auth_token","text":"GenerateTokenResponse generate_auth_token(operator_id, generate_token_request) Generate Authentication Token. Generates a new API token. If you insert the current API token into the header and make a request, a response is returned containing the new API token. You can then use the new API token in future requests.","title":"generate_auth_token"},{"location":"api/docs/OperatorApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.generate_token_response import GenerateTokenResponse from soracom_api.model.generate_token_request import GenerateTokenRequest from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id generate_token_request = GenerateTokenRequest( token_timeout_seconds=86400, ) # GenerateTokenRequest | token timeout seconds # example passing only required values which don't have defaults set try: # Generate Authentication Token. api_response = api_instance.generate_auth_token(operator_id, generate_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_auth_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_8","text":"Name Type Description Notes operator_id str operator_id generate_token_request GenerateTokenRequest token timeout seconds","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_8","text":"GenerateTokenResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_8","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_8","text":"Status code Description Response headers 200 OK. - 400 There was an error in the request or the specified token has already expired. (In the latter case, you will need to use the /auth API to do authentication once again.) - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#generate_operator_auth_key","text":"GenerateOperatorsAuthKeyResponse generate_operator_auth_key(operator_id) Generate Operator AuthKey. Generates an AuthKey for the operator.","title":"generate_operator_auth_key"},{"location":"api/docs/OperatorApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.generate_operators_auth_key_response import GenerateOperatorsAuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Generate Operator AuthKey. api_response = api_instance.generate_operator_auth_key(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_operator_auth_key: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_9","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_9","text":"GenerateOperatorsAuthKeyResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_9","text":"Status code Description Response headers 201 AuthKey was generated. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#generate_support_token","text":"SupportTokenResponse generate_support_token(operator_id) Generate Token for Support Console. Returns a token for accessing the support console.","title":"generate_support_token"},{"location":"api/docs/OperatorApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.support_token_response import SupportTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Generate Token for Support Console. api_response = api_instance.generate_support_token(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->generate_support_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_10","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_10","text":"SupportTokenResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_10","text":"Status code Description Response headers 200 OK. - 400 Invalid Operator Id - 403 Invalid token. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#get_company_information","text":"CompanyInformationModel get_company_information(operator_id) Get company information. Gets the operator's company information.","title":"get_company_information"},{"location":"api/docs/OperatorApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get company information. api_response = api_instance.get_company_information(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_company_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_11","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_11","text":"CompanyInformationModel","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_11","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#get_individual_information","text":"IndividualInformationModel get_individual_information(operator_id) Get individual information. Gets the operator's individual information.","title":"get_individual_information"},{"location":"api/docs/OperatorApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get individual information. api_response = api_instance.get_individual_information(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_individual_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_12","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_12","text":"IndividualInformationModel","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_12","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#get_mfa_status","text":"MFAStatusOfUseResponse get_mfa_status(operator_id) Get Operator's MFA Status. Gets operator's MFA status. The MFA status is one of ACTIVE , INACTIVE or UNCONFIRMED .","title":"get_mfa_status"},{"location":"api/docs/OperatorApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_status_of_use_response import MFAStatusOfUseResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get Operator's MFA Status. api_response = api_instance.get_mfa_status(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_mfa_status: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_13","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_13","text":"MFAStatusOfUseResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_13","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#get_operator","text":"GetOperatorResponse get_operator(operator_id) Get Operator. Returns information about the operator.","title":"get_operator"},{"location":"api/docs/OperatorApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.get_operator_response import GetOperatorResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Get Operator. api_response = api_instance.get_operator(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->get_operator: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_14","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_14","text":"GetOperatorResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_14","text":"Status code Description Response headers 200 OK. - 400 Invalid Operator Id - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#issue_mfa_revoking_token","text":"issue_mfa_revoking_token(mfa_issue_revoking_token_request) Issue Operator's MFA Revoke Token. Issues a token to revoke operator's MFA. The issued token will be sent to the operator via email.","title":"issue_mfa_revoking_token"},{"location":"api/docs/OperatorApi/#example_15","text":"import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_issue_revoking_token_request import MFAIssueRevokingTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) mfa_issue_revoking_token_request = MFAIssueRevokingTokenRequest( email=\"email_example\", password=\"password_example\", ) # MFAIssueRevokingTokenRequest | request # example passing only required values which don't have defaults set try: # Issue Operator's MFA Revoke Token. api_instance.issue_mfa_revoking_token(mfa_issue_revoking_token_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->issue_mfa_revoking_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_15","text":"Name Type Description Notes mfa_issue_revoking_token_request MFAIssueRevokingTokenRequest request","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_15","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_15","text":"No authorization required","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_15","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_15","text":"Status code Description Response headers 200 OK - 400 Bad request - 404 Operator not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#list_operator_auth_keys","text":"[AuthKeyResponse] list_operator_auth_keys(operator_id) List Operator AuthKeys. Returns the operator's AuthKey list.","title":"list_operator_auth_keys"},{"location":"api/docs/OperatorApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Operator AuthKeys. api_response = api_instance.list_operator_auth_keys(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->list_operator_auth_keys: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_16","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_16","text":"[AuthKeyResponse]","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_16","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_16","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#revoke_mfa","text":"revoke_mfa(operator_id) Revoke Operator's MFA. Revokes operator's MFA without backup codes.","title":"revoke_mfa"},{"location":"api/docs/OperatorApi/#example_17","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Revoke Operator's MFA. api_instance.revoke_mfa(operator_id) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->revoke_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_17","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_17","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_17","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_17","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_17","text":"Status code Description Response headers 204 Revoked - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#update_company_information","text":"update_company_information(operator_id, company_information_model) Update company information. Updates the operator's company information.","title":"update_company_information"},{"location":"api/docs/OperatorApi/#example_18","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.company_information_model import CompanyInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id company_information_model = CompanyInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", contact_person_name=\"contact_person_name_example\", country_code=\"country_code_example\", department=\"department_example\", phone_number=\"phone_number_example\", state=\"state_example\", vat_identification_number=\"vat_identification_number_example\", zip_code=\"zip_code_example\", ) # CompanyInformationModel | model # example passing only required values which don't have defaults set try: # Update company information. api_instance.update_company_information(operator_id, company_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_company_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_18","text":"Name Type Description Notes operator_id str operator_id company_information_model CompanyInformationModel model","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_18","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_18","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_18","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_18","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#update_individual_information","text":"update_individual_information(operator_id, individual_information_model) Update individual information. Updates the operator's individual information.","title":"update_individual_information"},{"location":"api/docs/OperatorApi/#example_19","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.individual_information_model import IndividualInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id individual_information_model = IndividualInformationModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", country_code=\"country_code_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # IndividualInformationModel | model # example passing only required values which don't have defaults set try: # Update individual information. api_instance.update_individual_information(operator_id, individual_information_model) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_individual_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_19","text":"Name Type Description Notes operator_id str operator_id individual_information_model IndividualInformationModel model","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_19","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_19","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_19","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_19","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#update_operator_password","text":"update_operator_password(operator_id, update_password_request) Update Operator Password. Updates the operator's password.","title":"update_operator_password"},{"location":"api/docs/OperatorApi/#example_20","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.update_password_request import UpdatePasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id update_password_request = UpdatePasswordRequest( current_password=\"current_password_example\", new_password=\"new_password_example\", ) # UpdatePasswordRequest | current password, new password # example passing only required values which don't have defaults set try: # Update Operator Password. api_instance.update_operator_password(operator_id, update_password_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->update_operator_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_20","text":"Name Type Description Notes operator_id str operator_id update_password_request UpdatePasswordRequest current password, new password","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_20","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_20","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_20","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_20","text":"Status code Description Response headers 200 OK. - 400 Invalid password. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#verify_mfa","text":"OperatorMFAVerifyingResponse verify_mfa(operator_id, mfa_authentication_request) Verify Operator's MFA OTP Code. Verifies operator's MFA with OTP code after calling Operator:enableMFA API. MFA will not be activated unless the MFA OTP is verified with this API. Backup codes are going to be returned in the response. These codes must be securely stored.","title":"verify_mfa"},{"location":"api/docs/OperatorApi/#example_21","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_authentication_request import MFAAuthenticationRequest from soracom_api.model.operator_mfa_verifying_response import OperatorMFAVerifyingResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id mfa_authentication_request = MFAAuthenticationRequest( mfa_otp_code=\"mfa_otp_code_example\", ) # MFAAuthenticationRequest | request # example passing only required values which don't have defaults set try: # Verify Operator's MFA OTP Code. api_response = api_instance.verify_mfa(operator_id, mfa_authentication_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_21","text":"Name Type Description Notes operator_id str operator_id mfa_authentication_request MFAAuthenticationRequest request","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_21","text":"OperatorMFAVerifyingResponse","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_21","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_21","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_21","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#verify_mfa_revoking_token","text":"verify_mfa_revoking_token(mfa_revoking_token_verify_request) Verify Operator's MFA revoke token. Verifies the one-time token which is previously issued by calling /operators/mfa_revoke_token/issue API, operator's email address, password, and one of the backup codes. If verified, operator's MFA is going to be revoked.","title":"verify_mfa_revoking_token"},{"location":"api/docs/OperatorApi/#example_22","text":"import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.mfa_revoking_token_verify_request import MFARevokingTokenVerifyRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) mfa_revoking_token_verify_request = MFARevokingTokenVerifyRequest( backup_code=\"backup_code_example\", email=\"email_example\", password=\"password_example\", token=\"token_example\", ) # MFARevokingTokenVerifyRequest | request # example passing only required values which don't have defaults set try: # Verify Operator's MFA revoke token. api_instance.verify_mfa_revoking_token(mfa_revoking_token_verify_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_mfa_revoking_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_22","text":"Name Type Description Notes mfa_revoking_token_verify_request MFARevokingTokenVerifyRequest request","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_22","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_22","text":"No authorization required","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_22","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_22","text":"Status code Description Response headers 200 Revoked - 400 Bad request - 403 Invalid username or password - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorApi/#verify_operator","text":"verify_operator(verify_operators_request) Verify Operator. Verifies the operator's registration. Called by setting as parameter the one-time verification token received via e-mail.","title":"verify_operator"},{"location":"api/docs/OperatorApi/#example_23","text":"import time import soracom_api from soracom_api.api import operator_api from soracom_api.model.verify_operators_request import VerifyOperatorsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_api.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) verify_operators_request = VerifyOperatorsRequest( token=\"token_example\", ) # VerifyOperatorsRequest | token # example passing only required values which don't have defaults set try: # Verify Operator. api_instance.verify_operator(verify_operators_request) except soracom_api.ApiException as e: print(\"Exception when calling OperatorApi->verify_operator: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OperatorApi/#parameters_23","text":"Name Type Description Notes verify_operators_request VerifyOperatorsRequest token","title":"Parameters"},{"location":"api/docs/OperatorApi/#return-type_23","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OperatorApi/#authorization_23","text":"No authorization required","title":"Authorization"},{"location":"api/docs/OperatorApi/#http-request-headers_23","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OperatorApi/#http-response-details_23","text":"Status code Description Response headers 200 Registration successful. - 400 The one-time token is incorrect. - 404 The one-time token has expired. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OperatorMFAVerifyingResponse/","text":"OperatorMFAVerifyingResponse \u00b6 Properties \u00b6 Name Type Description Notes backup_codes [str] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"OperatorMFAVerifyingResponse"},{"location":"api/docs/OperatorMFAVerifyingResponse/#operatormfaverifyingresponse","text":"","title":"OperatorMFAVerifyingResponse"},{"location":"api/docs/OperatorMFAVerifyingResponse/#properties","text":"Name Type Description Notes backup_codes [str] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/OrderApi/","text":"soracom_api.OrderApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description cancel_order PUT /orders/{order_id}/cancel Cancel order. confirm_coupon_order PUT /coupons/{order_id}/confirm Confirm coupon order. confirm_order PUT /orders/{order_id}/confirm Confirm order. confirm_volume_discount_order PUT /volume_discounts/{order_id}/confirm Confirm long term discount order. create_coupon_quotation POST /coupons Create coupon quotation. create_quotation POST /orders Create Quotation. create_volume_discount_quotation POST /volume_discounts Create long term discount quotation. get_order GET /orders/{order_id} Get confirmed order. list_available_discounts GET /volume_discounts/available_discounts List available long term discounts. list_ordered_subscribers GET /orders/{order_id}/subscribers List ordered subscribers. list_orders GET /orders List confirmed orders. list_products GET /products List products. register_ordered_sim POST /orders/{order_id}/subscribers/register Register subscribers for operator. cancel_order \u00b6 str cancel_order(order_id) Cancel order. Cancels an order. If the order has already been dispatched, an error is returned. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Cancel order. api_response = api_instance.cancel_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->cancel_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 str Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 204 The order was cancelled. - [Back to top] [Back to API list] [Back to Model list] [Back to README] confirm_coupon_order \u00b6 CouponResponse confirm_coupon_order(order_id) Confirm coupon order. Performs a credit limit and confirms the order if no problems are encountered. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.coupon_response import CouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm coupon order. api_response = api_instance.confirm_coupon_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_coupon_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 CouponResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] confirm_order \u00b6 confirm_order(order_id) Confirm order. Performs a credit limit and confirms the order if no problems are encountered. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm order. api_instance.confirm_order(order_id) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] confirm_volume_discount_order \u00b6 GetVolumeDiscountResponse confirm_volume_discount_order(order_id) Confirm long term discount order. Performs a credit limit and confirms the order if no problems are encountered. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.get_volume_discount_response import GetVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm long term discount order. api_response = api_instance.confirm_volume_discount_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_volume_discount_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 GetVolumeDiscountResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_coupon_quotation \u00b6 EstimatedCouponModel create_coupon_quotation(create_estimated_coupon_request) Create coupon quotation. Creates a new coupon quotation. If the orderId is put in /confirm, the order is complete. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.create_estimated_coupon_request import CreateEstimatedCouponRequest from soracom_api.model.estimated_coupon_model import EstimatedCouponModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_coupon_request = CreateEstimatedCouponRequest( amount=3.14, ) # CreateEstimatedCouponRequest | Coupon details # example passing only required values which don't have defaults set try: # Create coupon quotation. api_response = api_instance.create_coupon_quotation(create_estimated_coupon_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_coupon_quotation: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_estimated_coupon_request CreateEstimatedCouponRequest Coupon details Return type \u00b6 EstimatedCouponModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_quotation \u00b6 EstimatedOrderModel create_quotation(create_estimated_order_request) Create Quotation. Creates a new order quotation. If the orderId is put in /confirm, the order is complete. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.estimated_order_model import EstimatedOrderModel from soracom_api.model.create_estimated_order_request import CreateEstimatedOrderRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_order_request = CreateEstimatedOrderRequest( order_item_list=[ OrderItemModel( product_code=\"product_code_example\", quantity=1, ), ], shipping_address_id=\"shipping_address_id_example\", ) # CreateEstimatedOrderRequest | Order item list and shipping address ID # example passing only required values which don't have defaults set try: # Create Quotation. api_response = api_instance.create_quotation(create_estimated_order_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_quotation: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_estimated_order_request CreateEstimatedOrderRequest Order item list and shipping address ID Return type \u00b6 EstimatedOrderModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 A new order quotation was created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_volume_discount_quotation \u00b6 EstimatedVolumeDiscountModel create_volume_discount_quotation(create_estimated_volume_discount_request) Create long term discount quotation. Creates a new long term discount quotation. If the orderId is put in /confirm, the order is complete. (Currently, long term discount is only applied to plan-D, plan-K) Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.create_estimated_volume_discount_request import CreateEstimatedVolumeDiscountRequest from soracom_api.model.estimated_volume_discount_model import EstimatedVolumeDiscountModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_volume_discount_request = CreateEstimatedVolumeDiscountRequest( contract_term_month=12, quantity=1, start_date=\"yyyyMMdd\", volume_discount_payment_type=\"MONTHLY\", volume_discount_type=\"SORACOM_AIR_BASIC_CHARGE_V2\", ) # CreateEstimatedVolumeDiscountRequest | Long term discount contract details # example passing only required values which don't have defaults set try: # Create long term discount quotation. api_response = api_instance.create_volume_discount_quotation(create_estimated_volume_discount_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_volume_discount_quotation: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_estimated_volume_discount_request CreateEstimatedVolumeDiscountRequest Long term discount contract details Return type \u00b6 EstimatedVolumeDiscountModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_order \u00b6 GetOrderResponse get_order(order_id) Get confirmed order. Returns a confirmed order. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.get_order_response import GetOrderResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Get confirmed order. api_response = api_instance.get_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->get_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 GetOrderResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_available_discounts \u00b6 AvailableLongTermDiscountResponse list_available_discounts() List available long term discounts. Returns a list of available long term discounts. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.available_long_term_discount_response import AvailableLongTermDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List available long term discounts. api_response = api_instance.list_available_discounts() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_available_discounts: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 AvailableLongTermDiscountResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_ordered_subscribers \u00b6 ListOrderedSubscriberResponse list_ordered_subscribers(order_id) List ordered subscribers. List ordered subscribers Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_ordered_subscriber_response import ListOrderedSubscriberResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id last_evaluated_key = \"last_evaluated_key_example\" # str | Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. (optional) limit = 1 # int | Max number of subscribers in a response. (optional) # example passing only required values which don't have defaults set try: # List ordered subscribers. api_response = api_instance.list_ordered_subscribers(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_ordered_subscribers: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List ordered subscribers. api_response = api_instance.list_ordered_subscribers(order_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_ordered_subscribers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id last_evaluated_key str Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. [optional] limit int Max number of subscribers in a response. [optional] Return type \u00b6 ListOrderedSubscriberResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_orders \u00b6 ListOrderResponse list_orders() List confirmed orders. Returns a list of confirmed orders. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_order_response import ListOrderResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List confirmed orders. api_response = api_instance.list_orders() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_orders: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ListOrderResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_products \u00b6 ListProductResponse list_products() List products. Returns a list of products. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_product_response import ListProductResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List products. api_response = api_instance.list_products() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_products: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ListProductResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_ordered_sim \u00b6 str register_ordered_sim(order_id) Register subscribers for operator. Registers the ordered SIM with the operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Register subscribers for operator. api_response = api_instance.register_ordered_sim(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->register_ordered_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes order_id str order_id Return type \u00b6 str Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 204 Subscribers were registered for the operator. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.OrderApi"},{"location":"api/docs/OrderApi/#soracom_apiorderapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description cancel_order PUT /orders/{order_id}/cancel Cancel order. confirm_coupon_order PUT /coupons/{order_id}/confirm Confirm coupon order. confirm_order PUT /orders/{order_id}/confirm Confirm order. confirm_volume_discount_order PUT /volume_discounts/{order_id}/confirm Confirm long term discount order. create_coupon_quotation POST /coupons Create coupon quotation. create_quotation POST /orders Create Quotation. create_volume_discount_quotation POST /volume_discounts Create long term discount quotation. get_order GET /orders/{order_id} Get confirmed order. list_available_discounts GET /volume_discounts/available_discounts List available long term discounts. list_ordered_subscribers GET /orders/{order_id}/subscribers List ordered subscribers. list_orders GET /orders List confirmed orders. list_products GET /products List products. register_ordered_sim POST /orders/{order_id}/subscribers/register Register subscribers for operator.","title":"soracom_api.OrderApi"},{"location":"api/docs/OrderApi/#cancel_order","text":"str cancel_order(order_id) Cancel order. Cancels an order. If the order has already been dispatched, an error is returned.","title":"cancel_order"},{"location":"api/docs/OrderApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Cancel order. api_response = api_instance.cancel_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->cancel_order: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type","text":"str","title":"Return type"},{"location":"api/docs/OrderApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details","text":"Status code Description Response headers 204 The order was cancelled. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#confirm_coupon_order","text":"CouponResponse confirm_coupon_order(order_id) Confirm coupon order. Performs a credit limit and confirms the order if no problems are encountered.","title":"confirm_coupon_order"},{"location":"api/docs/OrderApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.coupon_response import CouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm coupon order. api_response = api_instance.confirm_coupon_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_coupon_order: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_1","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_1","text":"CouponResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#confirm_order","text":"confirm_order(order_id) Confirm order. Performs a credit limit and confirms the order if no problems are encountered.","title":"confirm_order"},{"location":"api/docs/OrderApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm order. api_instance.confirm_order(order_id) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_order: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_2","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#confirm_volume_discount_order","text":"GetVolumeDiscountResponse confirm_volume_discount_order(order_id) Confirm long term discount order. Performs a credit limit and confirms the order if no problems are encountered.","title":"confirm_volume_discount_order"},{"location":"api/docs/OrderApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.get_volume_discount_response import GetVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Confirm long term discount order. api_response = api_instance.confirm_volume_discount_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->confirm_volume_discount_order: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_3","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_3","text":"GetVolumeDiscountResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#create_coupon_quotation","text":"EstimatedCouponModel create_coupon_quotation(create_estimated_coupon_request) Create coupon quotation. Creates a new coupon quotation. If the orderId is put in /confirm, the order is complete.","title":"create_coupon_quotation"},{"location":"api/docs/OrderApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.create_estimated_coupon_request import CreateEstimatedCouponRequest from soracom_api.model.estimated_coupon_model import EstimatedCouponModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_coupon_request = CreateEstimatedCouponRequest( amount=3.14, ) # CreateEstimatedCouponRequest | Coupon details # example passing only required values which don't have defaults set try: # Create coupon quotation. api_response = api_instance.create_coupon_quotation(create_estimated_coupon_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_coupon_quotation: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_4","text":"Name Type Description Notes create_estimated_coupon_request CreateEstimatedCouponRequest Coupon details","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_4","text":"EstimatedCouponModel","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_4","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_4","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#create_quotation","text":"EstimatedOrderModel create_quotation(create_estimated_order_request) Create Quotation. Creates a new order quotation. If the orderId is put in /confirm, the order is complete.","title":"create_quotation"},{"location":"api/docs/OrderApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.estimated_order_model import EstimatedOrderModel from soracom_api.model.create_estimated_order_request import CreateEstimatedOrderRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_order_request = CreateEstimatedOrderRequest( order_item_list=[ OrderItemModel( product_code=\"product_code_example\", quantity=1, ), ], shipping_address_id=\"shipping_address_id_example\", ) # CreateEstimatedOrderRequest | Order item list and shipping address ID # example passing only required values which don't have defaults set try: # Create Quotation. api_response = api_instance.create_quotation(create_estimated_order_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_quotation: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_5","text":"Name Type Description Notes create_estimated_order_request CreateEstimatedOrderRequest Order item list and shipping address ID","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_5","text":"EstimatedOrderModel","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_5","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_5","text":"Status code Description Response headers 201 A new order quotation was created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#create_volume_discount_quotation","text":"EstimatedVolumeDiscountModel create_volume_discount_quotation(create_estimated_volume_discount_request) Create long term discount quotation. Creates a new long term discount quotation. If the orderId is put in /confirm, the order is complete. (Currently, long term discount is only applied to plan-D, plan-K)","title":"create_volume_discount_quotation"},{"location":"api/docs/OrderApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.create_estimated_volume_discount_request import CreateEstimatedVolumeDiscountRequest from soracom_api.model.estimated_volume_discount_model import EstimatedVolumeDiscountModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) create_estimated_volume_discount_request = CreateEstimatedVolumeDiscountRequest( contract_term_month=12, quantity=1, start_date=\"yyyyMMdd\", volume_discount_payment_type=\"MONTHLY\", volume_discount_type=\"SORACOM_AIR_BASIC_CHARGE_V2\", ) # CreateEstimatedVolumeDiscountRequest | Long term discount contract details # example passing only required values which don't have defaults set try: # Create long term discount quotation. api_response = api_instance.create_volume_discount_quotation(create_estimated_volume_discount_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->create_volume_discount_quotation: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_6","text":"Name Type Description Notes create_estimated_volume_discount_request CreateEstimatedVolumeDiscountRequest Long term discount contract details","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_6","text":"EstimatedVolumeDiscountModel","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_6","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#get_order","text":"GetOrderResponse get_order(order_id) Get confirmed order. Returns a confirmed order.","title":"get_order"},{"location":"api/docs/OrderApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.get_order_response import GetOrderResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Get confirmed order. api_response = api_instance.get_order(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->get_order: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_7","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_7","text":"GetOrderResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_7","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#list_available_discounts","text":"AvailableLongTermDiscountResponse list_available_discounts() List available long term discounts. Returns a list of available long term discounts.","title":"list_available_discounts"},{"location":"api/docs/OrderApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.available_long_term_discount_response import AvailableLongTermDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List available long term discounts. api_response = api_instance.list_available_discounts() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_available_discounts: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_8","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_8","text":"AvailableLongTermDiscountResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_8","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#list_ordered_subscribers","text":"ListOrderedSubscriberResponse list_ordered_subscribers(order_id) List ordered subscribers. List ordered subscribers","title":"list_ordered_subscribers"},{"location":"api/docs/OrderApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_ordered_subscriber_response import ListOrderedSubscriberResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id last_evaluated_key = \"last_evaluated_key_example\" # str | Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. (optional) limit = 1 # int | Max number of subscribers in a response. (optional) # example passing only required values which don't have defaults set try: # List ordered subscribers. api_response = api_instance.list_ordered_subscribers(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_ordered_subscribers: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List ordered subscribers. api_response = api_instance.list_ordered_subscribers(order_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_ordered_subscribers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_9","text":"Name Type Description Notes order_id str order_id last_evaluated_key str Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. [optional] limit int Max number of subscribers in a response. [optional]","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_9","text":"ListOrderedSubscriberResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_9","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#list_orders","text":"ListOrderResponse list_orders() List confirmed orders. Returns a list of confirmed orders.","title":"list_orders"},{"location":"api/docs/OrderApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_order_response import ListOrderResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List confirmed orders. api_response = api_instance.list_orders() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_orders: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_10","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_10","text":"ListOrderResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_10","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#list_products","text":"ListProductResponse list_products() List products. Returns a list of products.","title":"list_products"},{"location":"api/docs/OrderApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from soracom_api.model.list_product_response import ListProductResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) # example, this endpoint has no required or optional parameters try: # List products. api_response = api_instance.list_products() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->list_products: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_11","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_11","text":"ListProductResponse","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_11","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderApi/#register_ordered_sim","text":"str register_ordered_sim(order_id) Register subscribers for operator. Registers the ordered SIM with the operator.","title":"register_ordered_sim"},{"location":"api/docs/OrderApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import order_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) order_id = \"order_id_example\" # str | order_id # example passing only required values which don't have defaults set try: # Register subscribers for operator. api_response = api_instance.register_ordered_sim(order_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling OrderApi->register_ordered_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/OrderApi/#parameters_12","text":"Name Type Description Notes order_id str order_id","title":"Parameters"},{"location":"api/docs/OrderApi/#return-type_12","text":"str","title":"Return type"},{"location":"api/docs/OrderApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/OrderApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/OrderApi/#http-response-details_12","text":"Status code Description Response headers 204 Subscribers were registered for the operator. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/OrderItemModel/","text":"OrderItemModel \u00b6 Properties \u00b6 Name Type Description Notes product_code str Product code [optional] quantity int Quantity [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"OrderItemModel"},{"location":"api/docs/OrderItemModel/#orderitemmodel","text":"","title":"OrderItemModel"},{"location":"api/docs/OrderItemModel/#properties","text":"Name Type Description Notes product_code str Product code [optional] quantity int Quantity [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/OrderedSubscriber/","text":"OrderedSubscriber \u00b6 Properties \u00b6 Name Type Description Notes imsi str IMSI [optional] msisdn str MSISDN [optional] serial_number str, none_type serialNumber [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"OrderedSubscriber"},{"location":"api/docs/OrderedSubscriber/#orderedsubscriber","text":"","title":"OrderedSubscriber"},{"location":"api/docs/OrderedSubscriber/#properties","text":"Name Type Description Notes imsi str IMSI [optional] msisdn str MSISDN [optional] serial_number str, none_type serialNumber [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PacketCaptureSession/","text":"PacketCaptureSession \u00b6 Properties \u00b6 Name Type Description Notes created_time datetime [optional] duration int [optional] ended_time datetime [optional] failed_reason str [optional] prefix str [optional] started_time datetime [optional] status str [optional] url str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PacketCaptureSession"},{"location":"api/docs/PacketCaptureSession/#packetcapturesession","text":"","title":"PacketCaptureSession"},{"location":"api/docs/PacketCaptureSession/#properties","text":"Name Type Description Notes created_time datetime [optional] duration int [optional] ended_time datetime [optional] failed_reason str [optional] prefix str [optional] started_time datetime [optional] status str [optional] url str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PacketCaptureSessionRequest/","text":"PacketCaptureSessionRequest \u00b6 Properties \u00b6 Name Type Description Notes duration int prefix str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PacketCaptureSessionRequest"},{"location":"api/docs/PacketCaptureSessionRequest/#packetcapturesessionrequest","text":"","title":"PacketCaptureSessionRequest"},{"location":"api/docs/PacketCaptureSessionRequest/#properties","text":"Name Type Description Notes duration int prefix str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PaymentAmount/","text":"PaymentAmount \u00b6 Payment amount Properties \u00b6 Name Type Description Notes tax_amount float [optional] total_amount float [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PaymentAmount"},{"location":"api/docs/PaymentAmount/#paymentamount","text":"Payment amount","title":"PaymentAmount"},{"location":"api/docs/PaymentAmount/#properties","text":"Name Type Description Notes tax_amount float [optional] total_amount float [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PaymentApi/","text":"soracom_api.PaymentApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_payment_method POST /payment_methods/current/activate Activate payment method. export_payment_statement POST /payment_statements/{payment_statement_id}/export Export payment statement. get_payer_information GET /payment_statements/payer_information Export payer information. get_payment_method GET /payment_methods/current Get payment method information. get_payment_transaction GET /payment_history/transactions/{payment_transaction_id} Get payment transaction result. get_volume_discount GET /volume_discounts/{contract_id} Get long term discount. list_coupons GET /coupons List coupons. list_payment_statements GET /payment_statements List payment statements. list_volume_discounts GET /volume_discounts List long term discounts. register_coupon POST /coupons/{coupon_code}/register Register Coupon. register_payer_information POST /payment_statements/payer_information Register payer information. activate_payment_method \u00b6 {str: (bool, date, datetime, dict, float, int, list, str, none_type)} activate_payment_method() Activate payment method. Activates a current payment method that has an error. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Activate payment method. api_response = api_instance.activate_payment_method() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->activate_payment_method: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 {str: (bool, date, datetime, dict, float, int, list, str, none_type)} Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 Payment method not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_payment_statement \u00b6 FileExportResponse export_payment_statement(payment_statement_id) Export payment statement. Export payment statement. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) payment_statement_id = \"payment_statement_id_example\" # str | Payment statement ID export_mode = \"async\" # str | Export mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export payment statement. api_response = api_instance.export_payment_statement(payment_statement_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->export_payment_statement: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export payment statement. api_response = api_instance.export_payment_statement(payment_statement_id, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->export_payment_statement: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes payment_statement_id str Payment statement ID export_mode str Export mode (async, sync) [optional] Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Invalid payment statement ID. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_payer_information \u00b6 RegisterPayerInformationModel get_payer_information() Export payer information. Export payer information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.register_payer_information_model import RegisterPayerInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Export payer information. api_response = api_instance.get_payer_information() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payer_information: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 RegisterPayerInformationModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Payer information not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_payment_method \u00b6 GetPaymentMethodResult get_payment_method() Get payment method information. Returns current payment methods. Detailed information is included in the properties. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_payment_method_result import GetPaymentMethodResult from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Get payment method information. api_response = api_instance.get_payment_method() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payment_method: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 GetPaymentMethodResult Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 Payment method not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_payment_transaction \u00b6 GetPaymentTransactionResult get_payment_transaction(payment_transaction_id) Get payment transaction result. Returns result of a payment transaction. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_payment_transaction_result import GetPaymentTransactionResult from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) payment_transaction_id = \"payment_transaction_id_example\" # str | Payment transaction ID # example passing only required values which don't have defaults set try: # Get payment transaction result. api_response = api_instance.get_payment_transaction(payment_transaction_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payment_transaction: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes payment_transaction_id str Payment transaction ID Return type \u00b6 GetPaymentTransactionResult Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Invalid payment transaction ID. - 404 Payment transaction result not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_volume_discount \u00b6 GetVolumeDiscountResponse get_volume_discount(contract_id) Get long term discount. Returns contracted long term discount. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_volume_discount_response import GetVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) contract_id = \"contract_id_example\" # str | contract_id # example passing only required values which don't have defaults set try: # Get long term discount. api_response = api_instance.get_volume_discount(contract_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_volume_discount: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes contract_id str contract_id Return type \u00b6 GetVolumeDiscountResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 Long term discount not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_coupons \u00b6 ListCouponResponse list_coupons() List coupons. Returns a list of currently registered coupons. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_coupon_response import ListCouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List coupons. api_response = api_instance.list_coupons() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_coupons: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ListCouponResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_payment_statements \u00b6 ListPaymentStatementResponse list_payment_statements() List payment statements. List payment statements. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_payment_statement_response import ListPaymentStatementResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List payment statements. api_response = api_instance.list_payment_statements() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_payment_statements: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ListPaymentStatementResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_volume_discounts \u00b6 ListVolumeDiscountResponse list_volume_discounts() List long term discounts. Returns a list of contracted long term discounts. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_volume_discount_response import ListVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List long term discounts. api_response = api_instance.list_volume_discounts() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_volume_discounts: %s\\n\" % e) Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 ListVolumeDiscountResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_coupon \u00b6 CouponResponse register_coupon(coupon_code) Register Coupon. Registers a coupon. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.coupon_response import CouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) coupon_code = \"coupon_code_example\" # str | Coupon code # example passing only required values which don't have defaults set try: # Register Coupon. api_response = api_instance.register_coupon(coupon_code) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->register_coupon: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes coupon_code str Coupon code Return type \u00b6 CouponResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 400 The coupon code is invalid or the coupon code registration limit has been reached. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_payer_information \u00b6 register_payer_information(register_payer_information_model) Register payer information. Register payer information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.register_payer_information_model import RegisterPayerInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) register_payer_information_model = RegisterPayerInformationModel( company_name=\"company_name_example\", department=\"department_example\", full_name=\"full_name_example\", ) # RegisterPayerInformationModel | Payer information to be registered in the accounting specification # example passing only required values which don't have defaults set try: # Register payer information. api_instance.register_payer_information(register_payer_information_model) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->register_payer_information: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes register_payer_information_model RegisterPayerInformationModel Payer information to be registered in the accounting specification Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Created. - 400 Invalid payer information. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.PaymentApi"},{"location":"api/docs/PaymentApi/#soracom_apipaymentapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_payment_method POST /payment_methods/current/activate Activate payment method. export_payment_statement POST /payment_statements/{payment_statement_id}/export Export payment statement. get_payer_information GET /payment_statements/payer_information Export payer information. get_payment_method GET /payment_methods/current Get payment method information. get_payment_transaction GET /payment_history/transactions/{payment_transaction_id} Get payment transaction result. get_volume_discount GET /volume_discounts/{contract_id} Get long term discount. list_coupons GET /coupons List coupons. list_payment_statements GET /payment_statements List payment statements. list_volume_discounts GET /volume_discounts List long term discounts. register_coupon POST /coupons/{coupon_code}/register Register Coupon. register_payer_information POST /payment_statements/payer_information Register payer information.","title":"soracom_api.PaymentApi"},{"location":"api/docs/PaymentApi/#activate_payment_method","text":"{str: (bool, date, datetime, dict, float, int, list, str, none_type)} activate_payment_method() Activate payment method. Activates a current payment method that has an error.","title":"activate_payment_method"},{"location":"api/docs/PaymentApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Activate payment method. api_response = api_instance.activate_payment_method() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->activate_payment_method: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type","text":"{str: (bool, date, datetime, dict, float, int, list, str, none_type)}","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details","text":"Status code Description Response headers 200 OK. - 404 Payment method not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#export_payment_statement","text":"FileExportResponse export_payment_statement(payment_statement_id) Export payment statement. Export payment statement.","title":"export_payment_statement"},{"location":"api/docs/PaymentApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) payment_statement_id = \"payment_statement_id_example\" # str | Payment statement ID export_mode = \"async\" # str | Export mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export payment statement. api_response = api_instance.export_payment_statement(payment_statement_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->export_payment_statement: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export payment statement. api_response = api_instance.export_payment_statement(payment_statement_id, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->export_payment_statement: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_1","text":"Name Type Description Notes payment_statement_id str Payment statement ID export_mode str Export mode (async, sync) [optional]","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_1","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 400 Invalid payment statement ID. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#get_payer_information","text":"RegisterPayerInformationModel get_payer_information() Export payer information. Export payer information.","title":"get_payer_information"},{"location":"api/docs/PaymentApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.register_payer_information_model import RegisterPayerInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Export payer information. api_response = api_instance.get_payer_information() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payer_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_2","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_2","text":"RegisterPayerInformationModel","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_2","text":"Status code Description Response headers 200 OK - 400 Payer information not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#get_payment_method","text":"GetPaymentMethodResult get_payment_method() Get payment method information. Returns current payment methods. Detailed information is included in the properties.","title":"get_payment_method"},{"location":"api/docs/PaymentApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_payment_method_result import GetPaymentMethodResult from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # Get payment method information. api_response = api_instance.get_payment_method() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payment_method: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_3","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_3","text":"GetPaymentMethodResult","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - 404 Payment method not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#get_payment_transaction","text":"GetPaymentTransactionResult get_payment_transaction(payment_transaction_id) Get payment transaction result. Returns result of a payment transaction.","title":"get_payment_transaction"},{"location":"api/docs/PaymentApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_payment_transaction_result import GetPaymentTransactionResult from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) payment_transaction_id = \"payment_transaction_id_example\" # str | Payment transaction ID # example passing only required values which don't have defaults set try: # Get payment transaction result. api_response = api_instance.get_payment_transaction(payment_transaction_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_payment_transaction: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_4","text":"Name Type Description Notes payment_transaction_id str Payment transaction ID","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_4","text":"GetPaymentTransactionResult","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - 400 Invalid payment transaction ID. - 404 Payment transaction result not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#get_volume_discount","text":"GetVolumeDiscountResponse get_volume_discount(contract_id) Get long term discount. Returns contracted long term discount.","title":"get_volume_discount"},{"location":"api/docs/PaymentApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.get_volume_discount_response import GetVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) contract_id = \"contract_id_example\" # str | contract_id # example passing only required values which don't have defaults set try: # Get long term discount. api_response = api_instance.get_volume_discount(contract_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->get_volume_discount: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_5","text":"Name Type Description Notes contract_id str contract_id","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_5","text":"GetVolumeDiscountResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_5","text":"Status code Description Response headers 200 OK. - 400 Long term discount not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#list_coupons","text":"ListCouponResponse list_coupons() List coupons. Returns a list of currently registered coupons.","title":"list_coupons"},{"location":"api/docs/PaymentApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_coupon_response import ListCouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List coupons. api_response = api_instance.list_coupons() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_coupons: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_6","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_6","text":"ListCouponResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_6","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#list_payment_statements","text":"ListPaymentStatementResponse list_payment_statements() List payment statements. List payment statements.","title":"list_payment_statements"},{"location":"api/docs/PaymentApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_payment_statement_response import ListPaymentStatementResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List payment statements. api_response = api_instance.list_payment_statements() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_payment_statements: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_7","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_7","text":"ListPaymentStatementResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_7","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#list_volume_discounts","text":"ListVolumeDiscountResponse list_volume_discounts() List long term discounts. Returns a list of contracted long term discounts.","title":"list_volume_discounts"},{"location":"api/docs/PaymentApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.list_volume_discount_response import ListVolumeDiscountResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) # example, this endpoint has no required or optional parameters try: # List long term discounts. api_response = api_instance.list_volume_discounts() pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->list_volume_discounts: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_8","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_8","text":"ListVolumeDiscountResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_8","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#register_coupon","text":"CouponResponse register_coupon(coupon_code) Register Coupon. Registers a coupon.","title":"register_coupon"},{"location":"api/docs/PaymentApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.coupon_response import CouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) coupon_code = \"coupon_code_example\" # str | Coupon code # example passing only required values which don't have defaults set try: # Register Coupon. api_response = api_instance.register_coupon(coupon_code) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->register_coupon: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_9","text":"Name Type Description Notes coupon_code str Coupon code","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_9","text":"CouponResponse","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_9","text":"Status code Description Response headers 200 OK. - 400 The coupon code is invalid or the coupon code registration limit has been reached. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentApi/#register_payer_information","text":"register_payer_information(register_payer_information_model) Register payer information. Register payer information.","title":"register_payer_information"},{"location":"api/docs/PaymentApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import payment_api from soracom_api.model.register_payer_information_model import RegisterPayerInformationModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = payment_api.PaymentApi(api_client) register_payer_information_model = RegisterPayerInformationModel( company_name=\"company_name_example\", department=\"department_example\", full_name=\"full_name_example\", ) # RegisterPayerInformationModel | Payer information to be registered in the accounting specification # example passing only required values which don't have defaults set try: # Register payer information. api_instance.register_payer_information(register_payer_information_model) except soracom_api.ApiException as e: print(\"Exception when calling PaymentApi->register_payer_information: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PaymentApi/#parameters_10","text":"Name Type Description Notes register_payer_information_model RegisterPayerInformationModel Payer information to be registered in the accounting specification","title":"Parameters"},{"location":"api/docs/PaymentApi/#return-type_10","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/PaymentApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PaymentApi/#http-request-headers_10","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/PaymentApi/#http-response-details_10","text":"Status code Description Response headers 201 Created. - 400 Invalid payer information. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PaymentDescription/","text":"PaymentDescription \u00b6 Payment description Properties \u00b6 Name Type Description Notes description str [optional] item_list [str] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PaymentDescription"},{"location":"api/docs/PaymentDescription/#paymentdescription","text":"Payment description","title":"PaymentDescription"},{"location":"api/docs/PaymentDescription/#properties","text":"Name Type Description Notes description str [optional] item_list [str] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PaymentStatementResponse/","text":"PaymentStatementResponse \u00b6 Properties \u00b6 Name Type Description Notes amount float Amount [optional] payment_date_time int Payment date time [optional] payment_instrument str Payment instrument [optional] payment_method str Payment method [optional] payment_statement_id str Payment statement ID [optional] payment_statement_info str Payment statement information [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PaymentStatementResponse"},{"location":"api/docs/PaymentStatementResponse/#paymentstatementresponse","text":"","title":"PaymentStatementResponse"},{"location":"api/docs/PaymentStatementResponse/#properties","text":"Name Type Description Notes amount float Amount [optional] payment_date_time int Payment date time [optional] payment_instrument str Payment instrument [optional] payment_method str Payment method [optional] payment_statement_id str Payment statement ID [optional] payment_statement_info str Payment statement information [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Placement/","text":"Placement \u00b6 Properties \u00b6 Name Type Description Notes region str [optional] if omitted the server will use the default value of \"eu-central-1\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Placement"},{"location":"api/docs/Placement/#placement","text":"","title":"Placement"},{"location":"api/docs/Placement/#properties","text":"Name Type Description Notes region str [optional] if omitted the server will use the default value of \"eu-central-1\" any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PortMapping/","text":"PortMapping \u00b6 Properties \u00b6 Name Type Description Notes destination PortMappingDestination [optional] duration float The duration that remote access is enabled, in seconds. [optional] endpoint str SORACOM Napter endpoint (IP address and port number) for remote access. [optional] hostname str SORACOM Napter hostname for remote access. [optional] ip_address str SORACOM Napter IP Address for remote access. [optional] port float SORACOM Napter port number for remote access. [optional] source PortMappingSource [optional] tls_required bool Indicates TLS is required. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PortMapping"},{"location":"api/docs/PortMapping/#portmapping","text":"","title":"PortMapping"},{"location":"api/docs/PortMapping/#properties","text":"Name Type Description Notes destination PortMappingDestination [optional] duration float The duration that remote access is enabled, in seconds. [optional] endpoint str SORACOM Napter endpoint (IP address and port number) for remote access. [optional] hostname str SORACOM Napter hostname for remote access. [optional] ip_address str SORACOM Napter IP Address for remote access. [optional] port float SORACOM Napter port number for remote access. [optional] source PortMappingSource [optional] tls_required bool Indicates TLS is required. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PortMappingApi/","text":"soracom_api.PortMappingApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_port_mapping POST /port_mappings Create Port Mapping. delete_port_mapping DELETE /port_mappings/{ip_address}/{port} Delete PortMapping. list_port_mappings GET /port_mappings List Port Mapping Entries. list_port_mappings_for_subscriber GET /port_mappings/subscribers/{imsi} Get Port Mapping entries for a subscriber. create_port_mapping \u00b6 PortMapping create_port_mapping(create_port_mapping_request) Create Port Mapping. Create a new port mapping. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.create_port_mapping_request import CreatePortMappingRequest from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) create_port_mapping_request = CreatePortMappingRequest( destination=PortMappingDestination( imsi=\"imsi_example\", port=3.14, ), duration=3.14, source=PortMappingSource( ip_ranges=[ \"ip_ranges_example\", ], ), tls_required=True, ) # CreatePortMappingRequest | Port mapping to be created. # example passing only required values which don't have defaults set try: # Create Port Mapping. api_response = api_instance.create_port_mapping(create_port_mapping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->create_port_mapping: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_port_mapping_request CreatePortMappingRequest Port mapping to be created. Return type \u00b6 PortMapping Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_port_mapping \u00b6 delete_port_mapping(ip_address, port) Delete PortMapping. Deletes the specified port mapping entry Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) ip_address = \"ip_address_example\" # str | IP address of the target port mapping entry port = \"port_example\" # str | Port of the target port mapping entry # example passing only required values which don't have defaults set try: # Delete PortMapping. api_instance.delete_port_mapping(ip_address, port) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->delete_port_mapping: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes ip_address str IP address of the target port mapping entry port str Port of the target port mapping entry Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified port mapping entry complete. - 404 The specified port mapping entry does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_port_mappings \u00b6 [PortMapping] list_port_mappings() List Port Mapping Entries. Returns a list of port mappings. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last Port Mapping ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Port Mapping Entries. api_response = api_instance.list_port_mappings(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->list_port_mappings: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes limit int Maximum number of results per response page. [optional] last_evaluated_key str The last Port Mapping ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. [optional] Return type \u00b6 [PortMapping] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of port mappings. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_port_mappings_for_subscriber \u00b6 PortMapping list_port_mappings_for_subscriber(imsi) Get Port Mapping entries for a subscriber. Returns the port mapping entries for a subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) imsi = \"imsi_example\" # str | Target subscriber IMSI. # example passing only required values which don't have defaults set try: # Get Port Mapping entries for a subscriber. api_response = api_instance.list_port_mappings_for_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->list_port_mappings_for_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str Target subscriber IMSI. Return type \u00b6 PortMapping Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of port mapping entries for the subscriber. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.PortMappingApi"},{"location":"api/docs/PortMappingApi/#soracom_apiportmappingapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_port_mapping POST /port_mappings Create Port Mapping. delete_port_mapping DELETE /port_mappings/{ip_address}/{port} Delete PortMapping. list_port_mappings GET /port_mappings List Port Mapping Entries. list_port_mappings_for_subscriber GET /port_mappings/subscribers/{imsi} Get Port Mapping entries for a subscriber.","title":"soracom_api.PortMappingApi"},{"location":"api/docs/PortMappingApi/#create_port_mapping","text":"PortMapping create_port_mapping(create_port_mapping_request) Create Port Mapping. Create a new port mapping.","title":"create_port_mapping"},{"location":"api/docs/PortMappingApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.create_port_mapping_request import CreatePortMappingRequest from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) create_port_mapping_request = CreatePortMappingRequest( destination=PortMappingDestination( imsi=\"imsi_example\", port=3.14, ), duration=3.14, source=PortMappingSource( ip_ranges=[ \"ip_ranges_example\", ], ), tls_required=True, ) # CreatePortMappingRequest | Port mapping to be created. # example passing only required values which don't have defaults set try: # Create Port Mapping. api_response = api_instance.create_port_mapping(create_port_mapping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->create_port_mapping: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PortMappingApi/#parameters","text":"Name Type Description Notes create_port_mapping_request CreatePortMappingRequest Port mapping to be created.","title":"Parameters"},{"location":"api/docs/PortMappingApi/#return-type","text":"PortMapping","title":"Return type"},{"location":"api/docs/PortMappingApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PortMappingApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/PortMappingApi/#http-response-details","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PortMappingApi/#delete_port_mapping","text":"delete_port_mapping(ip_address, port) Delete PortMapping. Deletes the specified port mapping entry","title":"delete_port_mapping"},{"location":"api/docs/PortMappingApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) ip_address = \"ip_address_example\" # str | IP address of the target port mapping entry port = \"port_example\" # str | Port of the target port mapping entry # example passing only required values which don't have defaults set try: # Delete PortMapping. api_instance.delete_port_mapping(ip_address, port) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->delete_port_mapping: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PortMappingApi/#parameters_1","text":"Name Type Description Notes ip_address str IP address of the target port mapping entry port str Port of the target port mapping entry","title":"Parameters"},{"location":"api/docs/PortMappingApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/PortMappingApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PortMappingApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/PortMappingApi/#http-response-details_1","text":"Status code Description Response headers 204 Deletion of specified port mapping entry complete. - 404 The specified port mapping entry does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PortMappingApi/#list_port_mappings","text":"[PortMapping] list_port_mappings() List Port Mapping Entries. Returns a list of port mappings.","title":"list_port_mappings"},{"location":"api/docs/PortMappingApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last Port Mapping ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Port Mapping Entries. api_response = api_instance.list_port_mappings(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->list_port_mappings: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PortMappingApi/#parameters_2","text":"Name Type Description Notes limit int Maximum number of results per response page. [optional] last_evaluated_key str The last Port Mapping ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next group onward. [optional]","title":"Parameters"},{"location":"api/docs/PortMappingApi/#return-type_2","text":"[PortMapping]","title":"Return type"},{"location":"api/docs/PortMappingApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PortMappingApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/PortMappingApi/#http-response-details_2","text":"Status code Description Response headers 200 A list of port mappings. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PortMappingApi/#list_port_mappings_for_subscriber","text":"PortMapping list_port_mappings_for_subscriber(imsi) Get Port Mapping entries for a subscriber. Returns the port mapping entries for a subscriber.","title":"list_port_mappings_for_subscriber"},{"location":"api/docs/PortMappingApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import port_mapping_api from soracom_api.model.port_mapping import PortMapping from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = port_mapping_api.PortMappingApi(api_client) imsi = \"imsi_example\" # str | Target subscriber IMSI. # example passing only required values which don't have defaults set try: # Get Port Mapping entries for a subscriber. api_response = api_instance.list_port_mappings_for_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling PortMappingApi->list_port_mappings_for_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/PortMappingApi/#parameters_3","text":"Name Type Description Notes imsi str Target subscriber IMSI.","title":"Parameters"},{"location":"api/docs/PortMappingApi/#return-type_3","text":"PortMapping","title":"Return type"},{"location":"api/docs/PortMappingApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/PortMappingApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/PortMappingApi/#http-response-details_3","text":"Status code Description Response headers 200 List of port mapping entries for the subscriber. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/PortMappingDestination/","text":"PortMappingDestination \u00b6 Properties \u00b6 Name Type Description Notes imsi str The target IMSI of the subscriber. port float The port on your device used for access. any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PortMappingDestination"},{"location":"api/docs/PortMappingDestination/#portmappingdestination","text":"","title":"PortMappingDestination"},{"location":"api/docs/PortMappingDestination/#properties","text":"Name Type Description Notes imsi str The target IMSI of the subscriber. port float The port on your device used for access. any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PortMappingSource/","text":"PortMappingSource \u00b6 Properties \u00b6 Name Type Description Notes ip_ranges [str] The range of IP addresses in CIDR notation which will be allowed to access the port mapping. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PortMappingSource"},{"location":"api/docs/PortMappingSource/#portmappingsource","text":"","title":"PortMappingSource"},{"location":"api/docs/PortMappingSource/#properties","text":"Name Type Description Notes ip_ranges [str] The range of IP addresses in CIDR notation which will be allowed to access the port mapping. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PreviousSessionStatus/","text":"PreviousSessionStatus \u00b6 Properties \u00b6 Name Type Description Notes cell Cell [optional] created_time int The time when the previous session was created. [optional] deleted_time int The time when the previous session was deleted. [optional] dns_servers [str], none_type Array of IP address of the DNS servers. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PreviousSessionStatus"},{"location":"api/docs/PreviousSessionStatus/#previoussessionstatus","text":"","title":"PreviousSessionStatus"},{"location":"api/docs/PreviousSessionStatus/#properties","text":"Name Type Description Notes cell Cell [optional] created_time int The time when the previous session was created. [optional] deleted_time int The time when the previous session was deleted. [optional] dns_servers [str], none_type Array of IP address of the DNS servers. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PriceByQuantity/","text":"PriceByQuantity \u00b6 Properties \u00b6 Name Type Description Notes min_quantity int Min quantity [optional] price float Price [optional] tax_included_price float TaxIncluded price [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PriceByQuantity"},{"location":"api/docs/PriceByQuantity/#pricebyquantity","text":"","title":"PriceByQuantity"},{"location":"api/docs/PriceByQuantity/#properties","text":"Name Type Description Notes min_quantity int Min quantity [optional] price float Price [optional] tax_included_price float TaxIncluded price [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ProductModel/","text":"ProductModel \u00b6 Product Properties \u00b6 Name Type Description Notes campaign_code str Campaign code [optional] consignor_id str Consignor ID [optional] consignor_name str Consignor name [optional] count float Count [optional] currency str Currency [optional] description str Product Description [optional] max_quantity int Max quantity [optional] price float Price [optional] price_by_quantity_list [PriceByQuantity] [optional] product_code str Product code [optional] product_info_url str URL of product page [optional] product_name str Product name [optional] product_type str Product type [optional] properties {str: (str,)} Properties [optional] regular_price float Regular price [optional] tax_included_price float Price [optional] tax_included_regular_price float TaxIncluded regular price [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ProductModel"},{"location":"api/docs/ProductModel/#productmodel","text":"Product","title":"ProductModel"},{"location":"api/docs/ProductModel/#properties","text":"Name Type Description Notes campaign_code str Campaign code [optional] consignor_id str Consignor ID [optional] consignor_name str Consignor name [optional] count float Count [optional] currency str Currency [optional] description str Product Description [optional] max_quantity int Max quantity [optional] price float Price [optional] price_by_quantity_list [PriceByQuantity] [optional] product_code str Product code [optional] product_info_url str URL of product page [optional] product_name str Product name [optional] product_type str Product type [optional] properties {str: (str,)} Properties [optional] regular_price float Regular price [optional] tax_included_price float Price [optional] tax_included_regular_price float TaxIncluded regular price [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/PutIpAddressMapEntryRequest/","text":"PutIpAddressMapEntryRequest \u00b6 Properties \u00b6 Name Type Description Notes ip_address str key str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"PutIpAddressMapEntryRequest"},{"location":"api/docs/PutIpAddressMapEntryRequest/#putipaddressmapentryrequest","text":"","title":"PutIpAddressMapEntryRequest"},{"location":"api/docs/PutIpAddressMapEntryRequest/#properties","text":"Name Type Description Notes ip_address str key str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/QueryApi/","text":"soracom_api.QueryApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description search_devices GET /query/devices Search SORACOM Inventory devices by query search_sigfox_devices GET /query/sigfox_devices Search Sigfox devices by query search_sims GET /query/sims Search SIMs by query terms search_subscriber_traffic_volume_ranking GET /query/subscribers/traffic_volume/ranking Search traffic volume ranking of subscribers search_subscribers GET /query/subscribers (DEPRECATED) Search subscribers by query terms search_devices \u00b6 [Device] search_devices() Search SORACOM Inventory devices by query Search SORACOM Inventory devices by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SORACOM Inventory devices that includes their group information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) device_id = [ \"deviceId_example\", ] # [str] | SORACOM Inventory device ID to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI of the device that was used on bootstrapping (optional) imei = [ \"imei_example\", ] # [str] | IMEI of the device that was used on bootstrapping (optional) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The SORACOM Inventory device ID of the last Inventory device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Inventory device onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search SORACOM Inventory devices by query api_response = api_instance.search_devices(name=name, group=group, device_id=device_id, tag=tag, imsi=imsi, imei=imei, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_devices: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] device_id [str] SORACOM Inventory device ID to search [optional] tag [str] String of tag values to search [optional] imsi [str] IMSI of the device that was used on bootstrapping [optional] imei [str] IMEI of the device that was used on bootstrapping [optional] limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The SORACOM Inventory device ID of the last Inventory device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Inventory device onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\" Return type \u00b6 [Device] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README] search_sigfox_devices \u00b6 [SigfoxDevice] search_sigfox_devices() Search Sigfox devices by query Search Sigfox devices by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all Sigfox devices that includes their group information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) device_id = [ \"deviceId_example\", ] # [str] | Sigfox device ID to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) status = \"and\" # str | Status of sigfox devices (optional) if omitted the server will use the default value of \"and\" registration = \"and\" # str | Registration status of sigfox devices (optional) if omitted the server will use the default value of \"and\" limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The Sigfox device ID of the last Sigfox device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Sigfox device onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search Sigfox devices by query api_response = api_instance.search_sigfox_devices(name=name, group=group, device_id=device_id, tag=tag, status=status, registration=registration, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_sigfox_devices: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] device_id [str] Sigfox device ID to search [optional] tag [str] String of tag values to search [optional] status str Status of sigfox devices [optional] if omitted the server will use the default value of \"and\" registration str Registration status of sigfox devices [optional] if omitted the server will use the default value of \"and\" limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The Sigfox device ID of the last Sigfox device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Sigfox device onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\" Return type \u00b6 [SigfoxDevice] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README] search_sims \u00b6 [Sim] search_sims() Search SIMs by query terms Search SIMs by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SIMs that includes their group information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) sim_id = [ \"sim_id_example\", ] # [str] | Identifier of the SIM to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI to search (optional) msisdn = [ \"msisdn_example\", ] # [str] | MSISDN to search (optional) iccid = [ \"iccid_example\", ] # [str] | ICCID to search (optional) serial_number = [ \"serial_number_example\", ] # [str] | Serial number to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) bundles = [ \"bundles_example\", ] # [str] | Bundles type to search (optional) session_status = \"NA\" # str | Status of the session to search (ONLINE or OFFLINE) (optional) if omitted the server will use the default value of \"NA\" limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The SIM ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search SIMs by query terms api_response = api_instance.search_sims(name=name, group=group, sim_id=sim_id, imsi=imsi, msisdn=msisdn, iccid=iccid, serial_number=serial_number, tag=tag, bundles=bundles, session_status=session_status, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_sims: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] sim_id [str] Identifier of the SIM to search [optional] imsi [str] IMSI to search [optional] msisdn [str] MSISDN to search [optional] iccid [str] ICCID to search [optional] serial_number [str] Serial number to search [optional] tag [str] String of tag values to search [optional] bundles [str] Bundles type to search [optional] session_status str Status of the session to search (ONLINE or OFFLINE) [optional] if omitted the server will use the default value of \"NA\" limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The SIM ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\" Return type \u00b6 [Sim] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README] search_subscriber_traffic_volume_ranking \u00b6 [TrafficVolumeRanking] search_subscriber_traffic_volume_ranking(_from, to) Search traffic volume ranking of subscribers Search traffic volume ranking of subscribers Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.traffic_volume_ranking import TrafficVolumeRanking from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) _from = 1 # int | The beginning point of searching range (unixtime: in milliseconds) to = 1 # int | The end point of searching range (unixtime: in milliseconds) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 order = \"desc\" # str | The order of ranking (optional) if omitted the server will use the default value of \"desc\" # example passing only required values which don't have defaults set try: # Search traffic volume ranking of subscribers api_response = api_instance.search_subscriber_traffic_volume_ranking(_from, to) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscriber_traffic_volume_ranking: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Search traffic volume ranking of subscribers api_response = api_instance.search_subscriber_traffic_volume_ranking(_from, to, limit=limit, order=order) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscriber_traffic_volume_ranking: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes _from int The beginning point of searching range (unixtime: in milliseconds) to int The end point of searching range (unixtime: in milliseconds) limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 order str The order of ranking [optional] if omitted the server will use the default value of \"desc\" Return type \u00b6 [TrafficVolumeRanking] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] search_subscribers \u00b6 [Subscriber] search_subscribers() (DEPRECATED) Search subscribers by query terms (DEPRECATED: please consider to use /query/sims API instead) Search subscribers by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SIMs that includes their group information. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI to search (optional) msisdn = [ \"msisdn_example\", ] # [str] | MSISDN to search (optional) iccid = [ \"iccid_example\", ] # [str] | ICCID to search (optional) serial_number = [ \"serial_number_example\", ] # [str] | Serial number to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) subscription = [ \"subscription_example\", ] # [str] | Subscription (e.g. `plan01s`) to search (optional) module_type = [ \"module_type_example\", ] # [str] | Module type (e.g. `mini`, `virtual`) to search (optional) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # (DEPRECATED) Search subscribers by query terms api_response = api_instance.search_subscribers(name=name, group=group, imsi=imsi, msisdn=msisdn, iccid=iccid, serial_number=serial_number, tag=tag, subscription=subscription, module_type=module_type, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscribers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] imsi [str] IMSI to search [optional] msisdn [str] MSISDN to search [optional] iccid [str] ICCID to search [optional] serial_number [str] Serial number to search [optional] tag [str] String of tag values to search [optional] subscription [str] Subscription (e.g. `plan01s`) to search [optional] module_type [str] Module type (e.g. `mini`, `virtual`) to search [optional] limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\" Return type \u00b6 [Subscriber] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.QueryApi"},{"location":"api/docs/QueryApi/#soracom_apiqueryapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description search_devices GET /query/devices Search SORACOM Inventory devices by query search_sigfox_devices GET /query/sigfox_devices Search Sigfox devices by query search_sims GET /query/sims Search SIMs by query terms search_subscriber_traffic_volume_ranking GET /query/subscribers/traffic_volume/ranking Search traffic volume ranking of subscribers search_subscribers GET /query/subscribers (DEPRECATED) Search subscribers by query terms","title":"soracom_api.QueryApi"},{"location":"api/docs/QueryApi/#search_devices","text":"[Device] search_devices() Search SORACOM Inventory devices by query Search SORACOM Inventory devices by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SORACOM Inventory devices that includes their group information.","title":"search_devices"},{"location":"api/docs/QueryApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.device import Device from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) device_id = [ \"deviceId_example\", ] # [str] | SORACOM Inventory device ID to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI of the device that was used on bootstrapping (optional) imei = [ \"imei_example\", ] # [str] | IMEI of the device that was used on bootstrapping (optional) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The SORACOM Inventory device ID of the last Inventory device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Inventory device onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search SORACOM Inventory devices by query api_response = api_instance.search_devices(name=name, group=group, device_id=device_id, tag=tag, imsi=imsi, imei=imei, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_devices: %s\\n\" % e)","title":"Example"},{"location":"api/docs/QueryApi/#parameters","text":"Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] device_id [str] SORACOM Inventory device ID to search [optional] tag [str] String of tag values to search [optional] imsi [str] IMSI of the device that was used on bootstrapping [optional] imei [str] IMEI of the device that was used on bootstrapping [optional] limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The SORACOM Inventory device ID of the last Inventory device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Inventory device onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\"","title":"Parameters"},{"location":"api/docs/QueryApi/#return-type","text":"[Device]","title":"Return type"},{"location":"api/docs/QueryApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/QueryApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/QueryApi/#http-response-details","text":"Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/QueryApi/#search_sigfox_devices","text":"[SigfoxDevice] search_sigfox_devices() Search Sigfox devices by query Search Sigfox devices by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all Sigfox devices that includes their group information.","title":"search_sigfox_devices"},{"location":"api/docs/QueryApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) device_id = [ \"deviceId_example\", ] # [str] | Sigfox device ID to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) status = \"and\" # str | Status of sigfox devices (optional) if omitted the server will use the default value of \"and\" registration = \"and\" # str | Registration status of sigfox devices (optional) if omitted the server will use the default value of \"and\" limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The Sigfox device ID of the last Sigfox device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Sigfox device onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search Sigfox devices by query api_response = api_instance.search_sigfox_devices(name=name, group=group, device_id=device_id, tag=tag, status=status, registration=registration, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_sigfox_devices: %s\\n\" % e)","title":"Example"},{"location":"api/docs/QueryApi/#parameters_1","text":"Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] device_id [str] Sigfox device ID to search [optional] tag [str] String of tag values to search [optional] status str Status of sigfox devices [optional] if omitted the server will use the default value of \"and\" registration str Registration status of sigfox devices [optional] if omitted the server will use the default value of \"and\" limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The Sigfox device ID of the last Sigfox device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Sigfox device onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\"","title":"Parameters"},{"location":"api/docs/QueryApi/#return-type_1","text":"[SigfoxDevice]","title":"Return type"},{"location":"api/docs/QueryApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/QueryApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/QueryApi/#http-response-details_1","text":"Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/QueryApi/#search_sims","text":"[Sim] search_sims() Search SIMs by query terms Search SIMs by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SIMs that includes their group information.","title":"search_sims"},{"location":"api/docs/QueryApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) sim_id = [ \"sim_id_example\", ] # [str] | Identifier of the SIM to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI to search (optional) msisdn = [ \"msisdn_example\", ] # [str] | MSISDN to search (optional) iccid = [ \"iccid_example\", ] # [str] | ICCID to search (optional) serial_number = [ \"serial_number_example\", ] # [str] | Serial number to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) bundles = [ \"bundles_example\", ] # [str] | Bundles type to search (optional) session_status = \"NA\" # str | Status of the session to search (ONLINE or OFFLINE) (optional) if omitted the server will use the default value of \"NA\" limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The SIM ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # Search SIMs by query terms api_response = api_instance.search_sims(name=name, group=group, sim_id=sim_id, imsi=imsi, msisdn=msisdn, iccid=iccid, serial_number=serial_number, tag=tag, bundles=bundles, session_status=session_status, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_sims: %s\\n\" % e)","title":"Example"},{"location":"api/docs/QueryApi/#parameters_2","text":"Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] sim_id [str] Identifier of the SIM to search [optional] imsi [str] IMSI to search [optional] msisdn [str] MSISDN to search [optional] iccid [str] ICCID to search [optional] serial_number [str] Serial number to search [optional] tag [str] String of tag values to search [optional] bundles [str] Bundles type to search [optional] session_status str Status of the session to search (ONLINE or OFFLINE) [optional] if omitted the server will use the default value of \"NA\" limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The SIM ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\"","title":"Parameters"},{"location":"api/docs/QueryApi/#return-type_2","text":"[Sim]","title":"Return type"},{"location":"api/docs/QueryApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/QueryApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/QueryApi/#http-response-details_2","text":"Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/QueryApi/#search_subscriber_traffic_volume_ranking","text":"[TrafficVolumeRanking] search_subscriber_traffic_volume_ranking(_from, to) Search traffic volume ranking of subscribers Search traffic volume ranking of subscribers","title":"search_subscriber_traffic_volume_ranking"},{"location":"api/docs/QueryApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.traffic_volume_ranking import TrafficVolumeRanking from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) _from = 1 # int | The beginning point of searching range (unixtime: in milliseconds) to = 1 # int | The end point of searching range (unixtime: in milliseconds) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 order = \"desc\" # str | The order of ranking (optional) if omitted the server will use the default value of \"desc\" # example passing only required values which don't have defaults set try: # Search traffic volume ranking of subscribers api_response = api_instance.search_subscriber_traffic_volume_ranking(_from, to) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscriber_traffic_volume_ranking: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Search traffic volume ranking of subscribers api_response = api_instance.search_subscriber_traffic_volume_ranking(_from, to, limit=limit, order=order) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscriber_traffic_volume_ranking: %s\\n\" % e)","title":"Example"},{"location":"api/docs/QueryApi/#parameters_3","text":"Name Type Description Notes _from int The beginning point of searching range (unixtime: in milliseconds) to int The end point of searching range (unixtime: in milliseconds) limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 order str The order of ranking [optional] if omitted the server will use the default value of \"desc\"","title":"Parameters"},{"location":"api/docs/QueryApi/#return-type_3","text":"[TrafficVolumeRanking]","title":"Return type"},{"location":"api/docs/QueryApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/QueryApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/QueryApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/QueryApi/#search_subscribers","text":"[Subscriber] search_subscribers() (DEPRECATED) Search subscribers by query terms (DEPRECATED: please consider to use /query/sims API instead) Search subscribers by query terms. It returns partial match results. When this API permission is allowed, it grants the authority to search and retrieve all SIMs that includes their group information.","title":"search_subscribers"},{"location":"api/docs/QueryApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import query_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = query_api.QueryApi(api_client) name = [ \"name_example\", ] # [str] | Name to search (optional) group = [ \"group_example\", ] # [str] | Group name to search (optional) imsi = [ \"imsi_example\", ] # [str] | IMSI to search (optional) msisdn = [ \"msisdn_example\", ] # [str] | MSISDN to search (optional) iccid = [ \"iccid_example\", ] # [str] | ICCID to search (optional) serial_number = [ \"serial_number_example\", ] # [str] | Serial number to search (optional) tag = [ \"tag_example\", ] # [str] | String of tag values to search (optional) subscription = [ \"subscription_example\", ] # [str] | Subscription (e.g. `plan01s`) to search (optional) module_type = [ \"module_type_example\", ] # [str] | Module type (e.g. `mini`, `virtual`) to search (optional) limit = 10 # int | The maximum number of item to retrieve (optional) if omitted the server will use the default value of 10 last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) search_type = \"and\" # str | Type of the search ('AND searching' or 'OR searching') (optional) if omitted the server will use the default value of \"and\" # example passing only required values which don't have defaults set # and optional values try: # (DEPRECATED) Search subscribers by query terms api_response = api_instance.search_subscribers(name=name, group=group, imsi=imsi, msisdn=msisdn, iccid=iccid, serial_number=serial_number, tag=tag, subscription=subscription, module_type=module_type, limit=limit, last_evaluated_key=last_evaluated_key, search_type=search_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling QueryApi->search_subscribers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/QueryApi/#parameters_4","text":"Name Type Description Notes name [str] Name to search [optional] group [str] Group name to search [optional] imsi [str] IMSI to search [optional] msisdn [str] MSISDN to search [optional] iccid [str] ICCID to search [optional] serial_number [str] Serial number to search [optional] tag [str] String of tag values to search [optional] subscription [str] Subscription (e.g. `plan01s`) to search [optional] module_type [str] Module type (e.g. `mini`, `virtual`) to search [optional] limit int The maximum number of item to retrieve [optional] if omitted the server will use the default value of 10 last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional] search_type str Type of the search ('AND searching' or 'OR searching') [optional] if omitted the server will use the default value of \"and\"","title":"Parameters"},{"location":"api/docs/QueryApi/#return-type_4","text":"[Subscriber]","title":"Return type"},{"location":"api/docs/QueryApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/QueryApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/QueryApi/#http-response-details_4","text":"Status code Description Response headers 200 Returns result of searching - 400 Invalid search queries - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ReferenceUrl/","text":"ReferenceUrl \u00b6 Properties \u00b6 Name Type Description Notes title str [optional] url str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ReferenceUrl"},{"location":"api/docs/ReferenceUrl/#referenceurl","text":"","title":"ReferenceUrl"},{"location":"api/docs/ReferenceUrl/#properties","text":"Name Type Description Notes title str [optional] url str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterGatePeerRequest/","text":"RegisterGatePeerRequest \u00b6 Properties \u00b6 Name Type Description Notes outer_ip_address str inner_ip_address str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterGatePeerRequest"},{"location":"api/docs/RegisterGatePeerRequest/#registergatepeerrequest","text":"","title":"RegisterGatePeerRequest"},{"location":"api/docs/RegisterGatePeerRequest/#properties","text":"Name Type Description Notes outer_ip_address str inner_ip_address str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterLoraDeviceRequest/","text":"RegisterLoraDeviceRequest \u00b6 Properties \u00b6 Name Type Description Notes group_id str, none_type [optional] registration_secret str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterLoraDeviceRequest"},{"location":"api/docs/RegisterLoraDeviceRequest/#registerloradevicerequest","text":"","title":"RegisterLoraDeviceRequest"},{"location":"api/docs/RegisterLoraDeviceRequest/#properties","text":"Name Type Description Notes group_id str, none_type [optional] registration_secret str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterOperatorsRequest/","text":"RegisterOperatorsRequest \u00b6 Properties \u00b6 Name Type Description Notes email str password str \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\u9577\u3055 8 \u6587\u5b57\u4ee5\u4e0a100 \u6587\u5b57\u4ee5\u5185\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u5c0f\u6587\u5b57 (a-z) \u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u5927\u6587\u5b57 (A-Z) \u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3001\u6570\u5b57\u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3002\u8a18\u53f7\u306a\u3069\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterOperatorsRequest"},{"location":"api/docs/RegisterOperatorsRequest/#registeroperatorsrequest","text":"","title":"RegisterOperatorsRequest"},{"location":"api/docs/RegisterOperatorsRequest/#properties","text":"Name Type Description Notes email str password str \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\u9577\u3055 8 \u6587\u5b57\u4ee5\u4e0a100 \u6587\u5b57\u4ee5\u5185\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u5c0f\u6587\u5b57 (a-z) \u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u5927\u6587\u5b57 (A-Z) \u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3001\u6570\u5b57\u3092 1 \u6587\u5b57\u4ee5\u4e0a\u4f7f\u7528\u3002\u8a18\u53f7\u306a\u3069\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterPayerInformationModel/","text":"RegisterPayerInformationModel \u00b6 Properties \u00b6 Name Type Description Notes company_name str Company name [optional] department str Department [optional] full_name str Full name [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterPayerInformationModel"},{"location":"api/docs/RegisterPayerInformationModel/#registerpayerinformationmodel","text":"","title":"RegisterPayerInformationModel"},{"location":"api/docs/RegisterPayerInformationModel/#properties","text":"Name Type Description Notes company_name str Company name [optional] department str Department [optional] full_name str Full name [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterSimRequest/","text":"RegisterSimRequest \u00b6 Properties \u00b6 Name Type Description Notes registration_secret str group_id str, none_type [optional] tags [TagUpdateRequest] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterSimRequest"},{"location":"api/docs/RegisterSimRequest/#registersimrequest","text":"","title":"RegisterSimRequest"},{"location":"api/docs/RegisterSimRequest/#properties","text":"Name Type Description Notes registration_secret str group_id str, none_type [optional] tags [TagUpdateRequest] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RegisterSubscribersRequest/","text":"RegisterSubscribersRequest \u00b6 Properties \u00b6 Name Type Description Notes registration_secret str group_id str, none_type [optional] tags [TagUpdateRequest] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RegisterSubscribersRequest"},{"location":"api/docs/RegisterSubscribersRequest/#registersubscribersrequest","text":"","title":"RegisterSubscribersRequest"},{"location":"api/docs/RegisterSubscribersRequest/#properties","text":"Name Type Description Notes registration_secret str group_id str, none_type [optional] tags [TagUpdateRequest] [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ResourceInstance/","text":"ResourceInstance \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] id int [optional] mandatory bool [optional] if omitted the server will use the default value of False multiple bool [optional] if omitted the server will use the default value of False name str [optional] observed bool [optional] if omitted the server will use the default value of False operations str [optional] range_enumeration str [optional] type str [optional] units str [optional] value {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] values {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ResourceInstance"},{"location":"api/docs/ResourceInstance/#resourceinstance","text":"","title":"ResourceInstance"},{"location":"api/docs/ResourceInstance/#properties","text":"Name Type Description Notes description str [optional] id int [optional] mandatory bool [optional] if omitted the server will use the default value of False multiple bool [optional] if omitted the server will use the default value of False name str [optional] observed bool [optional] if omitted the server will use the default value of False operations str [optional] range_enumeration str [optional] type str [optional] units str [optional] value {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] values {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RoleApi/","text":"soracom_api.RoleApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description attach_role POST /operators/{operator_id}/users/{user_name}/roles Attach Role to User. create_role POST /operators/{operator_id}/roles/{role_id} Create Role. delete_role DELETE /operators/{operator_id}/roles/{role_id} Delete Role. detach_role DELETE /operators/{operator_id}/users/{user_name}/roles/{role_id} Detach Role from User. get_role GET /operators/{operator_id}/roles/{role_id} Get Role. list_role_attached_users GET /operators/{operator_id}/roles/{role_id}/users List Role Attached Users. list_roles GET /operators/{operator_id}/roles List Roles. list_user_roles GET /operators/{operator_id}/users/{user_name}/roles List User Roles. update_role PUT /operators/{operator_id}/roles/{role_id} Update Role. attach_role \u00b6 attach_role(operator_id, user_name, attach_role_request) Attach Role to User. Attaches a role to a user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.attach_role_request import AttachRoleRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name attach_role_request = AttachRoleRequest( role_id=\"role_id_example\", ) # AttachRoleRequest | role_id # example passing only required values which don't have defaults set try: # Attach Role to User. api_instance.attach_role(operator_id, user_name, attach_role_request) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->attach_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name attach_role_request AttachRoleRequest role_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_role \u00b6 CreateRoleResponse create_role(operator_id, role_id, create_or_update_role_request) Create Role. Adds a new role. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.create_or_update_role_request import CreateOrUpdateRoleRequest from soracom_api.model.create_role_response import CreateRoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id create_or_update_role_request = CreateOrUpdateRoleRequest( description=\"description_example\", permission=\"permission_example\", ) # CreateOrUpdateRoleRequest | permission # example passing only required values which don't have defaults set try: # Create Role. api_response = api_instance.create_role(operator_id, role_id, create_or_update_role_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->create_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id role_id str role_id create_or_update_role_request CreateOrUpdateRoleRequest permission Return type \u00b6 CreateRoleResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_role \u00b6 delete_role(operator_id, role_id) Delete Role. Deletes a role. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Delete Role. api_instance.delete_role(operator_id, role_id) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->delete_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id role_id str role_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The role was deleted. - [Back to top] [Back to API list] [Back to Model list] [Back to README] detach_role \u00b6 detach_role(operator_id, user_name, role_id) Detach Role from User. Detaches a role from a user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Detach Role from User. api_instance.detach_role(operator_id, user_name, role_id) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->detach_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name role_id str role_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_role \u00b6 RoleResponse get_role(operator_id, role_id) Get Role. Retrieves a role. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.role_response import RoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Get Role. api_response = api_instance.get_role(operator_id, role_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->get_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id role_id str role_id Return type \u00b6 RoleResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_role_attached_users \u00b6 [UserDetailResponse] list_role_attached_users(operator_id, role_id) List Role Attached Users. Retrieves a list of users attached to a role. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # List Role Attached Users. api_response = api_instance.list_role_attached_users(operator_id, role_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_role_attached_users: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id role_id str role_id Return type \u00b6 [UserDetailResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_roles \u00b6 [ListRolesResponse] list_roles(operator_id) List Roles. Returns a list of roles. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.list_roles_response import ListRolesResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Roles. api_response = api_instance.list_roles(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_roles: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 [ListRolesResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_user_roles \u00b6 [RoleResponse] list_user_roles(operator_id, user_name) List User Roles. Retrieves a list of the user's roles. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.role_response import RoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # List User Roles. api_response = api_instance.list_user_roles(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_user_roles: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 [RoleResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_role \u00b6 update_role(operator_id, role_id, create_or_update_role_request) Update Role. Edits a role. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.create_or_update_role_request import CreateOrUpdateRoleRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id create_or_update_role_request = CreateOrUpdateRoleRequest( description=\"description_example\", permission=\"permission_example\", ) # CreateOrUpdateRoleRequest | permission # example passing only required values which don't have defaults set try: # Update Role. api_instance.update_role(operator_id, role_id, create_or_update_role_request) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->update_role: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id role_id str role_id create_or_update_role_request CreateOrUpdateRoleRequest permission Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.RoleApi"},{"location":"api/docs/RoleApi/#soracom_apiroleapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description attach_role POST /operators/{operator_id}/users/{user_name}/roles Attach Role to User. create_role POST /operators/{operator_id}/roles/{role_id} Create Role. delete_role DELETE /operators/{operator_id}/roles/{role_id} Delete Role. detach_role DELETE /operators/{operator_id}/users/{user_name}/roles/{role_id} Detach Role from User. get_role GET /operators/{operator_id}/roles/{role_id} Get Role. list_role_attached_users GET /operators/{operator_id}/roles/{role_id}/users List Role Attached Users. list_roles GET /operators/{operator_id}/roles List Roles. list_user_roles GET /operators/{operator_id}/users/{user_name}/roles List User Roles. update_role PUT /operators/{operator_id}/roles/{role_id} Update Role.","title":"soracom_api.RoleApi"},{"location":"api/docs/RoleApi/#attach_role","text":"attach_role(operator_id, user_name, attach_role_request) Attach Role to User. Attaches a role to a user.","title":"attach_role"},{"location":"api/docs/RoleApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.attach_role_request import AttachRoleRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name attach_role_request = AttachRoleRequest( role_id=\"role_id_example\", ) # AttachRoleRequest | role_id # example passing only required values which don't have defaults set try: # Attach Role to User. api_instance.attach_role(operator_id, user_name, attach_role_request) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->attach_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters","text":"Name Type Description Notes operator_id str operator_id user_name str user_name attach_role_request AttachRoleRequest role_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/RoleApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#create_role","text":"CreateRoleResponse create_role(operator_id, role_id, create_or_update_role_request) Create Role. Adds a new role.","title":"create_role"},{"location":"api/docs/RoleApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.create_or_update_role_request import CreateOrUpdateRoleRequest from soracom_api.model.create_role_response import CreateRoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id create_or_update_role_request = CreateOrUpdateRoleRequest( description=\"description_example\", permission=\"permission_example\", ) # CreateOrUpdateRoleRequest | permission # example passing only required values which don't have defaults set try: # Create Role. api_response = api_instance.create_role(operator_id, role_id, create_or_update_role_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->create_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id role_id str role_id create_or_update_role_request CreateOrUpdateRoleRequest permission","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_1","text":"CreateRoleResponse","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#delete_role","text":"delete_role(operator_id, role_id) Delete Role. Deletes a role.","title":"delete_role"},{"location":"api/docs/RoleApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Delete Role. api_instance.delete_role(operator_id, role_id) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->delete_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_2","text":"Name Type Description Notes operator_id str operator_id role_id str role_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_2","text":"Status code Description Response headers 204 The role was deleted. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#detach_role","text":"detach_role(operator_id, user_name, role_id) Detach Role from User. Detaches a role from a user.","title":"detach_role"},{"location":"api/docs/RoleApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Detach Role from User. api_instance.detach_role(operator_id, user_name, role_id) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->detach_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id user_name str user_name role_id str role_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#get_role","text":"RoleResponse get_role(operator_id, role_id) Get Role. Retrieves a role.","title":"get_role"},{"location":"api/docs/RoleApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.role_response import RoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # Get Role. api_response = api_instance.get_role(operator_id, role_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->get_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_4","text":"Name Type Description Notes operator_id str operator_id role_id str role_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_4","text":"RoleResponse","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#list_role_attached_users","text":"[UserDetailResponse] list_role_attached_users(operator_id, role_id) List Role Attached Users. Retrieves a list of users attached to a role.","title":"list_role_attached_users"},{"location":"api/docs/RoleApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id # example passing only required values which don't have defaults set try: # List Role Attached Users. api_response = api_instance.list_role_attached_users(operator_id, role_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_role_attached_users: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_5","text":"Name Type Description Notes operator_id str operator_id role_id str role_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_5","text":"[UserDetailResponse]","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_5","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#list_roles","text":"[ListRolesResponse] list_roles(operator_id) List Roles. Returns a list of roles.","title":"list_roles"},{"location":"api/docs/RoleApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.list_roles_response import ListRolesResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Roles. api_response = api_instance.list_roles(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_roles: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_6","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_6","text":"[ListRolesResponse]","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_6","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#list_user_roles","text":"[RoleResponse] list_user_roles(operator_id, user_name) List User Roles. Retrieves a list of the user's roles.","title":"list_user_roles"},{"location":"api/docs/RoleApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.role_response import RoleResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # List User Roles. api_response = api_instance.list_user_roles(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->list_user_roles: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_7","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_7","text":"[RoleResponse]","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_7","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleApi/#update_role","text":"update_role(operator_id, role_id, create_or_update_role_request) Update Role. Edits a role.","title":"update_role"},{"location":"api/docs/RoleApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import role_api from soracom_api.model.create_or_update_role_request import CreateOrUpdateRoleRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = role_api.RoleApi(api_client) operator_id = \"operator_id_example\" # str | operator_id role_id = \"role_id_example\" # str | role_id create_or_update_role_request = CreateOrUpdateRoleRequest( description=\"description_example\", permission=\"permission_example\", ) # CreateOrUpdateRoleRequest | permission # example passing only required values which don't have defaults set try: # Update Role. api_instance.update_role(operator_id, role_id, create_or_update_role_request) except soracom_api.ApiException as e: print(\"Exception when calling RoleApi->update_role: %s\\n\" % e)","title":"Example"},{"location":"api/docs/RoleApi/#parameters_8","text":"Name Type Description Notes operator_id str operator_id role_id str role_id create_or_update_role_request CreateOrUpdateRoleRequest permission","title":"Parameters"},{"location":"api/docs/RoleApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/RoleApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/RoleApi/#http-request-headers_8","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/RoleApi/#http-response-details_8","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/RoleResponse/","text":"RoleResponse \u00b6 Properties \u00b6 Name Type Description Notes create_date_time int [optional] description str [optional] permission str Permission\u306eJSON [optional] role_id str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RoleResponse"},{"location":"api/docs/RoleResponse/#roleresponse","text":"","title":"RoleResponse"},{"location":"api/docs/RoleResponse/#properties","text":"Name Type Description Notes create_date_time int [optional] description str [optional] permission str Permission\u306eJSON [optional] role_id str [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RoutingFilterEntry/","text":"RoutingFilterEntry \u00b6 Properties \u00b6 Name Type Description Notes action str Whether to allow or deny the outbound packets with a destination in the specified range ip_range str IPv4 address range in CIDR format, e.g. a.b.c.d/x any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RoutingFilterEntry"},{"location":"api/docs/RoutingFilterEntry/#routingfilterentry","text":"","title":"RoutingFilterEntry"},{"location":"api/docs/RoutingFilterEntry/#properties","text":"Name Type Description Notes action str Whether to allow or deny the outbound packets with a destination in the specified range ip_range str IPv4 address range in CIDR format, e.g. a.b.c.d/x any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RuleConfig/","text":"RuleConfig \u00b6 Properties \u00b6 Name Type Description Notes properties RuleConfigProperty type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RuleConfig"},{"location":"api/docs/RuleConfig/#ruleconfig","text":"","title":"RuleConfig"},{"location":"api/docs/RuleConfig/#properties","text":"Name Type Description Notes properties RuleConfigProperty type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/RuleConfigProperty/","text":"RuleConfigProperty \u00b6 Properties \u00b6 Name Type Description Notes inactive_timeout_date_const str limit_total_traffic_mega_byte str inactive_timeout_offset_minutes str [optional] run_once_among_target bool [optional] target_ota_status str Only for SimSubscriptionStatusRule [optional] target_speed_class str Only for SubscriberSpeedClassAttributeRule, SimSpeedClassAttributeRule [optional] target_status str Only for SubscriberStatusAttributeRule, SimStatusAttributeRule [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"RuleConfigProperty"},{"location":"api/docs/RuleConfigProperty/#ruleconfigproperty","text":"","title":"RuleConfigProperty"},{"location":"api/docs/RuleConfigProperty/#properties","text":"Name Type Description Notes inactive_timeout_date_const str limit_total_traffic_mega_byte str inactive_timeout_offset_minutes str [optional] run_once_among_target bool [optional] target_ota_status str Only for SimSubscriptionStatusRule [optional] target_speed_class str Only for SubscriberSpeedClassAttributeRule, SimSpeedClassAttributeRule [optional] target_status str Only for SubscriberStatusAttributeRule, SimStatusAttributeRule [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SessionEvent/","text":"SessionEvent \u00b6 Properties \u00b6 Name Type Description Notes apn str The Access Point Name configured. [optional] dns0 str First IP address of DNS servers. [optional] dns1 str Second IP address of DNS servers. [optional] event str The type of behavior for the event. Possible values are \\\"Created\\\" indicates the device created a new session, \\\"Modified\\\" indicates that an existing connection was modified, \\\"Deleted\\\" indicates a network connection was closed. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] imsi str The IMSI of the SIM. [optional] operator_id str The operator ID of the session event. [optional] time int The timestamp of the session event. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SessionEvent"},{"location":"api/docs/SessionEvent/#sessionevent","text":"","title":"SessionEvent"},{"location":"api/docs/SessionEvent/#properties","text":"Name Type Description Notes apn str The Access Point Name configured. [optional] dns0 str First IP address of DNS servers. [optional] dns1 str Second IP address of DNS servers. [optional] event str The type of behavior for the event. Possible values are \\\"Created\\\" indicates the device created a new session, \\\"Modified\\\" indicates that an existing connection was modified, \\\"Deleted\\\" indicates a network connection was closed. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] imsi str The IMSI of the SIM. [optional] operator_id str The operator ID of the session event. [optional] time int The timestamp of the session event. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SessionStatus/","text":"SessionStatus \u00b6 Properties \u00b6 Name Type Description Notes cell Cell [optional] dns_servers [str], none_type Array of IP address of the DNS servers. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] last_updated_at int [optional] online bool Whether or not the SIM is online. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SessionStatus"},{"location":"api/docs/SessionStatus/#sessionstatus","text":"","title":"SessionStatus"},{"location":"api/docs/SessionStatus/#properties","text":"Name Type Description Notes cell Cell [optional] dns_servers [str], none_type Array of IP address of the DNS servers. [optional] gateway_private_ip_address str [optional] gateway_public_ip_address str [optional] imei str, none_type The IMEI of the device using the SIM. [optional] last_updated_at int [optional] online bool Whether or not the SIM is online. [optional] ue_ip_address str, none_type The IP address of the device. [optional] vpg_id str The Virtual Private Gateway IP address configured. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetDeviceObjectModelScopeRequest/","text":"SetDeviceObjectModelScopeRequest \u00b6 Properties \u00b6 Name Type Description Notes scope str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetDeviceObjectModelScopeRequest"},{"location":"api/docs/SetDeviceObjectModelScopeRequest/#setdeviceobjectmodelscoperequest","text":"","title":"SetDeviceObjectModelScopeRequest"},{"location":"api/docs/SetDeviceObjectModelScopeRequest/#properties","text":"Name Type Description Notes scope str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetGroupRequest/","text":"SetGroupRequest \u00b6 Properties \u00b6 Name Type Description Notes group_id str, none_type [optional] tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetGroupRequest"},{"location":"api/docs/SetGroupRequest/#setgrouprequest","text":"","title":"SetGroupRequest"},{"location":"api/docs/SetGroupRequest/#properties","text":"Name Type Description Notes group_id str, none_type [optional] tags TagSet [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetImeiLockRequest/","text":"SetImeiLockRequest \u00b6 Properties \u00b6 Name Type Description Notes imei str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetImeiLockRequest"},{"location":"api/docs/SetImeiLockRequest/#setimeilockrequest","text":"","title":"SetImeiLockRequest"},{"location":"api/docs/SetImeiLockRequest/#properties","text":"Name Type Description Notes imei str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetNetworkSetRequest/","text":"SetNetworkSetRequest \u00b6 Properties \u00b6 Name Type Description Notes network_set_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetNetworkSetRequest"},{"location":"api/docs/SetNetworkSetRequest/#setnetworksetrequest","text":"","title":"SetNetworkSetRequest"},{"location":"api/docs/SetNetworkSetRequest/#properties","text":"Name Type Description Notes network_set_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetSystemNotificationsRequest/","text":"SetSystemNotificationsRequest \u00b6 Properties \u00b6 Name Type Description Notes email_id_list [str] password str Password of the operator. This is necessary when type is primary. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetSystemNotificationsRequest"},{"location":"api/docs/SetSystemNotificationsRequest/#setsystemnotificationsrequest","text":"","title":"SetSystemNotificationsRequest"},{"location":"api/docs/SetSystemNotificationsRequest/#properties","text":"Name Type Description Notes email_id_list [str] password str Password of the operator. This is necessary when type is primary. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SetUserPermissionRequest/","text":"SetUserPermissionRequest \u00b6 Properties \u00b6 Name Type Description Notes permission str JSON string of permissions description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SetUserPermissionRequest"},{"location":"api/docs/SetUserPermissionRequest/#setuserpermissionrequest","text":"","title":"SetUserPermissionRequest"},{"location":"api/docs/SetUserPermissionRequest/#properties","text":"Name Type Description Notes permission str JSON string of permissions description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ShippingAddressApi/","text":"soracom_api.ShippingAddressApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_shipping_address POST /operators/{operator_id}/shipping_addresses Create shipping address. delete_shipping_address DELETE /operators/{operator_id}/shipping_addresses/{shipping_address_id} Delete shipping address. get_shipping_address GET /operators/{operator_id}/shipping_addresses/{shipping_address_id} Get shipping address. list_shipping_addresses GET /operators/{operator_id}/shipping_addresses List shipping addresses. update_shipping_address PUT /operators/{operator_id}/shipping_addresses/{shipping_address_id} Update shipping address. create_shipping_address \u00b6 GetShippingAddressResponse create_shipping_address(operator_id, shipping_address_model) Create shipping address. Creates a new shipping address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.get_shipping_address_response import GetShippingAddressResponse from soracom_api.model.shipping_address_model import ShippingAddressModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_model = ShippingAddressModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", country_code=\"country_code_example\", department=\"department_example\", email=\"email_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # ShippingAddressModel | model # example passing only required values which don't have defaults set try: # Create shipping address. api_response = api_instance.create_shipping_address(operator_id, shipping_address_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->create_shipping_address: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id shipping_address_model ShippingAddressModel model Return type \u00b6 GetShippingAddressResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Shipping address was registered. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_shipping_address \u00b6 delete_shipping_address(operator_id, shipping_address_id) Delete shipping address. Deletes a shipping address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id # example passing only required values which don't have defaults set try: # Delete shipping address. api_instance.delete_shipping_address(operator_id, shipping_address_id) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->delete_shipping_address: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id shipping_address_id str shipping_address_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_shipping_address \u00b6 GetShippingAddressResponse get_shipping_address(operator_id, shipping_address_id) Get shipping address. Returns a shipping address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.get_shipping_address_response import GetShippingAddressResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id # example passing only required values which don't have defaults set try: # Get shipping address. api_response = api_instance.get_shipping_address(operator_id, shipping_address_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->get_shipping_address: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id shipping_address_id str shipping_address_id Return type \u00b6 GetShippingAddressResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_shipping_addresses \u00b6 ListShippingAddressResponse list_shipping_addresses(operator_id) List shipping addresses. Returns a list of shipping addresses. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.list_shipping_address_response import ListShippingAddressResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List shipping addresses. api_response = api_instance.list_shipping_addresses(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->list_shipping_addresses: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 ListShippingAddressResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_shipping_address \u00b6 update_shipping_address(operator_id, shipping_address_id, shipping_address_model) Update shipping address. Updates a shipping address. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.shipping_address_model import ShippingAddressModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id shipping_address_model = ShippingAddressModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", country_code=\"country_code_example\", department=\"department_example\", email=\"email_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # ShippingAddressModel | model # example passing only required values which don't have defaults set try: # Update shipping address. api_instance.update_shipping_address(operator_id, shipping_address_id, shipping_address_model) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->update_shipping_address: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID shipping_address_id str shipping_address_id shipping_address_model ShippingAddressModel model Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.ShippingAddressApi"},{"location":"api/docs/ShippingAddressApi/#soracom_apishippingaddressapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_shipping_address POST /operators/{operator_id}/shipping_addresses Create shipping address. delete_shipping_address DELETE /operators/{operator_id}/shipping_addresses/{shipping_address_id} Delete shipping address. get_shipping_address GET /operators/{operator_id}/shipping_addresses/{shipping_address_id} Get shipping address. list_shipping_addresses GET /operators/{operator_id}/shipping_addresses List shipping addresses. update_shipping_address PUT /operators/{operator_id}/shipping_addresses/{shipping_address_id} Update shipping address.","title":"soracom_api.ShippingAddressApi"},{"location":"api/docs/ShippingAddressApi/#create_shipping_address","text":"GetShippingAddressResponse create_shipping_address(operator_id, shipping_address_model) Create shipping address. Creates a new shipping address.","title":"create_shipping_address"},{"location":"api/docs/ShippingAddressApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.get_shipping_address_response import GetShippingAddressResponse from soracom_api.model.shipping_address_model import ShippingAddressModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_model = ShippingAddressModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", country_code=\"country_code_example\", department=\"department_example\", email=\"email_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # ShippingAddressModel | model # example passing only required values which don't have defaults set try: # Create shipping address. api_response = api_instance.create_shipping_address(operator_id, shipping_address_model) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->create_shipping_address: %s\\n\" % e)","title":"Example"},{"location":"api/docs/ShippingAddressApi/#parameters","text":"Name Type Description Notes operator_id str operator_id shipping_address_model ShippingAddressModel model","title":"Parameters"},{"location":"api/docs/ShippingAddressApi/#return-type","text":"GetShippingAddressResponse","title":"Return type"},{"location":"api/docs/ShippingAddressApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/ShippingAddressApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/ShippingAddressApi/#http-response-details","text":"Status code Description Response headers 201 Shipping address was registered. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ShippingAddressApi/#delete_shipping_address","text":"delete_shipping_address(operator_id, shipping_address_id) Delete shipping address. Deletes a shipping address.","title":"delete_shipping_address"},{"location":"api/docs/ShippingAddressApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id # example passing only required values which don't have defaults set try: # Delete shipping address. api_instance.delete_shipping_address(operator_id, shipping_address_id) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->delete_shipping_address: %s\\n\" % e)","title":"Example"},{"location":"api/docs/ShippingAddressApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id shipping_address_id str shipping_address_id","title":"Parameters"},{"location":"api/docs/ShippingAddressApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/ShippingAddressApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/ShippingAddressApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/ShippingAddressApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ShippingAddressApi/#get_shipping_address","text":"GetShippingAddressResponse get_shipping_address(operator_id, shipping_address_id) Get shipping address. Returns a shipping address.","title":"get_shipping_address"},{"location":"api/docs/ShippingAddressApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.get_shipping_address_response import GetShippingAddressResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id # example passing only required values which don't have defaults set try: # Get shipping address. api_response = api_instance.get_shipping_address(operator_id, shipping_address_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->get_shipping_address: %s\\n\" % e)","title":"Example"},{"location":"api/docs/ShippingAddressApi/#parameters_2","text":"Name Type Description Notes operator_id str operator_id shipping_address_id str shipping_address_id","title":"Parameters"},{"location":"api/docs/ShippingAddressApi/#return-type_2","text":"GetShippingAddressResponse","title":"Return type"},{"location":"api/docs/ShippingAddressApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/ShippingAddressApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/ShippingAddressApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ShippingAddressApi/#list_shipping_addresses","text":"ListShippingAddressResponse list_shipping_addresses(operator_id) List shipping addresses. Returns a list of shipping addresses.","title":"list_shipping_addresses"},{"location":"api/docs/ShippingAddressApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.list_shipping_address_response import ListShippingAddressResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List shipping addresses. api_response = api_instance.list_shipping_addresses(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->list_shipping_addresses: %s\\n\" % e)","title":"Example"},{"location":"api/docs/ShippingAddressApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/ShippingAddressApi/#return-type_3","text":"ListShippingAddressResponse","title":"Return type"},{"location":"api/docs/ShippingAddressApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/ShippingAddressApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/ShippingAddressApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ShippingAddressApi/#update_shipping_address","text":"update_shipping_address(operator_id, shipping_address_id, shipping_address_model) Update shipping address. Updates a shipping address.","title":"update_shipping_address"},{"location":"api/docs/ShippingAddressApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import shipping_address_api from soracom_api.model.shipping_address_model import ShippingAddressModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = shipping_address_api.ShippingAddressApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID shipping_address_id = \"shipping_address_id_example\" # str | shipping_address_id shipping_address_model = ShippingAddressModel( address_line1=\"address_line1_example\", address_line2=\"address_line2_example\", building=\"building_example\", city=\"city_example\", company_name=\"company_name_example\", country_code=\"country_code_example\", department=\"department_example\", email=\"email_example\", full_name=\"full_name_example\", phone_number=\"phone_number_example\", state=\"state_example\", zip_code=\"zip_code_example\", ) # ShippingAddressModel | model # example passing only required values which don't have defaults set try: # Update shipping address. api_instance.update_shipping_address(operator_id, shipping_address_id, shipping_address_model) except soracom_api.ApiException as e: print(\"Exception when calling ShippingAddressApi->update_shipping_address: %s\\n\" % e)","title":"Example"},{"location":"api/docs/ShippingAddressApi/#parameters_4","text":"Name Type Description Notes operator_id str Operator ID shipping_address_id str shipping_address_id shipping_address_model ShippingAddressModel model","title":"Parameters"},{"location":"api/docs/ShippingAddressApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/ShippingAddressApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/ShippingAddressApi/#http-request-headers_4","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/ShippingAddressApi/#http-response-details_4","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/ShippingAddressModel/","text":"ShippingAddressModel \u00b6 Shipping address Properties \u00b6 Name Type Description Notes address_line1 str city str state str zip_code str address_line2 str [optional] building str [optional] company_name str [optional] country_code str [optional] department str [optional] email str [optional] full_name str [optional] phone_number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ShippingAddressModel"},{"location":"api/docs/ShippingAddressModel/#shippingaddressmodel","text":"Shipping address","title":"ShippingAddressModel"},{"location":"api/docs/ShippingAddressModel/#properties","text":"Name Type Description Notes address_line1 str city str state str zip_code str address_line2 str [optional] building str [optional] company_name str [optional] country_code str [optional] department str [optional] email str [optional] full_name str [optional] phone_number str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/ShippingCostModel/","text":"ShippingCostModel \u00b6 Shipping cost Properties \u00b6 Name Type Description Notes shipping_area str (Japan coverage only) Shipping area [optional] shipping_area_name str Shipping Area name [optional] shipping_cost float Shipping Cost [optional] size int Size [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"ShippingCostModel"},{"location":"api/docs/ShippingCostModel/#shippingcostmodel","text":"Shipping cost","title":"ShippingCostModel"},{"location":"api/docs/ShippingCostModel/#properties","text":"Name Type Description Notes shipping_area str (Japan coverage only) Shipping area [optional] shipping_area_name str Shipping Area name [optional] shipping_cost float Shipping Cost [optional] size int Size [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SigfoxData/","text":"SigfoxData \u00b6 Properties \u00b6 Name Type Description Notes data str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SigfoxData"},{"location":"api/docs/SigfoxData/#sigfoxdata","text":"","title":"SigfoxData"},{"location":"api/docs/SigfoxData/#properties","text":"Name Type Description Notes data str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SigfoxDevice/","text":"SigfoxDevice \u00b6 Properties \u00b6 Name Type Description Notes device_id str [optional] group_id str, none_type [optional] last_modified_time datetime [optional] last_seen LastSeen [optional] operator_id str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SigfoxDevice"},{"location":"api/docs/SigfoxDevice/#sigfoxdevice","text":"","title":"SigfoxDevice"},{"location":"api/docs/SigfoxDevice/#properties","text":"Name Type Description Notes device_id str [optional] group_id str, none_type [optional] last_modified_time datetime [optional] last_seen LastSeen [optional] operator_id str [optional] status str [optional] tags {str: (str,)} [optional] termination_enabled bool [optional] if omitted the server will use the default value of False any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SigfoxDeviceApi/","text":"soracom_api.SigfoxDeviceApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_sigfox_device_tag DELETE /sigfox_devices/{device_id}/tags/{tag_name} Delete Sigfox device Tag. disable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/disable_termination Disable Termination of Sigfox device. enable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/enable_termination Enable Termination of Sigfox device. get_data_from_sigfox_device GET /sigfox_devices/{device_id}/data Get data sent from a Sigfox device. get_sigfox_device GET /sigfox_devices/{device_id} Get Sigfox device. list_sigfox_devices GET /sigfox_devices List Sigfox devices. put_sigfox_device_tags PUT /sigfox_devices/{device_id}/tags Bulk Insert or Update Sigfox device Tags. register_sigfox_device POST /sigfox_devices/{device_id}/register Register a Sigfox device. send_data_to_sigfox_device POST /sigfox_devices/{device_id}/data Send data to a Sigfox device. set_sigfox_device_group POST /sigfox_devices/{device_id}/set_group Set Group of Sigfox device. terminate_sigfox_device POST /sigfox_devices/{device_id}/terminate Terminate Sigfox device. unset_sigfox_device_group POST /sigfox_devices/{device_id}/unset_group Unset Group of Sigfox device. delete_sigfox_device_tag \u00b6 delete_sigfox_device_tag(device_id, tag_name) Delete Sigfox device Tag. Deletes a tag from the specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | device ID of the target Sigfox device. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Sigfox device Tag. api_instance.delete_sigfox_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->delete_sigfox_device_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str device ID of the target Sigfox device. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified Sigfox device or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_termination_on_sigfox_device \u00b6 SigfoxDevice disable_termination_on_sigfox_device(device_id) Disable Termination of Sigfox device. Disables termination of specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Disable Termination of Sigfox device. api_response = api_instance.disable_termination_on_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->disable_termination_on_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_termination_on_sigfox_device \u00b6 SigfoxDevice enable_termination_on_sigfox_device(device_id) Enable Termination of Sigfox device. Enables termination of specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Enable Termination of Sigfox device. api_response = api_instance.enable_termination_on_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->enable_termination_on_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_from_sigfox_device \u00b6 [DataEntry] get_data_from_sigfox_device(device_id) Get data sent from a Sigfox device. Returns a list of data entries sent from a Sigfox device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a Sigfox device. api_response = api_instance.get_data_from_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_data_from_sigfox_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a Sigfox device. api_response = api_instance.get_data_from_sigfox_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_data_from_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_sigfox_device \u00b6 SigfoxDevice get_sigfox_device(device_id) Get Sigfox device. Returns information about the specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Get Sigfox device. api_response = api_instance.get_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_sigfox_devices \u00b6 [SigfoxDevice] list_sigfox_devices() List Sigfox devices. Returns a list of Sigfox devices that match certain criteria. If the total number of Sigfox devices does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of Sigfox devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Sigfox devices. api_response = api_instance.list_sigfox_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->list_sigfox_devices: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of Sigfox devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional] Return type \u00b6 [SigfoxDevice] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of Sigfox devices. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_sigfox_device_tags \u00b6 SigfoxDevice put_sigfox_device_tags(device_id, tag_update_request) Bulk Insert or Update Sigfox device Tags. Inserts/updates tags for the specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update Sigfox device Tags. api_response = api_instance.put_sigfox_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->put_sigfox_device_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_sigfox_device \u00b6 SigfoxDevice register_sigfox_device(device_id, sigfox_registration_request) Register a Sigfox device. Registers a Sigfox device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from soracom_api.model.sigfox_registration_request import SigfoxRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target sigfox device to register sigfox_registration_request = SigfoxRegistrationRequest( registration_secret=\"registration_secret_example\", tags={ \"key\": \"key_example\", }, ) # SigfoxRegistrationRequest | Sigfox device registration request # example passing only required values which don't have defaults set try: # Register a Sigfox device. api_response = api_instance.register_sigfox_device(device_id, sigfox_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->register_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target sigfox device to register sigfox_registration_request SigfoxRegistrationRequest Sigfox device registration request Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Sigfox device successfully registered - 400 PAC code is missing - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_data_to_sigfox_device \u00b6 send_data_to_sigfox_device(device_id, sigfox_data) Send data to a Sigfox device. Sends data to the specified Sigfox device. The data will be stored until the device sends a next uplink message. If another message destined for the same Sigfox device ID is already waiting to be sent, the existing message will be discarded, and the new message will be sent instead. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_data import SigfoxData from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | ID of the recipient device. sigfox_data = SigfoxData( data=\"data_example\", ) # SigfoxData | Binary data encoded as a hexadecimal string. Length of original binary data must be 8 octets (16 characters when encoded as a hexadecimal string). # example passing only required values which don't have defaults set try: # Send data to a Sigfox device. api_instance.send_data_to_sigfox_device(device_id, sigfox_data) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->send_data_to_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str ID of the recipient device. sigfox_data SigfoxData Binary data encoded as a hexadecimal string. Length of original binary data must be 8 octets (16 characters when encoded as a hexadecimal string). Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Data has been received by server and waiting for the recipient device to retrieve. - 404 No such device found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_sigfox_device_group \u00b6 SigfoxDevice set_sigfox_device_group(device_id, group) Set Group of Sigfox device. Sets or overwrites a group for the specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of Sigfox device. api_response = api_instance.set_sigfox_device_group(device_id, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->set_sigfox_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. group Group Group (may include ID only). Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_sigfox_device \u00b6 SigfoxDevice terminate_sigfox_device(device_id) Terminate Sigfox device. Terminates the specified Sigfox device Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. delete_immediately = False # bool | If the Sigfox device is deleted immediately (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Terminate Sigfox device. api_response = api_instance.terminate_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->terminate_sigfox_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Terminate Sigfox device. api_response = api_instance.terminate_sigfox_device(device_id, delete_immediately=delete_immediately) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->terminate_sigfox_device: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. delete_immediately bool If the Sigfox device is deleted immediately [optional] if omitted the server will use the default value of False Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_sigfox_device_group \u00b6 SigfoxDevice unset_sigfox_device_group(device_id) Unset Group of Sigfox device. Removes the group configuration from the specified Sigfox device. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Unset Group of Sigfox device. api_response = api_instance.unset_sigfox_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->unset_sigfox_device_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes device_id str Device ID of the target Sigfox device. Return type \u00b6 SigfoxDevice Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist or the Sigfox device does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.SigfoxDeviceApi"},{"location":"api/docs/SigfoxDeviceApi/#soracom_apisigfoxdeviceapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_sigfox_device_tag DELETE /sigfox_devices/{device_id}/tags/{tag_name} Delete Sigfox device Tag. disable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/disable_termination Disable Termination of Sigfox device. enable_termination_on_sigfox_device POST /sigfox_devices/{device_id}/enable_termination Enable Termination of Sigfox device. get_data_from_sigfox_device GET /sigfox_devices/{device_id}/data Get data sent from a Sigfox device. get_sigfox_device GET /sigfox_devices/{device_id} Get Sigfox device. list_sigfox_devices GET /sigfox_devices List Sigfox devices. put_sigfox_device_tags PUT /sigfox_devices/{device_id}/tags Bulk Insert or Update Sigfox device Tags. register_sigfox_device POST /sigfox_devices/{device_id}/register Register a Sigfox device. send_data_to_sigfox_device POST /sigfox_devices/{device_id}/data Send data to a Sigfox device. set_sigfox_device_group POST /sigfox_devices/{device_id}/set_group Set Group of Sigfox device. terminate_sigfox_device POST /sigfox_devices/{device_id}/terminate Terminate Sigfox device. unset_sigfox_device_group POST /sigfox_devices/{device_id}/unset_group Unset Group of Sigfox device.","title":"soracom_api.SigfoxDeviceApi"},{"location":"api/docs/SigfoxDeviceApi/#delete_sigfox_device_tag","text":"delete_sigfox_device_tag(device_id, tag_name) Delete Sigfox device Tag. Deletes a tag from the specified Sigfox device.","title":"delete_sigfox_device_tag"},{"location":"api/docs/SigfoxDeviceApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | device ID of the target Sigfox device. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Sigfox device Tag. api_instance.delete_sigfox_device_tag(device_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->delete_sigfox_device_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters","text":"Name Type Description Notes device_id str device ID of the target Sigfox device. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified Sigfox device or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#disable_termination_on_sigfox_device","text":"SigfoxDevice disable_termination_on_sigfox_device(device_id) Disable Termination of Sigfox device. Disables termination of specified Sigfox device.","title":"disable_termination_on_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Disable Termination of Sigfox device. api_response = api_instance.disable_termination_on_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->disable_termination_on_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_1","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device.","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_1","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_1","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#enable_termination_on_sigfox_device","text":"SigfoxDevice enable_termination_on_sigfox_device(device_id) Enable Termination of Sigfox device. Enables termination of specified Sigfox device.","title":"enable_termination_on_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Enable Termination of Sigfox device. api_response = api_instance.enable_termination_on_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->enable_termination_on_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_2","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device.","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_2","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_2","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#get_data_from_sigfox_device","text":"[DataEntry] get_data_from_sigfox_device(device_id) Get data sent from a Sigfox device. Returns a list of data entries sent from a Sigfox device that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_from_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a Sigfox device. api_response = api_instance.get_data_from_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_data_from_sigfox_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a Sigfox device. api_response = api_instance.get_data_from_sigfox_device(device_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_data_from_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_3","text":"Name Type Description Notes device_id str Device ID of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_3","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_3","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#get_sigfox_device","text":"SigfoxDevice get_sigfox_device(device_id) Get Sigfox device. Returns information about the specified Sigfox device.","title":"get_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Get Sigfox device. api_response = api_instance.get_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->get_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_4","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device.","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_4","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_4","text":"Status code Description Response headers 200 The Sigfox device's detailed information. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#list_sigfox_devices","text":"[SigfoxDevice] list_sigfox_devices() List Sigfox devices. Returns a list of Sigfox devices that match certain criteria. If the total number of Sigfox devices does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_sigfox_devices"},{"location":"api/docs/SigfoxDeviceApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of Sigfox devices to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Sigfox devices. api_response = api_instance.list_sigfox_devices(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->list_sigfox_devices: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_5","text":"Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of Sigfox devices to retrieve. [optional] last_evaluated_key str The device ID of the last device retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next device onward. [optional]","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_5","text":"[SigfoxDevice]","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_5","text":"Status code Description Response headers 200 A list of Sigfox devices. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#put_sigfox_device_tags","text":"SigfoxDevice put_sigfox_device_tags(device_id, tag_update_request) Bulk Insert or Update Sigfox device Tags. Inserts/updates tags for the specified Sigfox device.","title":"put_sigfox_device_tags"},{"location":"api/docs/SigfoxDeviceApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update Sigfox device Tags. api_response = api_instance.put_sigfox_device_tags(device_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->put_sigfox_device_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_6","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_6","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_6","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#register_sigfox_device","text":"SigfoxDevice register_sigfox_device(device_id, sigfox_registration_request) Register a Sigfox device. Registers a Sigfox device","title":"register_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from soracom_api.model.sigfox_registration_request import SigfoxRegistrationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target sigfox device to register sigfox_registration_request = SigfoxRegistrationRequest( registration_secret=\"registration_secret_example\", tags={ \"key\": \"key_example\", }, ) # SigfoxRegistrationRequest | Sigfox device registration request # example passing only required values which don't have defaults set try: # Register a Sigfox device. api_response = api_instance.register_sigfox_device(device_id, sigfox_registration_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->register_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_7","text":"Name Type Description Notes device_id str Device ID of the target sigfox device to register sigfox_registration_request SigfoxRegistrationRequest Sigfox device registration request","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_7","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_7","text":"Status code Description Response headers 200 Sigfox device successfully registered - 400 PAC code is missing - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#send_data_to_sigfox_device","text":"send_data_to_sigfox_device(device_id, sigfox_data) Send data to a Sigfox device. Sends data to the specified Sigfox device. The data will be stored until the device sends a next uplink message. If another message destined for the same Sigfox device ID is already waiting to be sent, the existing message will be discarded, and the new message will be sent instead.","title":"send_data_to_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_data import SigfoxData from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | ID of the recipient device. sigfox_data = SigfoxData( data=\"data_example\", ) # SigfoxData | Binary data encoded as a hexadecimal string. Length of original binary data must be 8 octets (16 characters when encoded as a hexadecimal string). # example passing only required values which don't have defaults set try: # Send data to a Sigfox device. api_instance.send_data_to_sigfox_device(device_id, sigfox_data) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->send_data_to_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_8","text":"Name Type Description Notes device_id str ID of the recipient device. sigfox_data SigfoxData Binary data encoded as a hexadecimal string. Length of original binary data must be 8 octets (16 characters when encoded as a hexadecimal string).","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_8","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_8","text":"Status code Description Response headers 204 Data has been received by server and waiting for the recipient device to retrieve. - 404 No such device found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#set_sigfox_device_group","text":"SigfoxDevice set_sigfox_device_group(device_id, group) Set Group of Sigfox device. Sets or overwrites a group for the specified Sigfox device.","title":"set_sigfox_device_group"},{"location":"api/docs/SigfoxDeviceApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from soracom_api.model.group import Group from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. group = Group( configuration={}, created_time=1, group_id=\"group_id_example\", last_modified_time=1, operator_id=\"operator_id_example\", tags=TagSet( key=\"key_example\", ), ) # Group | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group of Sigfox device. api_response = api_instance.set_sigfox_device_group(device_id, group) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->set_sigfox_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_9","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device. group Group Group (may include ID only).","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_9","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_9","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_9","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#terminate_sigfox_device","text":"SigfoxDevice terminate_sigfox_device(device_id) Terminate Sigfox device. Terminates the specified Sigfox device","title":"terminate_sigfox_device"},{"location":"api/docs/SigfoxDeviceApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. delete_immediately = False # bool | If the Sigfox device is deleted immediately (optional) if omitted the server will use the default value of False # example passing only required values which don't have defaults set try: # Terminate Sigfox device. api_response = api_instance.terminate_sigfox_device(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->terminate_sigfox_device: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Terminate Sigfox device. api_response = api_instance.terminate_sigfox_device(device_id, delete_immediately=delete_immediately) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->terminate_sigfox_device: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_10","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device. delete_immediately bool If the Sigfox device is deleted immediately [optional] if omitted the server will use the default value of False","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_10","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_10","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxDeviceApi/#unset_sigfox_device_group","text":"SigfoxDevice unset_sigfox_device_group(device_id) Unset Group of Sigfox device. Removes the group configuration from the specified Sigfox device.","title":"unset_sigfox_device_group"},{"location":"api/docs/SigfoxDeviceApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sigfox_device_api from soracom_api.model.sigfox_device import SigfoxDevice from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sigfox_device_api.SigfoxDeviceApi(api_client) device_id = \"device_id_example\" # str | Device ID of the target Sigfox device. # example passing only required values which don't have defaults set try: # Unset Group of Sigfox device. api_response = api_instance.unset_sigfox_device_group(device_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SigfoxDeviceApi->unset_sigfox_device_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SigfoxDeviceApi/#parameters_11","text":"Name Type Description Notes device_id str Device ID of the target Sigfox device.","title":"Parameters"},{"location":"api/docs/SigfoxDeviceApi/#return-type_11","text":"SigfoxDevice","title":"Return type"},{"location":"api/docs/SigfoxDeviceApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SigfoxDeviceApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SigfoxDeviceApi/#http-response-details_11","text":"Status code Description Response headers 200 The Sigfox device's detailed information after the update. - 404 The specified Sigfox device does not exist or the Sigfox device does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SigfoxRegistrationRequest/","text":"SigfoxRegistrationRequest \u00b6 Properties \u00b6 Name Type Description Notes registration_secret str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SigfoxRegistrationRequest"},{"location":"api/docs/SigfoxRegistrationRequest/#sigfoxregistrationrequest","text":"","title":"SigfoxRegistrationRequest"},{"location":"api/docs/SigfoxRegistrationRequest/#properties","text":"Name Type Description Notes registration_secret str [optional] tags {str: (str,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Sim/","text":"Sim \u00b6 Properties \u00b6 Name Type Description Notes active_profile_id str [optional] arc_session_status ArcSessionStatus [optional] capabilities Capabilities [optional] created_time int [optional] expiry_action str, none_type [optional] expiry_time int, none_type [optional] group_id str, none_type [optional] imei_lock ImeiLock [optional] last_modified_time int [optional] last_port_mapping_created_time int, none_type [optional] local_info {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] module_type str [optional] operator_id str [optional] ota_serial_number str [optional] pcap_end_time int, none_type [optional] pcap_start_time int, none_type [optional] previous_session PreviousSessionStatus [optional] profiles {str: (SimProfile,)} [optional] serial_number str, none_type [optional] session_status SessionStatus [optional] sim_id str [optional] speed_class str [optional] status str [optional] tags TagSet [optional] termination_enabled bool [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Sim"},{"location":"api/docs/Sim/#sim","text":"","title":"Sim"},{"location":"api/docs/Sim/#properties","text":"Name Type Description Notes active_profile_id str [optional] arc_session_status ArcSessionStatus [optional] capabilities Capabilities [optional] created_time int [optional] expiry_action str, none_type [optional] expiry_time int, none_type [optional] group_id str, none_type [optional] imei_lock ImeiLock [optional] last_modified_time int [optional] last_port_mapping_created_time int, none_type [optional] local_info {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] module_type str [optional] operator_id str [optional] ota_serial_number str [optional] pcap_end_time int, none_type [optional] pcap_start_time int, none_type [optional] previous_session PreviousSessionStatus [optional] profiles {str: (SimProfile,)} [optional] serial_number str, none_type [optional] session_status SessionStatus [optional] sim_id str [optional] speed_class str [optional] status str [optional] tags TagSet [optional] termination_enabled bool [optional] type str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SimApi/","text":"soracom_api.SimApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_sim POST /sims/{sim_id}/activate Activate SIM. add_subscription POST /sims/{sim_id}/profiles/{iccid}/add_subscription Adds a new subscription container to a SIM profile attach_arc_sim_credentials POST /sims/{sim_id}/credentials/arc (DEPRECATED) Attach the credentials for Arc to a SIM. cancel_subscription_container_download POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download Cancel subscription download to subscription container create_arc_session POST /sims/{sim_id}/sessions/arc Re-create an Arc session. create_sim POST /sims Create a SIM. create_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions Create Packet Capture Session deactivate_sim POST /sims/{sim_id}/deactivate Deactivate SIM. delete_sim_packet_capture_session DELETE /sims/{sim_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session delete_sim_session POST /sims/{sim_id}/delete_session Delete Session delete_sim_tag DELETE /sims/{sim_id}/tags/{tag_name} Delete SIM tag. delete_subscription_container_country_mapping_entry DELETE /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc} Delete subscription container mapping entries disable_sim_termination POST /sims/{sim_id}/disable_termination Disable termination of the SIM. downlink_ping_to_user_equipment POST /sims/{sim_id}/downlink/ping Send ping requests to a SIM. enable_sim_termination POST /sims/{sim_id}/enable_termination Enable termination of the SIM. enable_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscription_containers/{containerId}/enable Enables a subscription container. get_data_from_sim GET /sims/{sim_id}/data Get data sent from a SIM. get_sim GET /sims/{sim_id} Get a SIM identified by sim_id get_sim_packet_capture_session GET /sims/{sim_id}/packet_capture_sessions/{session_id} Get Packet Capture Session list_sim_packet_capture_sessions GET /sims/{sim_id}/packet_capture_sessions List Packet Capture Sessions list_sim_session_events GET /sims/{sim_id}/events/sessions List Session Events. list_sims GET /sims List SIMs. list_subscription_containers GET /sims/{sim_id}/profiles/{iccid}/subscription_containers Get subscription container status. put_sim_tags PUT /sims/{sim_id}/tags Bulk insert or update SIM tags. put_subscription_container_country_mapping_entries PUT /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping Updates subscription container country mapping entries. register_sim POST /sims/{sim_id}/register Register SIM. remove_arc_sim_credentials DELETE /sims/{sim_id}/credentials/arc (DEPRECATED) Remove the credentials for Arc from a SIM. renew_arc_sim_credentials PUT /sims/{sim_id}/credentials/arc Renew the credentials for Arc to a SIM. report_sim_local_info POST /sims/{sim_id}/report_local_info Triggers SIM to report SIM local info. send_sms_to_sim POST /sims/{sim_id}/send_sms Send SMS to SIM set_sim_expiry_time POST /sims/{sim_id}/set_expiry_time Update expiry time of SIM. set_sim_group POST /sims/{sim_id}/set_group Set Group id of a SIM. set_sim_imei_lock POST /sims/{sim_id}/set_imei_lock Set IMEI lock configuration for the SIM. set_sim_to_standby POST /sims/{sim_id}/set_to_standby Set SIM to standby mode. stop_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions/{session_id}/stop Stop SIM Packet Capture Session suspend_sim POST /sims/{sim_id}/suspend Suspend SIM. terminate_sim POST /sims/{sim_id}/terminate Terminate SIM. terminate_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate Terminate subscription container unset_sim_expiry_time POST /sims/{sim_id}/unset_expiry_time Delete expiry time of the SIM. unset_sim_group POST /sims/{sim_id}/unset_group Unset Group to SIM. unset_sim_imei_lock POST /sims/{sim_id}/unset_imei_lock Unset IMEI lock configuration for SIM. update_sim_speed_class POST /sims/{sim_id}/update_speed_class Update SIM speed class. activate_sim \u00b6 Sim activate_sim(sim_id) Activate SIM. Change status of specified SIM to active. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Activate SIM. api_response = api_instance.activate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->activate_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] add_subscription \u00b6 SimProfile add_subscription(sim_id, iccid) Adds a new subscription container to a SIM profile This API is used to trigger the OTA update of a new subscription container to a SIM profile. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim_profile import SimProfile from soracom_api.model.inline_object3 import InlineObject3 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Id of the target SIM iccid = \"iccid_example\" # str | Iccid of the target profile inline_object3 = InlineObject3( enable=True, subscription=\"subscription_example\", type=\"virtual\", ) # InlineObject3 | (optional) # example passing only required values which don't have defaults set try: # Adds a new subscription container to a SIM profile api_response = api_instance.add_subscription(sim_id, iccid) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->add_subscription: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Adds a new subscription container to a SIM profile api_response = api_instance.add_subscription(sim_id, iccid, inline_object3=inline_object3) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->add_subscription: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Id of the target SIM iccid str Iccid of the target profile inline_object3 InlineObject3 [optional] Return type \u00b6 SimProfile Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The updated SIM profile - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] attach_arc_sim_credentials \u00b6 ArcCredentialAttachResponse attach_arc_sim_credentials(sim_id, arc_credential_attach_request) (DEPRECATED) Attach the credentials for Arc to a SIM. (DEPRECATED) Use this API to attach a set of credentials to a SIM. Please use renewArcSimCredentials API instead. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_credential_attach_request import ArcCredentialAttachRequest from soracom_api.model.arc_credential_attach_response import ArcCredentialAttachResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. arc_credential_attach_request = ArcCredentialAttachRequest( arc_client_peer_public_key=\"arc_client_peer_public_key_example\", ) # ArcCredentialAttachRequest | Arc credential attach request # example passing only required values which don't have defaults set try: # (DEPRECATED) Attach the credentials for Arc to a SIM. api_response = api_instance.attach_arc_sim_credentials(sim_id, arc_credential_attach_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->attach_arc_sim_credentials: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. arc_credential_attach_request ArcCredentialAttachRequest Arc credential attach request Return type \u00b6 ArcCredentialAttachResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Arc credential attach response - [Back to top] [Back to API list] [Back to Model list] [Back to README] cancel_subscription_container_download \u00b6 SubscriptionContainerStatus cancel_subscription_container_download(sim_id, iccid, imsi) Cancel subscription download to subscription container Cancel the download of subscription before it gets downloaded to the SIM. The condition is that the status of the subscription is still shipped Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target subscription container. iccid = \"iccid_example\" # str | ICCID of the target subscription container. imsi = \"imsi_example\" # str | IMSI of the target subscription container. # example passing only required values which don't have defaults set try: # Cancel subscription download to subscription container api_response = api_instance.cancel_subscription_container_download(sim_id, iccid, imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->cancel_subscription_container_download: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target subscription container. iccid str ICCID of the target subscription container. imsi str IMSI of the target subscription container. Return type \u00b6 SubscriptionContainerStatus Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_arc_session \u00b6 ArcSessionCreateResponse create_arc_session(sim_id) Re-create an Arc session. Use this API to re-activate a session for a virtual SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_session_create_response import ArcSessionCreateResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Re-create an Arc session. api_response = api_instance.create_arc_session(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_arc_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 ArcSessionCreateResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Arc session created - 400 Arc credentials missing - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_sim \u00b6 Sim create_sim(create_sim_request) Create a SIM. Creates a SIM for example for use with Arc service. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.create_sim_request import CreateSimRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) create_sim_request = CreateSimRequest( subscription=\"subscription_example\", type=\"virtual\", ) # CreateSimRequest | A SIM creation request # example passing only required values which don't have defaults set try: # Create a SIM. api_response = api_instance.create_sim(create_sim_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_sim_request CreateSimRequest A SIM creation request Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 SIM created. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_sim_packet_capture_session \u00b6 PacketCaptureSession create_sim_packet_capture_session(sim_id, packet_capture_session_request) Create Packet Capture Session Create a packet capture session associated with the SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session_request import PacketCaptureSessionRequest from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | The SIM ID for which a packet capture session is created packet_capture_session_request = PacketCaptureSessionRequest( duration=30, prefix=\"zBAMDTMv2D2ylmgd10Z3UB\", ) # PacketCaptureSessionRequest | A packet capture session request # example passing only required values which don't have defaults set try: # Create Packet Capture Session api_response = api_instance.create_sim_packet_capture_session(sim_id, packet_capture_session_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_sim_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str The SIM ID for which a packet capture session is created packet_capture_session_request PacketCaptureSessionRequest A packet capture session request Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Created a new packet capture sessions associated with the SIM - 404 No such sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] deactivate_sim \u00b6 Sim deactivate_sim(sim_id) Deactivate SIM. Change status of specified SIM to inactive. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Deactivate SIM. api_response = api_instance.deactivate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->deactivate_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_sim_packet_capture_session \u00b6 PacketCaptureSession delete_sim_packet_capture_session(sim_id, session_id) Delete Packet Capture Session Delete a packet capture session associated with the SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Delete Packet Capture Session api_response = api_instance.delete_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Deleted the packet capture session associated with the SIM - 400 Failed to delete the packet capture session associated with the SIM - 404 The packet capture session associated with the SIM was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_sim_session \u00b6 Sim delete_sim_session(sim_id) Delete Session Deletes session for the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Delete Session api_response = api_instance.delete_sim_session(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_sim_tag \u00b6 delete_sim_tag(sim_id, tag_name) Delete SIM tag. Deletes a tag from the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete SIM tag. api_instance.delete_sim_tag(sim_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Sim Id of the target SIM. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_subscription_container_country_mapping_entry \u00b6 SubscriptionContainerStatus delete_subscription_container_country_mapping_entry(sim_id, iccid, mcc) Delete subscription container mapping entries Delete subscription container country mapping entries Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile mcc = \"mcc_example\" # str | mobile country code # example passing only required values which don't have defaults set try: # Delete subscription container mapping entries api_response = api_instance.delete_subscription_container_country_mapping_entry(sim_id, iccid, mcc) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_subscription_container_country_mapping_entry: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile mcc str mobile country code Return type \u00b6 SubscriptionContainerStatus Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_sim_termination \u00b6 Sim disable_sim_termination(sim_id) Disable termination of the SIM. Disables termination of the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Disable termination of the SIM. api_response = api_instance.disable_sim_termination(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->disable_sim_termination: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] downlink_ping_to_user_equipment \u00b6 DownlinkPingResponse downlink_ping_to_user_equipment(sim_id, downlink_ping_request) Send ping requests to a SIM. Send ICMP ping requests to a SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.downlink_ping_response import DownlinkPingResponse from soracom_api.model.downlink_ping_request import DownlinkPingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. downlink_ping_request = DownlinkPingRequest( number_of_ping_requests=1, timeout_seconds=1, ) # DownlinkPingRequest | ping options # example passing only required values which don't have defaults set try: # Send ping requests to a SIM. api_response = api_instance.downlink_ping_to_user_equipment(sim_id, downlink_ping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->downlink_ping_to_user_equipment: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. downlink_ping_request DownlinkPingRequest ping options Return type \u00b6 DownlinkPingResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Result of the ping - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_sim_termination \u00b6 Sim enable_sim_termination(sim_id) Enable termination of the SIM. Enables termination of specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Enable termination of the SIM. api_response = api_instance.enable_sim_termination(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->enable_sim_termination: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_subscription_container \u00b6 SubscriptionContainerStatus enable_subscription_container(sim_id, iccid, container_id) Enables a subscription container. Causes the identified container to become the active one on the Sim. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile container_id = \"containerId_example\" # str | Identifier of the target container # example passing only required values which don't have defaults set try: # Enables a subscription container. api_response = api_instance.enable_subscription_container(sim_id, iccid, container_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->enable_subscription_container: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile container_id str Identifier of the target container Return type \u00b6 SubscriptionContainerStatus Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_from_sim \u00b6 [DataEntry] get_data_from_sim(sim_id) Get data sent from a SIM. Returns a list of data entries sent from a SIM that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a SIM. api_response = api_instance.get_data_from_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_data_from_sim: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a SIM. api_response = api_instance.get_data_from_sim(sim_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_data_from_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Sim Id of the target SIM. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_sim \u00b6 Sim get_sim(sim_id) Get a SIM identified by sim_id Obtain a SIM record identified by the sim_id Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Id of the target SIM # example passing only required values which don't have defaults set try: # Get a SIM identified by sim_id api_response = api_instance.get_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Id of the target SIM Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A SIM identified by sim_id - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_sim_packet_capture_session \u00b6 PacketCaptureSession get_sim_packet_capture_session(sim_id, session_id) Get Packet Capture Session Get a packet capture sessions associated the SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Get Packet Capture Session api_response = api_instance.get_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_sim_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The packet capture session associated with the SIM - 404 The packet capture session associated with the SIM was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_sim_packet_capture_sessions \u00b6 [PacketCaptureSession] list_sim_packet_capture_sessions(sim_id) List Packet Capture Sessions List packet capture sessions associated with the SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last packet capture session in the previous page (optional) limit = 10 # int | Max number of results in a response (optional) if omitted the server will use the default value of 10 # example passing only required values which don't have defaults set try: # List Packet Capture Sessions api_response = api_instance.list_sim_packet_capture_sessions(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_packet_capture_sessions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Packet Capture Sessions api_response = api_instance.list_sim_packet_capture_sessions(sim_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_packet_capture_sessions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID last_evaluated_key str ID of the last packet capture session in the previous page [optional] limit int Max number of results in a response [optional] if omitted the server will use the default value of 10 Return type \u00b6 [PacketCaptureSession] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of packet capture sessions associated with the SIM - 404 No such sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_sim_session_events \u00b6 [SessionEvent] list_sim_session_events(sim_id) List Session Events. Returns the history of session creation, change, and deletion events occurred on the target SIM in the last 14 days. If the total number of events does not fit in one page, a URL for accessing the next page is returned in the Link header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.session_event import SessionEvent from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. _from = 1 # int | Start time for the events search range (unixtime). (optional) to = 1 # int | End time for the events search range (unixtime). (optional) limit = 1 # int | Maximum number of events to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. (optional) # example passing only required values which don't have defaults set try: # List Session Events. api_response = api_instance.list_sim_session_events(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_session_events: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Session Events. api_response = api_instance.list_sim_session_events(sim_id, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_session_events: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. _from int Start time for the events search range (unixtime). [optional] to int End time for the events search range (unixtime). [optional] limit int Maximum number of events to retrieve. [optional] last_evaluated_key str The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. [optional] Return type \u00b6 [SessionEvent] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of session events - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_sims \u00b6 [Sim] list_sims() List SIMs. Returns a list of SIMs that match certain criteria. If the total number of SIMs does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) limit = 1 # int | Maximum number of SIMs to retrieve. Setting a limit does not guarantee the number of sims returned in the response (i.e. the response may contain fewer sims than the specified limit). (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List SIMs. api_response = api_instance.list_sims(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sims: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes limit int Maximum number of SIMs to retrieve. Setting a limit does not guarantee the number of sims returned in the response (i.e. the response may contain fewer sims than the specified limit). [optional] last_evaluated_key str The ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. [optional] Return type \u00b6 [Sim] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of SIMs. - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_subscription_containers \u00b6 SubscriptionContainerStatus list_subscription_containers(sim_id, iccid) Get subscription container status. Returns a schema listing subscription containers and containing a map of PLMN codes to subscription containers Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile # example passing only required values which don't have defaults set try: # Get subscription container status. api_response = api_instance.list_subscription_containers(sim_id, iccid) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_subscription_containers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Sim Id of the target SIM. iccid str Iccid of the target profile Return type \u00b6 SubscriptionContainerStatus Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_sim_tags \u00b6 Sim put_sim_tags(sim_id, tag_update_request) Bulk insert or update SIM tags. Inserts/updates tags for the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk insert or update SIM tags. api_response = api_instance.put_sim_tags(sim_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->put_sim_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_subscription_container_country_mapping_entries \u00b6 SubscriptionContainerStatus put_subscription_container_country_mapping_entries(sim_id, iccid, mapping_entries) Updates subscription container country mapping entries. Inserts/updates Country (and optionally network) to subscription container mapping entries in the mapping table. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.mapping_entries import MappingEntries from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile mapping_entries = MappingEntries( mapping_entries=[ GlobalSimAppletPLMNRecord( container_id=1, mcc=\"mcc_example\", mnc=\"mnc_example\", ), ], ) # MappingEntries | collection of country (and optionally network) to subscription container mapping entries # example passing only required values which don't have defaults set try: # Updates subscription container country mapping entries. api_response = api_instance.put_subscription_container_country_mapping_entries(sim_id, iccid, mapping_entries) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->put_subscription_container_country_mapping_entries: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile mapping_entries MappingEntries collection of country (and optionally network) to subscription container mapping entries Return type \u00b6 SubscriptionContainerStatus Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_sim \u00b6 Sim register_sim(sim_id, register_sim_request) Register SIM. Registers a SIM to an operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.register_sim_request import RegisterSimRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. register_sim_request = RegisterSimRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags=[ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ], ) # RegisterSimRequest | A SIM registration request # example passing only required values which don't have defaults set try: # Register SIM. api_response = api_instance.register_sim(sim_id, register_sim_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->register_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. register_sim_request RegisterSimRequest A SIM registration request Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Sim registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README] remove_arc_sim_credentials \u00b6 remove_arc_sim_credentials(sim_id) (DEPRECATED) Remove the credentials for Arc from a SIM. (DEPRECATED) Use this API to remove the set of credentials for Arc from the specified SIM. Please do not use this API. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # (DEPRECATED) Remove the credentials for Arc from a SIM. api_instance.remove_arc_sim_credentials(sim_id) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->remove_arc_sim_credentials: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The credentials for Arc have been removed. - [Back to top] [Back to API list] [Back to Model list] [Back to README] renew_arc_sim_credentials \u00b6 ArcCredentialRenewResponse renew_arc_sim_credentials(sim_id, arc_credential_renew_request) Renew the credentials for Arc to a SIM. Use this API to attach a set of credentials to a SIM and re-initialize a session at once. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_credential_renew_request import ArcCredentialRenewRequest from soracom_api.model.arc_credential_renew_response import ArcCredentialRenewResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. arc_credential_renew_request = ArcCredentialRenewRequest( arc_client_peer_public_key=\"arc_client_peer_public_key_example\", ) # ArcCredentialRenewRequest | Arc credential attach request # example passing only required values which don't have defaults set try: # Renew the credentials for Arc to a SIM. api_response = api_instance.renew_arc_sim_credentials(sim_id, arc_credential_renew_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->renew_arc_sim_credentials: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. arc_credential_renew_request ArcCredentialRenewRequest Arc credential attach request Return type \u00b6 ArcCredentialRenewResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Arc credential attach response - [Back to top] [Back to API list] [Back to Model list] [Back to README] report_sim_local_info \u00b6 Subscriber report_sim_local_info(sim_id) Triggers SIM to report SIM local info. Triggers SIM to report SIM local info. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Triggers SIM to report SIM local info. api_response = api_instance.report_sim_local_info(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->report_sim_local_info: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 202 The local info reporting has successfully been triggered. The subscriber information is asynchronously updated when the SIM reports the information back. - 400 The specified SIM active subscriber does not support local info reporting feature. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_sms_to_sim \u00b6 SmsForwardingReport send_sms_to_sim(sim_id, sms_forwarding_request) Send SMS to SIM Send SMS to the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to SIM api_response = api_instance.send_sms_to_sim(sim_id, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->send_sms_to_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type. Return type \u00b6 SmsForwardingReport Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified SIM does not support SMS API. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_sim_expiry_time \u00b6 Sim set_sim_expiry_time(sim_id, expiry_time) Update expiry time of SIM. Updates expiry time of the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.expiry_time import ExpiryTime from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. expiry_time = ExpiryTime( expiry_action=\"doNothing\", expiry_time=1, ) # ExpiryTime | Expiry time after the update (unixtime: in milliseconds). # example passing only required values which don't have defaults set try: # Update expiry time of SIM. api_response = api_instance.set_sim_expiry_time(sim_id, expiry_time) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_expiry_time: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. expiry_time ExpiryTime Expiry time after the update (unixtime: in milliseconds). Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_sim_group \u00b6 Sim set_sim_group(sim_id, set_group_request) Set Group id of a SIM. Sets or overwrites a group for the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.set_group_request import SetGroupRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. set_group_request = SetGroupRequest( group_id=\"group_id_example\", tags=TagSet( key=\"key_example\", ), ) # SetGroupRequest | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group id of a SIM. api_response = api_instance.set_sim_group(sim_id, set_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. set_group_request SetGroupRequest Group (may include ID only). Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_sim_imei_lock \u00b6 Sim set_sim_imei_lock(sim_id) Set IMEI lock configuration for the SIM. Set IMEI that the SIM should be locked to. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.set_imei_lock_request import SetImeiLockRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. set_imei_lock_request = SetImeiLockRequest( imei=\"imei_example\", ) # SetImeiLockRequest | IMEI lock configuration for the SIM. (IMEI can be left blank for locking to the current IMEI of an online SIM.) (optional) # example passing only required values which don't have defaults set try: # Set IMEI lock configuration for the SIM. api_response = api_instance.set_sim_imei_lock(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_imei_lock: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set IMEI lock configuration for the SIM. api_response = api_instance.set_sim_imei_lock(sim_id, set_imei_lock_request=set_imei_lock_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_imei_lock: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. set_imei_lock_request SetImeiLockRequest IMEI lock configuration for the SIM. (IMEI can be left blank for locking to the current IMEI of an online SIM.) [optional] Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 400 Invalid IMEI string or SIM is offline and IMEI not specified. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_sim_to_standby \u00b6 Sim set_sim_to_standby(sim_id) Set SIM to standby mode. Set the specified SIM to standby mode. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Set SIM to standby mode. api_response = api_instance.set_sim_to_standby(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_to_standby: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 400 The specified SIM does not support standby mode. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] stop_sim_packet_capture_session \u00b6 PacketCaptureSession stop_sim_packet_capture_session(sim_id, session_id) Stop SIM Packet Capture Session Stop a packet capture session associated with the SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Stop SIM Packet Capture Session api_response = api_instance.stop_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->stop_sim_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The stopped packet capture session associated with the SIM - 400 The packet capture session can be stopped only when its status is CAPTURING - 404 The packet capture session associated with the SIM was not found - 500 The packet capture session could not be stopped - [Back to top] [Back to API list] [Back to Model list] [Back to README] suspend_sim \u00b6 Sim suspend_sim(sim_id) Suspend SIM. Suspends the specified SIM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Suspend SIM. api_response = api_instance.suspend_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->suspend_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_sim \u00b6 Sim terminate_sim(sim_id) Terminate SIM. Terminates the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Terminate SIM. api_response = api_instance.terminate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->terminate_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_subscription_container \u00b6 terminate_subscription_container(sim_id, iccid, imsi) Terminate subscription container Terminate subscription container. Currently this API supports only for virtual subscribers for SORACOM Arc service. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target subscription container. iccid = \"iccid_example\" # str | ICCID of the target subscription container. imsi = \"imsi_example\" # str | IMSI of the target subscription container. # example passing only required values which don't have defaults set try: # Terminate subscription container api_instance.terminate_subscription_container(sim_id, iccid, imsi) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->terminate_subscription_container: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target subscription container. iccid str ICCID of the target subscription container. imsi str IMSI of the target subscription container. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 The subscription container has been terminated. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_sim_expiry_time \u00b6 unset_sim_expiry_time(sim_id) Delete expiry time of the SIM. Deletes expiry time of specified SIM and changes it to indefinite. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Delete expiry time of the SIM. api_instance.unset_sim_expiry_time(sim_id) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_expiry_time: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Change of specified SIM's expiry time to indefinite complete. - 404 The specified SIM does not exist or the SIM does not have an expiry time. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_sim_group \u00b6 Sim unset_sim_group(sim_id) Unset Group to SIM. Removes the group configuration from the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Unset Group to SIM. api_response = api_instance.unset_sim_group(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist or the SIM does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_sim_imei_lock \u00b6 Sim unset_sim_imei_lock(sim_id) Unset IMEI lock configuration for SIM. Remove any existing IMEI lock configuration for the SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. # example passing only required values which don't have defaults set try: # Unset IMEI lock configuration for SIM. api_response = api_instance.unset_sim_imei_lock(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_imei_lock: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str Sim Id of the target SIM. Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_sim_speed_class \u00b6 Sim update_sim_speed_class(sim_id, update_speed_class_request) Update SIM speed class. Changes the speed class of the specified SIM. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.update_speed_class_request import UpdateSpeedClassRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. update_speed_class_request = UpdateSpeedClassRequest( speed_class=\"s1.minimum\", ) # UpdateSpeedClassRequest | speed_class # example passing only required values which don't have defaults set try: # Update SIM speed class. api_response = api_instance.update_sim_speed_class(sim_id, update_speed_class_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->update_sim_speed_class: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID of the target SIM. update_speed_class_request UpdateSpeedClassRequest speed_class Return type \u00b6 Sim Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.SimApi"},{"location":"api/docs/SimApi/#soracom_apisimapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_sim POST /sims/{sim_id}/activate Activate SIM. add_subscription POST /sims/{sim_id}/profiles/{iccid}/add_subscription Adds a new subscription container to a SIM profile attach_arc_sim_credentials POST /sims/{sim_id}/credentials/arc (DEPRECATED) Attach the credentials for Arc to a SIM. cancel_subscription_container_download POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download Cancel subscription download to subscription container create_arc_session POST /sims/{sim_id}/sessions/arc Re-create an Arc session. create_sim POST /sims Create a SIM. create_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions Create Packet Capture Session deactivate_sim POST /sims/{sim_id}/deactivate Deactivate SIM. delete_sim_packet_capture_session DELETE /sims/{sim_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session delete_sim_session POST /sims/{sim_id}/delete_session Delete Session delete_sim_tag DELETE /sims/{sim_id}/tags/{tag_name} Delete SIM tag. delete_subscription_container_country_mapping_entry DELETE /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc} Delete subscription container mapping entries disable_sim_termination POST /sims/{sim_id}/disable_termination Disable termination of the SIM. downlink_ping_to_user_equipment POST /sims/{sim_id}/downlink/ping Send ping requests to a SIM. enable_sim_termination POST /sims/{sim_id}/enable_termination Enable termination of the SIM. enable_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscription_containers/{containerId}/enable Enables a subscription container. get_data_from_sim GET /sims/{sim_id}/data Get data sent from a SIM. get_sim GET /sims/{sim_id} Get a SIM identified by sim_id get_sim_packet_capture_session GET /sims/{sim_id}/packet_capture_sessions/{session_id} Get Packet Capture Session list_sim_packet_capture_sessions GET /sims/{sim_id}/packet_capture_sessions List Packet Capture Sessions list_sim_session_events GET /sims/{sim_id}/events/sessions List Session Events. list_sims GET /sims List SIMs. list_subscription_containers GET /sims/{sim_id}/profiles/{iccid}/subscription_containers Get subscription container status. put_sim_tags PUT /sims/{sim_id}/tags Bulk insert or update SIM tags. put_subscription_container_country_mapping_entries PUT /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping Updates subscription container country mapping entries. register_sim POST /sims/{sim_id}/register Register SIM. remove_arc_sim_credentials DELETE /sims/{sim_id}/credentials/arc (DEPRECATED) Remove the credentials for Arc from a SIM. renew_arc_sim_credentials PUT /sims/{sim_id}/credentials/arc Renew the credentials for Arc to a SIM. report_sim_local_info POST /sims/{sim_id}/report_local_info Triggers SIM to report SIM local info. send_sms_to_sim POST /sims/{sim_id}/send_sms Send SMS to SIM set_sim_expiry_time POST /sims/{sim_id}/set_expiry_time Update expiry time of SIM. set_sim_group POST /sims/{sim_id}/set_group Set Group id of a SIM. set_sim_imei_lock POST /sims/{sim_id}/set_imei_lock Set IMEI lock configuration for the SIM. set_sim_to_standby POST /sims/{sim_id}/set_to_standby Set SIM to standby mode. stop_sim_packet_capture_session POST /sims/{sim_id}/packet_capture_sessions/{session_id}/stop Stop SIM Packet Capture Session suspend_sim POST /sims/{sim_id}/suspend Suspend SIM. terminate_sim POST /sims/{sim_id}/terminate Terminate SIM. terminate_subscription_container POST /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate Terminate subscription container unset_sim_expiry_time POST /sims/{sim_id}/unset_expiry_time Delete expiry time of the SIM. unset_sim_group POST /sims/{sim_id}/unset_group Unset Group to SIM. unset_sim_imei_lock POST /sims/{sim_id}/unset_imei_lock Unset IMEI lock configuration for SIM. update_sim_speed_class POST /sims/{sim_id}/update_speed_class Update SIM speed class.","title":"soracom_api.SimApi"},{"location":"api/docs/SimApi/#activate_sim","text":"Sim activate_sim(sim_id) Activate SIM. Change status of specified SIM to active.","title":"activate_sim"},{"location":"api/docs/SimApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Activate SIM. api_response = api_instance.activate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->activate_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#add_subscription","text":"SimProfile add_subscription(sim_id, iccid) Adds a new subscription container to a SIM profile This API is used to trigger the OTA update of a new subscription container to a SIM profile.","title":"add_subscription"},{"location":"api/docs/SimApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim_profile import SimProfile from soracom_api.model.inline_object3 import InlineObject3 from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Id of the target SIM iccid = \"iccid_example\" # str | Iccid of the target profile inline_object3 = InlineObject3( enable=True, subscription=\"subscription_example\", type=\"virtual\", ) # InlineObject3 | (optional) # example passing only required values which don't have defaults set try: # Adds a new subscription container to a SIM profile api_response = api_instance.add_subscription(sim_id, iccid) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->add_subscription: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Adds a new subscription container to a SIM profile api_response = api_instance.add_subscription(sim_id, iccid, inline_object3=inline_object3) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->add_subscription: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_1","text":"Name Type Description Notes sim_id str Id of the target SIM iccid str Iccid of the target profile inline_object3 InlineObject3 [optional]","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_1","text":"SimProfile","title":"Return type"},{"location":"api/docs/SimApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_1","text":"Status code Description Response headers 200 The updated SIM profile - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#attach_arc_sim_credentials","text":"ArcCredentialAttachResponse attach_arc_sim_credentials(sim_id, arc_credential_attach_request) (DEPRECATED) Attach the credentials for Arc to a SIM. (DEPRECATED) Use this API to attach a set of credentials to a SIM. Please use renewArcSimCredentials API instead.","title":"attach_arc_sim_credentials"},{"location":"api/docs/SimApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_credential_attach_request import ArcCredentialAttachRequest from soracom_api.model.arc_credential_attach_response import ArcCredentialAttachResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. arc_credential_attach_request = ArcCredentialAttachRequest( arc_client_peer_public_key=\"arc_client_peer_public_key_example\", ) # ArcCredentialAttachRequest | Arc credential attach request # example passing only required values which don't have defaults set try: # (DEPRECATED) Attach the credentials for Arc to a SIM. api_response = api_instance.attach_arc_sim_credentials(sim_id, arc_credential_attach_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->attach_arc_sim_credentials: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_2","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. arc_credential_attach_request ArcCredentialAttachRequest Arc credential attach request","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_2","text":"ArcCredentialAttachResponse","title":"Return type"},{"location":"api/docs/SimApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_2","text":"Status code Description Response headers 200 Arc credential attach response - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#cancel_subscription_container_download","text":"SubscriptionContainerStatus cancel_subscription_container_download(sim_id, iccid, imsi) Cancel subscription download to subscription container Cancel the download of subscription before it gets downloaded to the SIM. The condition is that the status of the subscription is still shipped","title":"cancel_subscription_container_download"},{"location":"api/docs/SimApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target subscription container. iccid = \"iccid_example\" # str | ICCID of the target subscription container. imsi = \"imsi_example\" # str | IMSI of the target subscription container. # example passing only required values which don't have defaults set try: # Cancel subscription download to subscription container api_response = api_instance.cancel_subscription_container_download(sim_id, iccid, imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->cancel_subscription_container_download: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_3","text":"Name Type Description Notes sim_id str SIM ID of the target subscription container. iccid str ICCID of the target subscription container. imsi str IMSI of the target subscription container.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_3","text":"SubscriptionContainerStatus","title":"Return type"},{"location":"api/docs/SimApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_3","text":"Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#create_arc_session","text":"ArcSessionCreateResponse create_arc_session(sim_id) Re-create an Arc session. Use this API to re-activate a session for a virtual SIM.","title":"create_arc_session"},{"location":"api/docs/SimApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_session_create_response import ArcSessionCreateResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Re-create an Arc session. api_response = api_instance.create_arc_session(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_arc_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_4","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_4","text":"ArcSessionCreateResponse","title":"Return type"},{"location":"api/docs/SimApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_4","text":"Status code Description Response headers 200 Arc session created - 400 Arc credentials missing - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#create_sim","text":"Sim create_sim(create_sim_request) Create a SIM. Creates a SIM for example for use with Arc service.","title":"create_sim"},{"location":"api/docs/SimApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.create_sim_request import CreateSimRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) create_sim_request = CreateSimRequest( subscription=\"subscription_example\", type=\"virtual\", ) # CreateSimRequest | A SIM creation request # example passing only required values which don't have defaults set try: # Create a SIM. api_response = api_instance.create_sim(create_sim_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_5","text":"Name Type Description Notes create_sim_request CreateSimRequest A SIM creation request","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_5","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_5","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_5","text":"Status code Description Response headers 201 SIM created. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#create_sim_packet_capture_session","text":"PacketCaptureSession create_sim_packet_capture_session(sim_id, packet_capture_session_request) Create Packet Capture Session Create a packet capture session associated with the SIM","title":"create_sim_packet_capture_session"},{"location":"api/docs/SimApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session_request import PacketCaptureSessionRequest from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | The SIM ID for which a packet capture session is created packet_capture_session_request = PacketCaptureSessionRequest( duration=30, prefix=\"zBAMDTMv2D2ylmgd10Z3UB\", ) # PacketCaptureSessionRequest | A packet capture session request # example passing only required values which don't have defaults set try: # Create Packet Capture Session api_response = api_instance.create_sim_packet_capture_session(sim_id, packet_capture_session_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->create_sim_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_6","text":"Name Type Description Notes sim_id str The SIM ID for which a packet capture session is created packet_capture_session_request PacketCaptureSessionRequest A packet capture session request","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_6","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/SimApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_6","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_6","text":"Status code Description Response headers 200 Created a new packet capture sessions associated with the SIM - 404 No such sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#deactivate_sim","text":"Sim deactivate_sim(sim_id) Deactivate SIM. Change status of specified SIM to inactive.","title":"deactivate_sim"},{"location":"api/docs/SimApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Deactivate SIM. api_response = api_instance.deactivate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->deactivate_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_7","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_7","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_7","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#delete_sim_packet_capture_session","text":"PacketCaptureSession delete_sim_packet_capture_session(sim_id, session_id) Delete Packet Capture Session Delete a packet capture session associated with the SIM","title":"delete_sim_packet_capture_session"},{"location":"api/docs/SimApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Delete Packet Capture Session api_response = api_instance.delete_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_8","text":"Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_8","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/SimApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_8","text":"Status code Description Response headers 200 Deleted the packet capture session associated with the SIM - 400 Failed to delete the packet capture session associated with the SIM - 404 The packet capture session associated with the SIM was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#delete_sim_session","text":"Sim delete_sim_session(sim_id) Delete Session Deletes session for the specified SIM.","title":"delete_sim_session"},{"location":"api/docs/SimApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Delete Session api_response = api_instance.delete_sim_session(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_9","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_9","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_9","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#delete_sim_tag","text":"delete_sim_tag(sim_id, tag_name) Delete SIM tag. Deletes a tag from the specified SIM.","title":"delete_sim_tag"},{"location":"api/docs/SimApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete SIM tag. api_instance.delete_sim_tag(sim_id, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_sim_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_10","text":"Name Type Description Notes sim_id str Sim Id of the target SIM. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_10","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SimApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_10","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#delete_subscription_container_country_mapping_entry","text":"SubscriptionContainerStatus delete_subscription_container_country_mapping_entry(sim_id, iccid, mcc) Delete subscription container mapping entries Delete subscription container country mapping entries","title":"delete_subscription_container_country_mapping_entry"},{"location":"api/docs/SimApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile mcc = \"mcc_example\" # str | mobile country code # example passing only required values which don't have defaults set try: # Delete subscription container mapping entries api_response = api_instance.delete_subscription_container_country_mapping_entry(sim_id, iccid, mcc) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->delete_subscription_container_country_mapping_entry: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_11","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile mcc str mobile country code","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_11","text":"SubscriptionContainerStatus","title":"Return type"},{"location":"api/docs/SimApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_11","text":"Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#disable_sim_termination","text":"Sim disable_sim_termination(sim_id) Disable termination of the SIM. Disables termination of the specified SIM.","title":"disable_sim_termination"},{"location":"api/docs/SimApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Disable termination of the SIM. api_response = api_instance.disable_sim_termination(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->disable_sim_termination: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_12","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_12","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_12","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#downlink_ping_to_user_equipment","text":"DownlinkPingResponse downlink_ping_to_user_equipment(sim_id, downlink_ping_request) Send ping requests to a SIM. Send ICMP ping requests to a SIM.","title":"downlink_ping_to_user_equipment"},{"location":"api/docs/SimApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.downlink_ping_response import DownlinkPingResponse from soracom_api.model.downlink_ping_request import DownlinkPingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. downlink_ping_request = DownlinkPingRequest( number_of_ping_requests=1, timeout_seconds=1, ) # DownlinkPingRequest | ping options # example passing only required values which don't have defaults set try: # Send ping requests to a SIM. api_response = api_instance.downlink_ping_to_user_equipment(sim_id, downlink_ping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->downlink_ping_to_user_equipment: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_13","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. downlink_ping_request DownlinkPingRequest ping options","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_13","text":"DownlinkPingResponse","title":"Return type"},{"location":"api/docs/SimApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_13","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_13","text":"Status code Description Response headers 200 Result of the ping - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#enable_sim_termination","text":"Sim enable_sim_termination(sim_id) Enable termination of the SIM. Enables termination of specified SIM.","title":"enable_sim_termination"},{"location":"api/docs/SimApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Enable termination of the SIM. api_response = api_instance.enable_sim_termination(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->enable_sim_termination: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_14","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_14","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_14","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#enable_subscription_container","text":"SubscriptionContainerStatus enable_subscription_container(sim_id, iccid, container_id) Enables a subscription container. Causes the identified container to become the active one on the Sim.","title":"enable_subscription_container"},{"location":"api/docs/SimApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile container_id = \"containerId_example\" # str | Identifier of the target container # example passing only required values which don't have defaults set try: # Enables a subscription container. api_response = api_instance.enable_subscription_container(sim_id, iccid, container_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->enable_subscription_container: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_15","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile container_id str Identifier of the target container","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_15","text":"SubscriptionContainerStatus","title":"Return type"},{"location":"api/docs/SimApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_15","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_15","text":"Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#get_data_from_sim","text":"[DataEntry] get_data_from_sim(sim_id) Get data sent from a SIM. Returns a list of data entries sent from a SIM that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_from_sim"},{"location":"api/docs/SimApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a SIM. api_response = api_instance.get_data_from_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_data_from_sim: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a SIM. api_response = api_instance.get_data_from_sim(sim_id, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_data_from_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_16","text":"Name Type Description Notes sim_id str Sim Id of the target SIM. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_16","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/SimApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_16","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_16","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#get_sim","text":"Sim get_sim(sim_id) Get a SIM identified by sim_id Obtain a SIM record identified by the sim_id","title":"get_sim"},{"location":"api/docs/SimApi/#example_17","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Id of the target SIM # example passing only required values which don't have defaults set try: # Get a SIM identified by sim_id api_response = api_instance.get_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_17","text":"Name Type Description Notes sim_id str Id of the target SIM","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_17","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_17","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_17","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_17","text":"Status code Description Response headers 200 A SIM identified by sim_id - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#get_sim_packet_capture_session","text":"PacketCaptureSession get_sim_packet_capture_session(sim_id, session_id) Get Packet Capture Session Get a packet capture sessions associated the SIM","title":"get_sim_packet_capture_session"},{"location":"api/docs/SimApi/#example_18","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Get Packet Capture Session api_response = api_instance.get_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->get_sim_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_18","text":"Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_18","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/SimApi/#authorization_18","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_18","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_18","text":"Status code Description Response headers 200 The packet capture session associated with the SIM - 404 The packet capture session associated with the SIM was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#list_sim_packet_capture_sessions","text":"[PacketCaptureSession] list_sim_packet_capture_sessions(sim_id) List Packet Capture Sessions List packet capture sessions associated with the SIM","title":"list_sim_packet_capture_sessions"},{"location":"api/docs/SimApi/#example_19","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID last_evaluated_key = \"last_evaluated_key_example\" # str | ID of the last packet capture session in the previous page (optional) limit = 10 # int | Max number of results in a response (optional) if omitted the server will use the default value of 10 # example passing only required values which don't have defaults set try: # List Packet Capture Sessions api_response = api_instance.list_sim_packet_capture_sessions(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_packet_capture_sessions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Packet Capture Sessions api_response = api_instance.list_sim_packet_capture_sessions(sim_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_packet_capture_sessions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_19","text":"Name Type Description Notes sim_id str SIM ID last_evaluated_key str ID of the last packet capture session in the previous page [optional] limit int Max number of results in a response [optional] if omitted the server will use the default value of 10","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_19","text":"[PacketCaptureSession]","title":"Return type"},{"location":"api/docs/SimApi/#authorization_19","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_19","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_19","text":"Status code Description Response headers 200 List of packet capture sessions associated with the SIM - 404 No such sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#list_sim_session_events","text":"[SessionEvent] list_sim_session_events(sim_id) List Session Events. Returns the history of session creation, change, and deletion events occurred on the target SIM in the last 14 days. If the total number of events does not fit in one page, a URL for accessing the next page is returned in the Link header of the response.","title":"list_sim_session_events"},{"location":"api/docs/SimApi/#example_20","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.session_event import SessionEvent from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. _from = 1 # int | Start time for the events search range (unixtime). (optional) to = 1 # int | End time for the events search range (unixtime). (optional) limit = 1 # int | Maximum number of events to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. (optional) # example passing only required values which don't have defaults set try: # List Session Events. api_response = api_instance.list_sim_session_events(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_session_events: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Session Events. api_response = api_instance.list_sim_session_events(sim_id, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sim_session_events: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_20","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. _from int Start time for the events search range (unixtime). [optional] to int End time for the events search range (unixtime). [optional] limit int Maximum number of events to retrieve. [optional] last_evaluated_key str The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. [optional]","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_20","text":"[SessionEvent]","title":"Return type"},{"location":"api/docs/SimApi/#authorization_20","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_20","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_20","text":"Status code Description Response headers 200 A list of session events - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#list_sims","text":"[Sim] list_sims() List SIMs. Returns a list of SIMs that match certain criteria. If the total number of SIMs does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_sims"},{"location":"api/docs/SimApi/#example_21","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) limit = 1 # int | Maximum number of SIMs to retrieve. Setting a limit does not guarantee the number of sims returned in the response (i.e. the response may contain fewer sims than the specified limit). (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List SIMs. api_response = api_instance.list_sims(limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_sims: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_21","text":"Name Type Description Notes limit int Maximum number of SIMs to retrieve. Setting a limit does not guarantee the number of sims returned in the response (i.e. the response may contain fewer sims than the specified limit). [optional] last_evaluated_key str The ID of the last SIM retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next SIM onward. [optional]","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_21","text":"[Sim]","title":"Return type"},{"location":"api/docs/SimApi/#authorization_21","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_21","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_21","text":"Status code Description Response headers 200 A list of SIMs. - 404 No such SIM found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#list_subscription_containers","text":"SubscriptionContainerStatus list_subscription_containers(sim_id, iccid) Get subscription container status. Returns a schema listing subscription containers and containing a map of PLMN codes to subscription containers","title":"list_subscription_containers"},{"location":"api/docs/SimApi/#example_22","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile # example passing only required values which don't have defaults set try: # Get subscription container status. api_response = api_instance.list_subscription_containers(sim_id, iccid) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->list_subscription_containers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_22","text":"Name Type Description Notes sim_id str Sim Id of the target SIM. iccid str Iccid of the target profile","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_22","text":"SubscriptionContainerStatus","title":"Return type"},{"location":"api/docs/SimApi/#authorization_22","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_22","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_22","text":"Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#put_sim_tags","text":"Sim put_sim_tags(sim_id, tag_update_request) Bulk insert or update SIM tags. Inserts/updates tags for the specified SIM.","title":"put_sim_tags"},{"location":"api/docs/SimApi/#example_23","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk insert or update SIM tags. api_response = api_instance.put_sim_tags(sim_id, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->put_sim_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_23","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_23","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_23","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_23","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_23","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#put_subscription_container_country_mapping_entries","text":"SubscriptionContainerStatus put_subscription_container_country_mapping_entries(sim_id, iccid, mapping_entries) Updates subscription container country mapping entries. Inserts/updates Country (and optionally network) to subscription container mapping entries in the mapping table.","title":"put_subscription_container_country_mapping_entries"},{"location":"api/docs/SimApi/#example_24","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.mapping_entries import MappingEntries from soracom_api.model.subscription_container_status import SubscriptionContainerStatus from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. iccid = \"iccid_example\" # str | Iccid of the target profile mapping_entries = MappingEntries( mapping_entries=[ GlobalSimAppletPLMNRecord( container_id=1, mcc=\"mcc_example\", mnc=\"mnc_example\", ), ], ) # MappingEntries | collection of country (and optionally network) to subscription container mapping entries # example passing only required values which don't have defaults set try: # Updates subscription container country mapping entries. api_response = api_instance.put_subscription_container_country_mapping_entries(sim_id, iccid, mapping_entries) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->put_subscription_container_country_mapping_entries: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_24","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. iccid str Iccid of the target profile mapping_entries MappingEntries collection of country (and optionally network) to subscription container mapping entries","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_24","text":"SubscriptionContainerStatus","title":"Return type"},{"location":"api/docs/SimApi/#authorization_24","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_24","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_24","text":"Status code Description Response headers 200 A schema listing subscription containers and containing a map of PLMN codes to subscription containers. - 400 Missing parameter - 404 No such profile or sim found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#register_sim","text":"Sim register_sim(sim_id, register_sim_request) Register SIM. Registers a SIM to an operator.","title":"register_sim"},{"location":"api/docs/SimApi/#example_25","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.register_sim_request import RegisterSimRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. register_sim_request = RegisterSimRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags=[ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ], ) # RegisterSimRequest | A SIM registration request # example passing only required values which don't have defaults set try: # Register SIM. api_response = api_instance.register_sim(sim_id, register_sim_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->register_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_25","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. register_sim_request RegisterSimRequest A SIM registration request","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_25","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_25","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_25","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_25","text":"Status code Description Response headers 201 Sim registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#remove_arc_sim_credentials","text":"remove_arc_sim_credentials(sim_id) (DEPRECATED) Remove the credentials for Arc from a SIM. (DEPRECATED) Use this API to remove the set of credentials for Arc from the specified SIM. Please do not use this API.","title":"remove_arc_sim_credentials"},{"location":"api/docs/SimApi/#example_26","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # (DEPRECATED) Remove the credentials for Arc from a SIM. api_instance.remove_arc_sim_credentials(sim_id) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->remove_arc_sim_credentials: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_26","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_26","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SimApi/#authorization_26","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_26","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_26","text":"Status code Description Response headers 204 The credentials for Arc have been removed. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#renew_arc_sim_credentials","text":"ArcCredentialRenewResponse renew_arc_sim_credentials(sim_id, arc_credential_renew_request) Renew the credentials for Arc to a SIM. Use this API to attach a set of credentials to a SIM and re-initialize a session at once.","title":"renew_arc_sim_credentials"},{"location":"api/docs/SimApi/#example_27","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.arc_credential_renew_request import ArcCredentialRenewRequest from soracom_api.model.arc_credential_renew_response import ArcCredentialRenewResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. arc_credential_renew_request = ArcCredentialRenewRequest( arc_client_peer_public_key=\"arc_client_peer_public_key_example\", ) # ArcCredentialRenewRequest | Arc credential attach request # example passing only required values which don't have defaults set try: # Renew the credentials for Arc to a SIM. api_response = api_instance.renew_arc_sim_credentials(sim_id, arc_credential_renew_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->renew_arc_sim_credentials: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_27","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. arc_credential_renew_request ArcCredentialRenewRequest Arc credential attach request","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_27","text":"ArcCredentialRenewResponse","title":"Return type"},{"location":"api/docs/SimApi/#authorization_27","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_27","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_27","text":"Status code Description Response headers 200 Arc credential attach response - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#report_sim_local_info","text":"Subscriber report_sim_local_info(sim_id) Triggers SIM to report SIM local info. Triggers SIM to report SIM local info.","title":"report_sim_local_info"},{"location":"api/docs/SimApi/#example_28","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Triggers SIM to report SIM local info. api_response = api_instance.report_sim_local_info(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->report_sim_local_info: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_28","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_28","text":"Subscriber","title":"Return type"},{"location":"api/docs/SimApi/#authorization_28","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_28","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_28","text":"Status code Description Response headers 202 The local info reporting has successfully been triggered. The subscriber information is asynchronously updated when the SIM reports the information back. - 400 The specified SIM active subscriber does not support local info reporting feature. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#send_sms_to_sim","text":"SmsForwardingReport send_sms_to_sim(sim_id, sms_forwarding_request) Send SMS to SIM Send SMS to the specified SIM.","title":"send_sms_to_sim"},{"location":"api/docs/SimApi/#example_29","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to SIM api_response = api_instance.send_sms_to_sim(sim_id, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->send_sms_to_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_29","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_29","text":"SmsForwardingReport","title":"Return type"},{"location":"api/docs/SimApi/#authorization_29","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_29","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_29","text":"Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified SIM does not support SMS API. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#set_sim_expiry_time","text":"Sim set_sim_expiry_time(sim_id, expiry_time) Update expiry time of SIM. Updates expiry time of the specified SIM.","title":"set_sim_expiry_time"},{"location":"api/docs/SimApi/#example_30","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.expiry_time import ExpiryTime from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. expiry_time = ExpiryTime( expiry_action=\"doNothing\", expiry_time=1, ) # ExpiryTime | Expiry time after the update (unixtime: in milliseconds). # example passing only required values which don't have defaults set try: # Update expiry time of SIM. api_response = api_instance.set_sim_expiry_time(sim_id, expiry_time) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_expiry_time: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_30","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. expiry_time ExpiryTime Expiry time after the update (unixtime: in milliseconds).","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_30","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_30","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_30","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_30","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#set_sim_group","text":"Sim set_sim_group(sim_id, set_group_request) Set Group id of a SIM. Sets or overwrites a group for the specified SIM.","title":"set_sim_group"},{"location":"api/docs/SimApi/#example_31","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.set_group_request import SetGroupRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. set_group_request = SetGroupRequest( group_id=\"group_id_example\", tags=TagSet( key=\"key_example\", ), ) # SetGroupRequest | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group id of a SIM. api_response = api_instance.set_sim_group(sim_id, set_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_31","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. set_group_request SetGroupRequest Group (may include ID only).","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_31","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_31","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_31","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_31","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#set_sim_imei_lock","text":"Sim set_sim_imei_lock(sim_id) Set IMEI lock configuration for the SIM. Set IMEI that the SIM should be locked to.","title":"set_sim_imei_lock"},{"location":"api/docs/SimApi/#example_32","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.set_imei_lock_request import SetImeiLockRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. set_imei_lock_request = SetImeiLockRequest( imei=\"imei_example\", ) # SetImeiLockRequest | IMEI lock configuration for the SIM. (IMEI can be left blank for locking to the current IMEI of an online SIM.) (optional) # example passing only required values which don't have defaults set try: # Set IMEI lock configuration for the SIM. api_response = api_instance.set_sim_imei_lock(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_imei_lock: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set IMEI lock configuration for the SIM. api_response = api_instance.set_sim_imei_lock(sim_id, set_imei_lock_request=set_imei_lock_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_imei_lock: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_32","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. set_imei_lock_request SetImeiLockRequest IMEI lock configuration for the SIM. (IMEI can be left blank for locking to the current IMEI of an online SIM.) [optional]","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_32","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_32","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_32","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_32","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 400 Invalid IMEI string or SIM is offline and IMEI not specified. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#set_sim_to_standby","text":"Sim set_sim_to_standby(sim_id) Set SIM to standby mode. Set the specified SIM to standby mode.","title":"set_sim_to_standby"},{"location":"api/docs/SimApi/#example_33","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Set SIM to standby mode. api_response = api_instance.set_sim_to_standby(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->set_sim_to_standby: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_33","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_33","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_33","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_33","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_33","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 400 The specified SIM does not support standby mode. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#stop_sim_packet_capture_session","text":"PacketCaptureSession stop_sim_packet_capture_session(sim_id, session_id) Stop SIM Packet Capture Session Stop a packet capture session associated with the SIM","title":"stop_sim_packet_capture_session"},{"location":"api/docs/SimApi/#example_34","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Stop SIM Packet Capture Session api_response = api_instance.stop_sim_packet_capture_session(sim_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->stop_sim_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_34","text":"Name Type Description Notes sim_id str SIM ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_34","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/SimApi/#authorization_34","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_34","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_34","text":"Status code Description Response headers 200 The stopped packet capture session associated with the SIM - 400 The packet capture session can be stopped only when its status is CAPTURING - 404 The packet capture session associated with the SIM was not found - 500 The packet capture session could not be stopped - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#suspend_sim","text":"Sim suspend_sim(sim_id) Suspend SIM. Suspends the specified SIM","title":"suspend_sim"},{"location":"api/docs/SimApi/#example_35","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Suspend SIM. api_response = api_instance.suspend_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->suspend_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_35","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_35","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_35","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_35","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_35","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#terminate_sim","text":"Sim terminate_sim(sim_id) Terminate SIM. Terminates the specified SIM.","title":"terminate_sim"},{"location":"api/docs/SimApi/#example_36","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Terminate SIM. api_response = api_instance.terminate_sim(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->terminate_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_36","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_36","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_36","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_36","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_36","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#terminate_subscription_container","text":"terminate_subscription_container(sim_id, iccid, imsi) Terminate subscription container Terminate subscription container. Currently this API supports only for virtual subscribers for SORACOM Arc service.","title":"terminate_subscription_container"},{"location":"api/docs/SimApi/#example_37","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target subscription container. iccid = \"iccid_example\" # str | ICCID of the target subscription container. imsi = \"imsi_example\" # str | IMSI of the target subscription container. # example passing only required values which don't have defaults set try: # Terminate subscription container api_instance.terminate_subscription_container(sim_id, iccid, imsi) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->terminate_subscription_container: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_37","text":"Name Type Description Notes sim_id str SIM ID of the target subscription container. iccid str ICCID of the target subscription container. imsi str IMSI of the target subscription container.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_37","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SimApi/#authorization_37","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_37","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_37","text":"Status code Description Response headers 204 The subscription container has been terminated. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#unset_sim_expiry_time","text":"unset_sim_expiry_time(sim_id) Delete expiry time of the SIM. Deletes expiry time of specified SIM and changes it to indefinite.","title":"unset_sim_expiry_time"},{"location":"api/docs/SimApi/#example_38","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Delete expiry time of the SIM. api_instance.unset_sim_expiry_time(sim_id) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_expiry_time: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_38","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_38","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SimApi/#authorization_38","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_38","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_38","text":"Status code Description Response headers 204 Change of specified SIM's expiry time to indefinite complete. - 404 The specified SIM does not exist or the SIM does not have an expiry time. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#unset_sim_group","text":"Sim unset_sim_group(sim_id) Unset Group to SIM. Removes the group configuration from the specified SIM.","title":"unset_sim_group"},{"location":"api/docs/SimApi/#example_39","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. # example passing only required values which don't have defaults set try: # Unset Group to SIM. api_response = api_instance.unset_sim_group(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_39","text":"Name Type Description Notes sim_id str SIM ID of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_39","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_39","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_39","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_39","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist or the SIM does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#unset_sim_imei_lock","text":"Sim unset_sim_imei_lock(sim_id) Unset IMEI lock configuration for SIM. Remove any existing IMEI lock configuration for the SIM.","title":"unset_sim_imei_lock"},{"location":"api/docs/SimApi/#example_40","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | Sim Id of the target SIM. # example passing only required values which don't have defaults set try: # Unset IMEI lock configuration for SIM. api_response = api_instance.unset_sim_imei_lock(sim_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->unset_sim_imei_lock: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_40","text":"Name Type Description Notes sim_id str Sim Id of the target SIM.","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_40","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_40","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_40","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_40","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimApi/#update_sim_speed_class","text":"Sim update_sim_speed_class(sim_id, update_speed_class_request) Update SIM speed class. Changes the speed class of the specified SIM.","title":"update_sim_speed_class"},{"location":"api/docs/SimApi/#example_41","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import sim_api from soracom_api.model.update_speed_class_request import UpdateSpeedClassRequest from soracom_api.model.sim import Sim from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = sim_api.SimApi(api_client) sim_id = \"sim_id_example\" # str | SIM ID of the target SIM. update_speed_class_request = UpdateSpeedClassRequest( speed_class=\"s1.minimum\", ) # UpdateSpeedClassRequest | speed_class # example passing only required values which don't have defaults set try: # Update SIM speed class. api_response = api_instance.update_sim_speed_class(sim_id, update_speed_class_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SimApi->update_sim_speed_class: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SimApi/#parameters_41","text":"Name Type Description Notes sim_id str SIM ID of the target SIM. update_speed_class_request UpdateSpeedClassRequest speed_class","title":"Parameters"},{"location":"api/docs/SimApi/#return-type_41","text":"Sim","title":"Return type"},{"location":"api/docs/SimApi/#authorization_41","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SimApi/#http-request-headers_41","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SimApi/#http-response-details_41","text":"Status code Description Response headers 200 The SIM's detailed information after the update. - 404 The specified SIM does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SimProfile/","text":"SimProfile \u00b6 Properties \u00b6 Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] iccid str [optional] ota_supported bool [optional] primary_imsi str [optional] subscribers {str: (SimplifiedSubscriber,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SimProfile"},{"location":"api/docs/SimProfile/#simprofile","text":"","title":"SimProfile"},{"location":"api/docs/SimProfile/#properties","text":"Name Type Description Notes arc_client_peer_private_key str [optional] arc_client_peer_public_key str [optional] iccid str [optional] ota_supported bool [optional] primary_imsi str [optional] subscribers {str: (SimplifiedSubscriber,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SimplifiedSubscriber/","text":"SimplifiedSubscriber \u00b6 Properties \u00b6 Name Type Description Notes bundles [str] [optional] capabilities Capabilities [optional] imsi str [optional] msisdn str [optional] status str [optional] subscription str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SimplifiedSubscriber"},{"location":"api/docs/SimplifiedSubscriber/#simplifiedsubscriber","text":"","title":"SimplifiedSubscriber"},{"location":"api/docs/SimplifiedSubscriber/#properties","text":"Name Type Description Notes bundles [str] [optional] capabilities Capabilities [optional] imsi str [optional] msisdn str [optional] status str [optional] subscription str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SmsForwardingReport/","text":"SmsForwardingReport \u00b6 Properties \u00b6 Name Type Description Notes message_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SmsForwardingReport"},{"location":"api/docs/SmsForwardingReport/#smsforwardingreport","text":"","title":"SmsForwardingReport"},{"location":"api/docs/SmsForwardingReport/#properties","text":"Name Type Description Notes message_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SmsForwardingRequest/","text":"SmsForwardingRequest \u00b6 Properties \u00b6 Name Type Description Notes encoding_type int Encoding type of the message body. `1` indicates the body is `DCS_7BIT` that only supports single byte characters. `2` is `DCS_UCS2` that supports multi-byte text. When omitted, it is treated as `2` (`DCS_UCS2`). [optional] if omitted the server will use the default value of 2 payload str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SmsForwardingRequest"},{"location":"api/docs/SmsForwardingRequest/#smsforwardingrequest","text":"","title":"SmsForwardingRequest"},{"location":"api/docs/SmsForwardingRequest/#properties","text":"Name Type Description Notes encoding_type int Encoding type of the message body. `1` indicates the body is `DCS_7BIT` that only supports single byte characters. `2` is `DCS_UCS2` that supports multi-byte text. When omitted, it is treated as `2` (`DCS_UCS2`). [optional] if omitted the server will use the default value of 2 payload str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SoracomBeamStats/","text":"SoracomBeamStats \u00b6 Properties \u00b6 Name Type Description Notes count int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SoracomBeamStats"},{"location":"api/docs/SoracomBeamStats/#soracombeamstats","text":"","title":"SoracomBeamStats"},{"location":"api/docs/SoracomBeamStats/#properties","text":"Name Type Description Notes count int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/Soralet/","text":"Soralet \u00b6 Properties \u00b6 Name Type Description Notes created_time int [optional] description str [optional] operator_id str [optional] soralet_id str [optional] updated_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Soralet"},{"location":"api/docs/Soralet/#soralet","text":"","title":"Soralet"},{"location":"api/docs/Soralet/#properties","text":"Name Type Description Notes created_time int [optional] description str [optional] operator_id str [optional] soralet_id str [optional] updated_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SoraletApi/","text":"soracom_api.SoraletApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_soralet POST /soralets Create a Soralet. delete_soralet DELETE /soralets/{soralet_id} Delete Soralet. delete_soralet_version DELETE /soralets/{soralet_id}/versions/{version} Delete a Soralet version. get_soralet GET /soralets/{soralet_id} Get a Soralet. get_soralet_logs GET /soralets/{soralet_id}/logs Get log messages from Soralet. list_soralet_versions GET /soralets/{soralet_id}/versions List versions of Soralet. list_soralets GET /soralets List Soralets. test_soralet POST /soralets/{soralet_id}/test Execute Soralet with arguments. upload_soralet_code POST /soralets/{soralet_id}/versions Upload code and create a new version. create_soralet \u00b6 create_soralet(create_soralet_request) Create a Soralet. Create a Soralet. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.create_soralet_request import CreateSoraletRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) create_soralet_request = CreateSoraletRequest( description=\"description_example\", soralet_id=\"soralet_id_example\", ) # CreateSoraletRequest | request # example passing only required values which don't have defaults set try: # Create a Soralet. api_instance.create_soralet(create_soralet_request) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->create_soralet: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_soralet_request CreateSoraletRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Successfully created a new Soralet. - 400 The specified Soralet already exists or the specified soralet_id was invalid. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_soralet \u00b6 delete_soralet(soralet_id) Delete Soralet. Delete the specified Soralet. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. # example passing only required values which don't have defaults set try: # Delete Soralet. api_instance.delete_soralet(soralet_id) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->delete_soralet: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Successfully deleted the specified Soralet. - 404 The specified Soralet is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_soralet_version \u00b6 delete_soralet_version(soralet_id, version) Delete a Soralet version. Delete the specified Soralet version. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. version = 1 # int | Soralet version. # example passing only required values which don't have defaults set try: # Delete a Soralet version. api_instance.delete_soralet_version(soralet_id, version) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->delete_soralet_version: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. version int Soralet version. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Successfully deleted the specified Soralet version. - 404 The specified Soralet version is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_soralet \u00b6 Soralet get_soralet(soralet_id) Get a Soralet. Returns a Soralet. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet import Soralet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. # example passing only required values which don't have defaults set try: # Get a Soralet. api_response = api_instance.get_soralet(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. Return type \u00b6 Soralet Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - 404 The specified Soralet is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_soralet_logs \u00b6 [SoraletLog] get_soralet_logs(soralet_id) Get log messages from Soralet. Returns a list of log messages from the specified Soralet. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_log import SoraletLog from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. sort = \"desc\" # str | Sort order (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | The maximum number of items in a response. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last log message retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next log message onward. (optional) # example passing only required values which don't have defaults set try: # Get log messages from Soralet. api_response = api_instance.get_soralet_logs(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet_logs: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get log messages from Soralet. api_response = api_instance.get_soralet_logs(soralet_id, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet_logs: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. sort str Sort order [optional] if omitted the server will use the default value of \"desc\" limit int The maximum number of items in a response. [optional] last_evaluated_key str The identifier of the last log message retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next log message onward. [optional] Return type \u00b6 [SoraletLog] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_soralet_versions \u00b6 [SoraletVersion] list_soralet_versions(soralet_id) List versions of Soralet. Returns a list of Soralet versions. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_version import SoraletVersion from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. sort = \"desc\" # str | Sort order (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | The maximum number of items in a response. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last version retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next version onward. (optional) # example passing only required values which don't have defaults set try: # List versions of Soralet. api_response = api_instance.list_soralet_versions(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralet_versions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List versions of Soralet. api_response = api_instance.list_soralet_versions(soralet_id, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralet_versions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. sort str Sort order [optional] if omitted the server will use the default value of \"desc\" limit int The maximum number of items in a response. [optional] last_evaluated_key str The identifier of the last version retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next version onward. [optional] Return type \u00b6 [SoraletVersion] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_soralets \u00b6 [Soralet] list_soralets() List Soralets. Returns a list of Soralets. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet import Soralet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) sort = \"asc\" # str | Sort order (optional) if omitted the server will use the default value of \"asc\" limit = 1 # int | The maximum number of items in a response (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last Soralet retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Soralet onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Soralets. api_response = api_instance.list_soralets(sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralets: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sort str Sort order [optional] if omitted the server will use the default value of \"asc\" limit int The maximum number of items in a response [optional] last_evaluated_key str The identifier of the last Soralet retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Soralet onward. [optional] Return type \u00b6 [Soralet] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] test_soralet \u00b6 ExecuteSoraletResponse test_soralet(soralet_id, execute_soralet_request) Execute Soralet with arguments. Execute the specified Soralet with the specified arguments. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.execute_soralet_response import ExecuteSoraletResponse from soracom_api.model.execute_soralet_request import ExecuteSoraletRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. execute_soralet_request = ExecuteSoraletRequest( content_type=\"content_type_example\", direction=\"uplink\", encoding_type=\"text\", payload=\"payload_example\", source={ \"key\": SoraletDataSource( resource_id=\"resource_id_example\", resource_type=\"resource_type_example\", ), }, userdata=\"userdata_example\", version=\"version_example\", ) # ExecuteSoraletRequest | request # example passing only required values which don't have defaults set try: # Execute Soralet with arguments. api_response = api_instance.test_soralet(soralet_id, execute_soralet_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->test_soralet: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. execute_soralet_request ExecuteSoraletRequest request Return type \u00b6 ExecuteSoraletResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] upload_soralet_code \u00b6 SoraletVersion upload_soralet_code(soralet_id, body) Upload code and create a new version. Upload code and create a new version. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_version import SoraletVersion from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. body = open('/path/to/file', 'rb') # file_type | content_type = \"content-type_example\" # str | Content type of the file to upload (optional) # example passing only required values which don't have defaults set try: # Upload code and create a new version. api_response = api_instance.upload_soralet_code(soralet_id, body) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->upload_soralet_code: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Upload code and create a new version. api_response = api_instance.upload_soralet_code(soralet_id, body, content_type=content_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->upload_soralet_code: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes soralet_id str The identifier of Soralet. body file_type content_type str Content type of the file to upload [optional] Return type \u00b6 SoraletVersion Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 201 Successfully created a new version. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.SoraletApi"},{"location":"api/docs/SoraletApi/#soracom_apisoraletapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_soralet POST /soralets Create a Soralet. delete_soralet DELETE /soralets/{soralet_id} Delete Soralet. delete_soralet_version DELETE /soralets/{soralet_id}/versions/{version} Delete a Soralet version. get_soralet GET /soralets/{soralet_id} Get a Soralet. get_soralet_logs GET /soralets/{soralet_id}/logs Get log messages from Soralet. list_soralet_versions GET /soralets/{soralet_id}/versions List versions of Soralet. list_soralets GET /soralets List Soralets. test_soralet POST /soralets/{soralet_id}/test Execute Soralet with arguments. upload_soralet_code POST /soralets/{soralet_id}/versions Upload code and create a new version.","title":"soracom_api.SoraletApi"},{"location":"api/docs/SoraletApi/#create_soralet","text":"create_soralet(create_soralet_request) Create a Soralet. Create a Soralet.","title":"create_soralet"},{"location":"api/docs/SoraletApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.create_soralet_request import CreateSoraletRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) create_soralet_request = CreateSoraletRequest( description=\"description_example\", soralet_id=\"soralet_id_example\", ) # CreateSoraletRequest | request # example passing only required values which don't have defaults set try: # Create a Soralet. api_instance.create_soralet(create_soralet_request) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->create_soralet: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters","text":"Name Type Description Notes create_soralet_request CreateSoraletRequest request","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details","text":"Status code Description Response headers 201 Successfully created a new Soralet. - 400 The specified Soralet already exists or the specified soralet_id was invalid. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#delete_soralet","text":"delete_soralet(soralet_id) Delete Soralet. Delete the specified Soralet.","title":"delete_soralet"},{"location":"api/docs/SoraletApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. # example passing only required values which don't have defaults set try: # Delete Soralet. api_instance.delete_soralet(soralet_id) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->delete_soralet: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_1","text":"Name Type Description Notes soralet_id str The identifier of Soralet.","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_1","text":"Status code Description Response headers 204 Successfully deleted the specified Soralet. - 404 The specified Soralet is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#delete_soralet_version","text":"delete_soralet_version(soralet_id, version) Delete a Soralet version. Delete the specified Soralet version.","title":"delete_soralet_version"},{"location":"api/docs/SoraletApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. version = 1 # int | Soralet version. # example passing only required values which don't have defaults set try: # Delete a Soralet version. api_instance.delete_soralet_version(soralet_id, version) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->delete_soralet_version: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_2","text":"Name Type Description Notes soralet_id str The identifier of Soralet. version int Soralet version.","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_2","text":"Status code Description Response headers 204 Successfully deleted the specified Soralet version. - 404 The specified Soralet version is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#get_soralet","text":"Soralet get_soralet(soralet_id) Get a Soralet. Returns a Soralet.","title":"get_soralet"},{"location":"api/docs/SoraletApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet import Soralet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. # example passing only required values which don't have defaults set try: # Get a Soralet. api_response = api_instance.get_soralet(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_3","text":"Name Type Description Notes soralet_id str The identifier of Soralet.","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_3","text":"Soralet","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - 404 The specified Soralet is not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#get_soralet_logs","text":"[SoraletLog] get_soralet_logs(soralet_id) Get log messages from Soralet. Returns a list of log messages from the specified Soralet.","title":"get_soralet_logs"},{"location":"api/docs/SoraletApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_log import SoraletLog from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. sort = \"desc\" # str | Sort order (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | The maximum number of items in a response. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last log message retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next log message onward. (optional) # example passing only required values which don't have defaults set try: # Get log messages from Soralet. api_response = api_instance.get_soralet_logs(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet_logs: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get log messages from Soralet. api_response = api_instance.get_soralet_logs(soralet_id, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->get_soralet_logs: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_4","text":"Name Type Description Notes soralet_id str The identifier of Soralet. sort str Sort order [optional] if omitted the server will use the default value of \"desc\" limit int The maximum number of items in a response. [optional] last_evaluated_key str The identifier of the last log message retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next log message onward. [optional]","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_4","text":"[SoraletLog]","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#list_soralet_versions","text":"[SoraletVersion] list_soralet_versions(soralet_id) List versions of Soralet. Returns a list of Soralet versions.","title":"list_soralet_versions"},{"location":"api/docs/SoraletApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_version import SoraletVersion from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. sort = \"desc\" # str | Sort order (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | The maximum number of items in a response. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last version retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next version onward. (optional) # example passing only required values which don't have defaults set try: # List versions of Soralet. api_response = api_instance.list_soralet_versions(soralet_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralet_versions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List versions of Soralet. api_response = api_instance.list_soralet_versions(soralet_id, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralet_versions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_5","text":"Name Type Description Notes soralet_id str The identifier of Soralet. sort str Sort order [optional] if omitted the server will use the default value of \"desc\" limit int The maximum number of items in a response. [optional] last_evaluated_key str The identifier of the last version retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next version onward. [optional]","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_5","text":"[SoraletVersion]","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_5","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#list_soralets","text":"[Soralet] list_soralets() List Soralets. Returns a list of Soralets.","title":"list_soralets"},{"location":"api/docs/SoraletApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet import Soralet from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) sort = \"asc\" # str | Sort order (optional) if omitted the server will use the default value of \"asc\" limit = 1 # int | The maximum number of items in a response (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The identifier of the last Soralet retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Soralet onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Soralets. api_response = api_instance.list_soralets(sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->list_soralets: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_6","text":"Name Type Description Notes sort str Sort order [optional] if omitted the server will use the default value of \"asc\" limit int The maximum number of items in a response [optional] last_evaluated_key str The identifier of the last Soralet retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next Soralet onward. [optional]","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_6","text":"[Soralet]","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_6","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#test_soralet","text":"ExecuteSoraletResponse test_soralet(soralet_id, execute_soralet_request) Execute Soralet with arguments. Execute the specified Soralet with the specified arguments.","title":"test_soralet"},{"location":"api/docs/SoraletApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.execute_soralet_response import ExecuteSoraletResponse from soracom_api.model.execute_soralet_request import ExecuteSoraletRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. execute_soralet_request = ExecuteSoraletRequest( content_type=\"content_type_example\", direction=\"uplink\", encoding_type=\"text\", payload=\"payload_example\", source={ \"key\": SoraletDataSource( resource_id=\"resource_id_example\", resource_type=\"resource_type_example\", ), }, userdata=\"userdata_example\", version=\"version_example\", ) # ExecuteSoraletRequest | request # example passing only required values which don't have defaults set try: # Execute Soralet with arguments. api_response = api_instance.test_soralet(soralet_id, execute_soralet_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->test_soralet: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_7","text":"Name Type Description Notes soralet_id str The identifier of Soralet. execute_soralet_request ExecuteSoraletRequest request","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_7","text":"ExecuteSoraletResponse","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_7","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_7","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletApi/#upload_soralet_code","text":"SoraletVersion upload_soralet_code(soralet_id, body) Upload code and create a new version. Upload code and create a new version.","title":"upload_soralet_code"},{"location":"api/docs/SoraletApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import soralet_api from soracom_api.model.soralet_version import SoraletVersion from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = soralet_api.SoraletApi(api_client) soralet_id = \"soralet_id_example\" # str | The identifier of Soralet. body = open('/path/to/file', 'rb') # file_type | content_type = \"content-type_example\" # str | Content type of the file to upload (optional) # example passing only required values which don't have defaults set try: # Upload code and create a new version. api_response = api_instance.upload_soralet_code(soralet_id, body) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->upload_soralet_code: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Upload code and create a new version. api_response = api_instance.upload_soralet_code(soralet_id, body, content_type=content_type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SoraletApi->upload_soralet_code: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SoraletApi/#parameters_8","text":"Name Type Description Notes soralet_id str The identifier of Soralet. body file_type content_type str Content type of the file to upload [optional]","title":"Parameters"},{"location":"api/docs/SoraletApi/#return-type_8","text":"SoraletVersion","title":"Return type"},{"location":"api/docs/SoraletApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SoraletApi/#http-request-headers_8","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SoraletApi/#http-response-details_8","text":"Status code Description Response headers 201 Successfully created a new version. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SoraletDataSource/","text":"SoraletDataSource \u00b6 Properties \u00b6 Name Type Description Notes resource_id str resource_type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SoraletDataSource"},{"location":"api/docs/SoraletDataSource/#soraletdatasource","text":"","title":"SoraletDataSource"},{"location":"api/docs/SoraletDataSource/#properties","text":"Name Type Description Notes resource_id str resource_type str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SoraletLog/","text":"SoraletLog \u00b6 Properties \u00b6 Name Type Description Notes created_time int [optional] message str [optional] operator_id str [optional] soralet_id str [optional] version int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SoraletLog"},{"location":"api/docs/SoraletLog/#soraletlog","text":"","title":"SoraletLog"},{"location":"api/docs/SoraletLog/#properties","text":"Name Type Description Notes created_time int [optional] message str [optional] operator_id str [optional] soralet_id str [optional] version int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SoraletVersion/","text":"SoraletVersion \u00b6 Properties \u00b6 Name Type Description Notes created_time int [optional] hash str [optional] operator_id str [optional] size int [optional] soralet_id str [optional] srn str [optional] version int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SoraletVersion"},{"location":"api/docs/SoraletVersion/#soraletversion","text":"","title":"SoraletVersion"},{"location":"api/docs/SoraletVersion/#properties","text":"Name Type Description Notes created_time int [optional] hash str [optional] operator_id str [optional] size int [optional] soralet_id str [optional] srn str [optional] version int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/StatsApi/","text":"soracom_api.StatsApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description export_air_stats POST /stats/air/operators/{operator_id}/export Export Air Usage Report of All Subscribers. export_beam_stats POST /stats/beam/operators/{operator_id}/export Export Beam Usage Report of All Subscribers. get_air_stats GET /stats/air/subscribers/{imsi} Get Air Usage Report of Subscriber. get_air_stats_of_sim GET /stats/air/sims/{simId} Get Air Usage Report of SIM. get_beam_stats GET /stats/beam/subscribers/{imsi} Get Beam Usage Report of Subscriber. get_harvest_exported_data_stats GET /stats/harvest/operators/{operator_id} Get 'Harvest usage report' for the specified operator. get_napter_audit_logs_exported_data_stats GET /stats/napter/audit_logs Get Napter audit logs' monthly exported data stats export_air_stats \u00b6 FileExportResponse export_air_stats(operator_id, export_request) Export Air Usage Report of All Subscribers. Retrieves a file containing the usage report of all subscribers for the specified operator. The report data range is specified with from, to in unixtime. The report contains monthly data. The file output destination is AWS S3. The file output format is CSV. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.export_request import ExportRequest from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator_id export_request = ExportRequest( _from=1, period=\"month\", to=1, ) # ExportRequest | export time period export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export Air Usage Report of All Subscribers. api_response = api_instance.export_air_stats(operator_id, export_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_air_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export Air Usage Report of All Subscribers. api_response = api_instance.export_air_stats(operator_id, export_request, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_air_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id export_request ExportRequest export time period export_mode str export_mode (async, sync) [optional] Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_beam_stats \u00b6 FileExportResponse export_beam_stats(operator_id, export_request) Export Beam Usage Report of All Subscribers. Retrieves a file containing the usage report of all subscribers for the specified operator. The report data range is specified with from, to in unixtime. The report contains monthly data. The file output destination is AWS S3. The file output format is CSV. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.export_request import ExportRequest from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator ID export_request = ExportRequest( _from=1, period=\"month\", to=1, ) # ExportRequest | export time period export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export Beam Usage Report of All Subscribers. api_response = api_instance.export_beam_stats(operator_id, export_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_beam_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export Beam Usage Report of All Subscribers. api_response = api_instance.export_beam_stats(operator_id, export_request, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_beam_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator ID export_request ExportRequest export time period export_mode str export_mode (async, sync) [optional] Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_air_stats \u00b6 [AirStatsResponse] get_air_stats(imsi, _from, to, period) Get Air Usage Report of Subscriber. Retrieves the usage report for the subscriber specified by the IMSI. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.air_stats_response import AirStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | imsi _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Air Usage Report of Subscriber. api_response = api_instance.get_air_stats(imsi, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_air_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str imsi _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes. Return type \u00b6 [AirStatsResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_air_stats_of_sim \u00b6 [AirStatsResponse] get_air_stats_of_sim(sim_id, _from, to, period) Get Air Usage Report of SIM. Retrieves the usage report for the SIM specified by the simId. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.air_stats_response import AirStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) sim_id = \"simId_example\" # str | SIM ID _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Air Usage Report of SIM. api_response = api_instance.get_air_stats_of_sim(sim_id, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_air_stats_of_sim: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sim_id str SIM ID _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes. Return type \u00b6 [AirStatsResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_beam_stats \u00b6 [BeamStatsResponse] get_beam_stats(imsi, _from, to, period) Get Beam Usage Report of Subscriber. Retrieves the Soracom Beam usage report for the subscriber specified by the IMSI. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.beam_stats_response import BeamStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | imsi _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Beam Usage Report of Subscriber. api_response = api_instance.get_beam_stats(imsi, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_beam_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str imsi _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes. Return type \u00b6 [BeamStatsResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_harvest_exported_data_stats \u00b6 HarvestExportedDataStatsResponse get_harvest_exported_data_stats(operator_id) Get 'Harvest usage report' for the specified operator. Retrieves the SORACOM Harvest usage report for the operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.harvest_exported_data_stats_response import HarvestExportedDataStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator_id year_month = \"year_month_example\" # str | Year/Month in 'YYYYMM' format. (optional) # example passing only required values which don't have defaults set try: # Get 'Harvest usage report' for the specified operator. api_response = api_instance.get_harvest_exported_data_stats(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_harvest_exported_data_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get 'Harvest usage report' for the specified operator. api_response = api_instance.get_harvest_exported_data_stats(operator_id, year_month=year_month) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_harvest_exported_data_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id year_month str Year/Month in 'YYYYMM' format. [optional] Return type \u00b6 HarvestExportedDataStatsResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_napter_audit_logs_exported_data_stats \u00b6 NapterAuditLogsExportedDataStatsResponse get_napter_audit_logs_exported_data_stats() Get Napter audit logs' monthly exported data stats Get Napter audit logs' monthly exported data stats Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.napter_audit_logs_exported_data_stats_response import NapterAuditLogsExportedDataStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) year_month = \"year_month_example\" # str | Year/Month in 'YYYYMM' format. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get Napter audit logs' monthly exported data stats api_response = api_instance.get_napter_audit_logs_exported_data_stats(year_month=year_month) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_napter_audit_logs_exported_data_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes year_month str Year/Month in 'YYYYMM' format. [optional] Return type \u00b6 NapterAuditLogsExportedDataStatsResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.StatsApi"},{"location":"api/docs/StatsApi/#soracom_apistatsapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description export_air_stats POST /stats/air/operators/{operator_id}/export Export Air Usage Report of All Subscribers. export_beam_stats POST /stats/beam/operators/{operator_id}/export Export Beam Usage Report of All Subscribers. get_air_stats GET /stats/air/subscribers/{imsi} Get Air Usage Report of Subscriber. get_air_stats_of_sim GET /stats/air/sims/{simId} Get Air Usage Report of SIM. get_beam_stats GET /stats/beam/subscribers/{imsi} Get Beam Usage Report of Subscriber. get_harvest_exported_data_stats GET /stats/harvest/operators/{operator_id} Get 'Harvest usage report' for the specified operator. get_napter_audit_logs_exported_data_stats GET /stats/napter/audit_logs Get Napter audit logs' monthly exported data stats","title":"soracom_api.StatsApi"},{"location":"api/docs/StatsApi/#export_air_stats","text":"FileExportResponse export_air_stats(operator_id, export_request) Export Air Usage Report of All Subscribers. Retrieves a file containing the usage report of all subscribers for the specified operator. The report data range is specified with from, to in unixtime. The report contains monthly data. The file output destination is AWS S3. The file output format is CSV.","title":"export_air_stats"},{"location":"api/docs/StatsApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.export_request import ExportRequest from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator_id export_request = ExportRequest( _from=1, period=\"month\", to=1, ) # ExportRequest | export time period export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export Air Usage Report of All Subscribers. api_response = api_instance.export_air_stats(operator_id, export_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_air_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export Air Usage Report of All Subscribers. api_response = api_instance.export_air_stats(operator_id, export_request, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_air_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters","text":"Name Type Description Notes operator_id str operator_id export_request ExportRequest export time period export_mode str export_mode (async, sync) [optional]","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/StatsApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#export_beam_stats","text":"FileExportResponse export_beam_stats(operator_id, export_request) Export Beam Usage Report of All Subscribers. Retrieves a file containing the usage report of all subscribers for the specified operator. The report data range is specified with from, to in unixtime. The report contains monthly data. The file output destination is AWS S3. The file output format is CSV.","title":"export_beam_stats"},{"location":"api/docs/StatsApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.export_request import ExportRequest from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator ID export_request = ExportRequest( _from=1, period=\"month\", to=1, ) # ExportRequest | export time period export_mode = \"async\" # str | export_mode (async, sync) (optional) # example passing only required values which don't have defaults set try: # Export Beam Usage Report of All Subscribers. api_response = api_instance.export_beam_stats(operator_id, export_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_beam_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Export Beam Usage Report of All Subscribers. api_response = api_instance.export_beam_stats(operator_id, export_request, export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->export_beam_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_1","text":"Name Type Description Notes operator_id str operator ID export_request ExportRequest export time period export_mode str export_mode (async, sync) [optional]","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_1","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#get_air_stats","text":"[AirStatsResponse] get_air_stats(imsi, _from, to, period) Get Air Usage Report of Subscriber. Retrieves the usage report for the subscriber specified by the IMSI.","title":"get_air_stats"},{"location":"api/docs/StatsApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.air_stats_response import AirStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | imsi _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Air Usage Report of Subscriber. api_response = api_instance.get_air_stats(imsi, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_air_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_2","text":"Name Type Description Notes imsi str imsi _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes.","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_2","text":"[AirStatsResponse]","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#get_air_stats_of_sim","text":"[AirStatsResponse] get_air_stats_of_sim(sim_id, _from, to, period) Get Air Usage Report of SIM. Retrieves the usage report for the SIM specified by the simId.","title":"get_air_stats_of_sim"},{"location":"api/docs/StatsApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.air_stats_response import AirStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) sim_id = \"simId_example\" # str | SIM ID _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Air Usage Report of SIM. api_response = api_instance.get_air_stats_of_sim(sim_id, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_air_stats_of_sim: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_3","text":"Name Type Description Notes sim_id str SIM ID _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes.","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_3","text":"[AirStatsResponse]","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_3","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#get_beam_stats","text":"[BeamStatsResponse] get_beam_stats(imsi, _from, to, period) Get Beam Usage Report of Subscriber. Retrieves the Soracom Beam usage report for the subscriber specified by the IMSI.","title":"get_beam_stats"},{"location":"api/docs/StatsApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.beam_stats_response import BeamStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | imsi _from = 1 # int | Start time in unixtime for the aggregate data. to = 1 # int | End time in unixtime for the aggregate data. period = \"month\" # str | Units of aggregate data. For minutes, the interval is around 5 minutes. # example passing only required values which don't have defaults set try: # Get Beam Usage Report of Subscriber. api_response = api_instance.get_beam_stats(imsi, _from, to, period) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_beam_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_4","text":"Name Type Description Notes imsi str imsi _from int Start time in unixtime for the aggregate data. to int End time in unixtime for the aggregate data. period str Units of aggregate data. For minutes, the interval is around 5 minutes.","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_4","text":"[BeamStatsResponse]","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_4","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#get_harvest_exported_data_stats","text":"HarvestExportedDataStatsResponse get_harvest_exported_data_stats(operator_id) Get 'Harvest usage report' for the specified operator. Retrieves the SORACOM Harvest usage report for the operator.","title":"get_harvest_exported_data_stats"},{"location":"api/docs/StatsApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.harvest_exported_data_stats_response import HarvestExportedDataStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) operator_id = \"operator_id_example\" # str | operator_id year_month = \"year_month_example\" # str | Year/Month in 'YYYYMM' format. (optional) # example passing only required values which don't have defaults set try: # Get 'Harvest usage report' for the specified operator. api_response = api_instance.get_harvest_exported_data_stats(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_harvest_exported_data_stats: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get 'Harvest usage report' for the specified operator. api_response = api_instance.get_harvest_exported_data_stats(operator_id, year_month=year_month) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_harvest_exported_data_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_5","text":"Name Type Description Notes operator_id str operator_id year_month str Year/Month in 'YYYYMM' format. [optional]","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_5","text":"HarvestExportedDataStatsResponse","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_5","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/StatsApi/#get_napter_audit_logs_exported_data_stats","text":"NapterAuditLogsExportedDataStatsResponse get_napter_audit_logs_exported_data_stats() Get Napter audit logs' monthly exported data stats Get Napter audit logs' monthly exported data stats","title":"get_napter_audit_logs_exported_data_stats"},{"location":"api/docs/StatsApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import stats_api from soracom_api.model.napter_audit_logs_exported_data_stats_response import NapterAuditLogsExportedDataStatsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) year_month = \"year_month_example\" # str | Year/Month in 'YYYYMM' format. (optional) # example passing only required values which don't have defaults set # and optional values try: # Get Napter audit logs' monthly exported data stats api_response = api_instance.get_napter_audit_logs_exported_data_stats(year_month=year_month) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling StatsApi->get_napter_audit_logs_exported_data_stats: %s\\n\" % e)","title":"Example"},{"location":"api/docs/StatsApi/#parameters_6","text":"Name Type Description Notes year_month str Year/Month in 'YYYYMM' format. [optional]","title":"Parameters"},{"location":"api/docs/StatsApi/#return-type_6","text":"NapterAuditLogsExportedDataStatsResponse","title":"Return type"},{"location":"api/docs/StatsApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/StatsApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/StatsApi/#http-response-details_6","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/Subscriber/","text":"Subscriber \u00b6 Properties \u00b6 Name Type Description Notes apn str The Access Point Name configured. [optional] bundles [str] [optional] created_at int The timestamp that the SIM was created. [optional] expired_at int, none_type The timestamp of a date and time where the SIM was expired. [optional] expired_time int The timestamp of a date and time where the SIM was expired. [optional] expiry_action str, none_type [optional] group_id str, none_type The SIM group ID where the SIM belongs to. [optional] iccid str The ICCID of the SIM. [optional] imei_lock ImeiLock [optional] imsi str The IMSI of the SIM. [optional] ip_address str [optional] last_modified_at int The timestamp when the SIM information was modified. [optional] last_port_mapping_created_time int, none_type The timestamp (in Unix milliseconds) of the last instance where the Napter On-Demand Remote Access service was used with the subscriber. If Napter has never been used with the subscriber, null is returned. [optional] module_type str The form factor of the physical SIM. Possible values are \\\"mini\\\" for 2FF SIM card, \\\"micro\\\" for 3FF SIM card, \\\"nano\\\" for 4FF SIM card, \\\"trio\\\" for a Universal 3-in-1 (2FF/3FF/4FF) SIM card, or \\\"embedded\\\" for MFF2 or Embedded SIM (eSIM). [optional] msisdn str The MSISDN of the SIM. [optional] operator_id str The Operator ID of the SIM. [optional] plan int Whether or not the subscription supports SMS functionality. 0 = SMS not supported; 1 = SMS supported. [optional] previous_session PreviousSessionStatus [optional] registered_time int The timestamp (in Unix milliseconds) that the subscriber was manually registered to your account. When purchasing SIMs directly through the User Console, SIMs will automatically be registered to your account, and null is returned. [optional] serial_number str, none_type The serial number of the SIM. [optional] session_status SessionStatus [optional] sim_id str The SIM ID of the SIM. [optional] speed_class str The speed class of the SIM. [optional] status str The subscription status of the subscriber. Possible values are \\\"ready\\\", \\\"active\\\", \\\"inactive\\\", \\\"standby\\\", \\\"suspended\\\", or \\\"terminated\\\". [optional] subscription str, none_type The name of the subscription for the SIM. [optional] tags TagSet [optional] termination_enabled bool [optional] type str The speed class of the SIM. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Subscriber"},{"location":"api/docs/Subscriber/#subscriber","text":"","title":"Subscriber"},{"location":"api/docs/Subscriber/#properties","text":"Name Type Description Notes apn str The Access Point Name configured. [optional] bundles [str] [optional] created_at int The timestamp that the SIM was created. [optional] expired_at int, none_type The timestamp of a date and time where the SIM was expired. [optional] expired_time int The timestamp of a date and time where the SIM was expired. [optional] expiry_action str, none_type [optional] group_id str, none_type The SIM group ID where the SIM belongs to. [optional] iccid str The ICCID of the SIM. [optional] imei_lock ImeiLock [optional] imsi str The IMSI of the SIM. [optional] ip_address str [optional] last_modified_at int The timestamp when the SIM information was modified. [optional] last_port_mapping_created_time int, none_type The timestamp (in Unix milliseconds) of the last instance where the Napter On-Demand Remote Access service was used with the subscriber. If Napter has never been used with the subscriber, null is returned. [optional] module_type str The form factor of the physical SIM. Possible values are \\\"mini\\\" for 2FF SIM card, \\\"micro\\\" for 3FF SIM card, \\\"nano\\\" for 4FF SIM card, \\\"trio\\\" for a Universal 3-in-1 (2FF/3FF/4FF) SIM card, or \\\"embedded\\\" for MFF2 or Embedded SIM (eSIM). [optional] msisdn str The MSISDN of the SIM. [optional] operator_id str The Operator ID of the SIM. [optional] plan int Whether or not the subscription supports SMS functionality. 0 = SMS not supported; 1 = SMS supported. [optional] previous_session PreviousSessionStatus [optional] registered_time int The timestamp (in Unix milliseconds) that the subscriber was manually registered to your account. When purchasing SIMs directly through the User Console, SIMs will automatically be registered to your account, and null is returned. [optional] serial_number str, none_type The serial number of the SIM. [optional] session_status SessionStatus [optional] sim_id str The SIM ID of the SIM. [optional] speed_class str The speed class of the SIM. [optional] status str The subscription status of the subscriber. Possible values are \\\"ready\\\", \\\"active\\\", \\\"inactive\\\", \\\"standby\\\", \\\"suspended\\\", or \\\"terminated\\\". [optional] subscription str, none_type The name of the subscription for the SIM. [optional] tags TagSet [optional] termination_enabled bool [optional] type str The speed class of the SIM. [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SubscriberApi/","text":"soracom_api.SubscriberApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_subscriber POST /subscribers/{imsi}/activate Activate Subscriber. deactivate_subscriber POST /subscribers/{imsi}/deactivate Deactivate Subscriber. delete_subscriber_session POST /subscribers/{imsi}/delete_session Delete Session delete_subscriber_tag DELETE /subscribers/{imsi}/tags/{tag_name} Delete Subscriber Tag. delete_subscriber_transfer_token DELETE /subscribers/transfer_token/{token} Delete Subscribers Transfer Token. disable_termination POST /subscribers/{imsi}/disable_termination Disable Termination of Subscriber. enable_termination POST /subscribers/{imsi}/enable_termination Enable Termination of Subscriber. export_subscribers POST /subscribers/export Export all subscribers. get_data_from_subscriber GET /subscribers/{imsi}/data Get data sent from a subscriber. get_subscriber GET /subscribers/{imsi} Get Subscriber. issue_subscriber_transfer_token POST /subscribers/transfer_token/issue Issue Subscribers Transfer Token. list_session_events GET /subscribers/{imsi}/events/sessions List Session Events. list_subscribers GET /subscribers List Subscribers. put_bundles PUT /subscribers/{imsi}/bundles Set Bundles to Subscriber. put_subscriber_tags PUT /subscribers/{imsi}/tags Bulk Insert or Update Subscriber Tags. register_subscriber POST /subscribers/{imsi}/register Register Subscriber. report_local_info POST /subscribers/{imsi}/report_local_info Triggers Subscriber to report SIM local info. send_sms POST /subscribers/{imsi}/send_sms Send SMS to Subscriber send_sms_by_msisdn POST /subscribers/msisdn/{msisdn}/send_sms Send SMS to Subscriber by MSISDN send_subscriber_downlink_ping POST /subscribers/{imsi}/downlink/ping Send ping requests to a subscriber. set_expiry_time POST /subscribers/{imsi}/set_expiry_time Update Expiry Time of Subscriber. set_group POST /subscribers/{imsi}/set_group Set Group to Subscriber. set_imei_lock POST /subscribers/{imsi}/set_imei_lock Set IMEI lock configuration for Subscriber. set_subscriber_to_standby POST /subscribers/{imsi}/set_to_standby Set Subscriber to standby mode. suspend_subscriber POST /subscribers/{imsi}/suspend Suspend Subscriber. terminate_subscriber POST /subscribers/{imsi}/terminate Terminate Subscriber. unset_expiry_time POST /subscribers/{imsi}/unset_expiry_time Delete Expiry Time of Subscriber. unset_group POST /subscribers/{imsi}/unset_group Unset Group to Subscriber. unset_imei_lock POST /subscribers/{imsi}/unset_imei_lock Unset IMEI lock configuration for Subscriber. update_speed_class POST /subscribers/{imsi}/update_speed_class Update Subscriber speed class. verify_subscriber_transfer_token POST /subscribers/transfer_token/verify Verify Subscriber Transfer Token. activate_subscriber \u00b6 Subscriber activate_subscriber(imsi) Activate Subscriber. Activates status of specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Activate Subscriber. api_response = api_instance.activate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->activate_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] deactivate_subscriber \u00b6 Subscriber deactivate_subscriber(imsi) Deactivate Subscriber. Deactivates specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Deactivate Subscriber. api_response = api_instance.deactivate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->deactivate_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_subscriber_session \u00b6 Subscriber delete_subscriber_session(imsi) Delete Session Deletes session for the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Delete Session api_response = api_instance.delete_subscriber_session(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_subscriber_tag \u00b6 delete_subscriber_tag(imsi, tag_name) Delete Subscriber Tag. Deletes a tag from the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Subscriber Tag. api_instance.delete_subscriber_tag(imsi, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_tag: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_subscriber_transfer_token \u00b6 delete_subscriber_transfer_token(token) Delete Subscribers Transfer Token. Deletes the subscriber's inter-operator control transfer token, and cancels the control transfer. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) token = \"token_example\" # str | token # example passing only required values which don't have defaults set try: # Delete Subscribers Transfer Token. api_instance.delete_subscriber_transfer_token(token) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_transfer_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes token str token Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion implemented. - 404 The token does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] disable_termination \u00b6 Subscriber disable_termination(imsi) Disable Termination of Subscriber. Disables termination of specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Disable Termination of Subscriber. api_response = api_instance.disable_termination(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->disable_termination: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_termination \u00b6 Subscriber enable_termination(imsi) Enable Termination of Subscriber. Enables termination of specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Enable Termination of Subscriber. api_response = api_instance.enable_termination(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->enable_termination: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] export_subscribers \u00b6 FileExportResponse export_subscribers() Export all subscribers. Export all subscribers as a CSV file. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) export_mode = \"sync\" # str | export mode (async, sync) (optional) if omitted the server will use the default value of \"sync\" # example passing only required values which don't have defaults set # and optional values try: # Export all subscribers. api_response = api_instance.export_subscribers(export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->export_subscribers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes export_mode str export mode (async, sync) [optional] if omitted the server will use the default value of \"sync\" Return type \u00b6 FileExportResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Where to export subscribers. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_data_from_subscriber \u00b6 [DataEntry] get_data_from_subscriber(imsi) Get data sent from a subscriber. Returns a list of data entries sent from a subscriber that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a subscriber. api_response = api_instance.get_data_from_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_data_from_subscriber: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a subscriber. api_response = api_instance.get_data_from_subscriber(imsi, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_data_from_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional] Return type \u00b6 [DataEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_subscriber \u00b6 Subscriber get_subscriber(imsi) Get Subscriber. Returns information about the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Get Subscriber. api_response = api_instance.get_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] issue_subscriber_transfer_token \u00b6 IssueSubscriberTransferTokenResponse issue_subscriber_transfer_token(issue_subscriber_transfer_token_request) Issue Subscribers Transfer Token. Sends the subscriber's inter-operator control transfer token to the control destination operator. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.issue_subscriber_transfer_token_request import IssueSubscriberTransferTokenRequest from soracom_api.model.issue_subscriber_transfer_token_response import IssueSubscriberTransferTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) issue_subscriber_transfer_token_request = IssueSubscriberTransferTokenRequest( transfer_destination_operator_email=\"transfer_destination_operator_email_example\", transfer_destination_operator_id=\"transfer_destination_operator_id_example\", transfer_imsi=[ \"transfer_imsi_example\", ], ) # IssueSubscriberTransferTokenRequest | Destination operator's email address, Operator ID, transferring IMSI # example passing only required values which don't have defaults set try: # Issue Subscribers Transfer Token. api_response = api_instance.issue_subscriber_transfer_token(issue_subscriber_transfer_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->issue_subscriber_transfer_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes issue_subscriber_transfer_token_request IssueSubscriberTransferTokenRequest Destination operator's email address, Operator ID, transferring IMSI Return type \u00b6 IssueSubscriberTransferTokenResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_session_events \u00b6 [SessionEvent] list_session_events(imsi) List Session Events. Returns the event history for the specified subscriber, including session creation, change, and deletion. If the total number of events does not fit in one page, a URL for accessing the next page is returned in the Link header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.session_event import SessionEvent from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. _from = 1 # int | Start time for the events search range (unixtime). (optional) to = 1 # int | End time for the events search range (unixtime). (optional) limit = 1 # int | Maximum number of events to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. (optional) # example passing only required values which don't have defaults set try: # List Session Events. api_response = api_instance.list_session_events(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_session_events: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Session Events. api_response = api_instance.list_session_events(imsi, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_session_events: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. _from int Start time for the events search range (unixtime). [optional] to int End time for the events search range (unixtime). [optional] limit int Maximum number of events to retrieve. [optional] last_evaluated_key str The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. [optional] Return type \u00b6 [SessionEvent] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of session events - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_subscribers \u00b6 [Subscriber] list_subscribers() List Subscribers. Returns a list of subscribers that match certain criteria. If the total number of subscribers does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" status_filter = \"status_filter_example\" # str | Status for filtering the search. Can specify multiple values delimited by `|`. Valid values include: `active`, `inactive`, `ready`, `instock`, `shipped`, `suspended`, and `terminated`. (optional) speed_class_filter = \"speed_class_filter_example\" # str | Speed class for filtering the search. Can specify multiple values delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`, `s1.fast` (optional) serial_number_filter = \"serial_number_filter_example\" # str | Serial number for filtering the search. Can specify multiple values delimited by `|`. Returns subscribers with serial number starting with the specified value(s). (optional) limit = 1 # int | Maximum number of subscribers to retrieve. Setting a limit does not guarantee the number of subscribers returned in the response (i.e. the response may contain fewer subscribers than the specified limit). (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Subscribers. api_response = api_instance.list_subscribers(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, status_filter=status_filter, speed_class_filter=speed_class_filter, serial_number_filter=serial_number_filter, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_subscribers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" status_filter str Status for filtering the search. Can specify multiple values delimited by ` `. Valid values include: `active`, `inactive`, `ready`, `instock`, `shipped`, `suspended`, and `terminated`. speed_class_filter str Speed class for filtering the search. Can specify multiple values delimited by ` `. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`, `s1.fast` serial_number_filter str Serial number for filtering the search. Can specify multiple values delimited by ` `. Returns subscribers with serial number starting with the specified value(s). limit int Maximum number of subscribers to retrieve. Setting a limit does not guarantee the number of subscribers returned in the response (i.e. the response may contain fewer subscribers than the specified limit). [optional] last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional] Return type \u00b6 [Subscriber] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 A list of subscribers. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_bundles \u00b6 Subscriber put_bundles(imsi, request_body) Set Bundles to Subscriber. Sets bundles to the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. request_body = [ \"request_body_example\", ] # [str] | Array of bundles to be set. # example passing only required values which don't have defaults set try: # Set Bundles to Subscriber. api_response = api_instance.put_bundles(imsi, request_body) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->put_bundles: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. request_body [str] Array of bundles to be set. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_subscriber_tags \u00b6 Subscriber put_subscriber_tags(imsi, tag_update_request) Bulk Insert or Update Subscriber Tags. Inserts/updates tags for the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update Subscriber Tags. api_response = api_instance.put_subscriber_tags(imsi, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->put_subscriber_tags: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_subscriber \u00b6 Subscriber register_subscriber(imsi, register_subscribers_request) Register Subscriber. Registers a subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.register_subscribers_request import RegisterSubscribersRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. register_subscribers_request = RegisterSubscribersRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags=[ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ], ) # RegisterSubscribersRequest | subscriber # example passing only required values which don't have defaults set try: # Register Subscriber. api_response = api_instance.register_subscriber(imsi, register_subscribers_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->register_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. register_subscribers_request RegisterSubscribersRequest subscriber Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Subscriber registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README] report_local_info \u00b6 Subscriber report_local_info(imsi) Triggers Subscriber to report SIM local info. Triggers Subscriber to report SIM local info. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Triggers Subscriber to report SIM local info. api_response = api_instance.report_local_info(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->report_local_info: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 202 The local info reporting has successfully been triggered. The subscriber information is asynchronously updated when the SIM reports the information back. - 400 The specified subscriber does not support local info reporting feature. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_sms \u00b6 SmsForwardingReport send_sms(imsi, sms_forwarding_request) Send SMS to Subscriber Send SMS to the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to Subscriber api_response = api_instance.send_sms(imsi, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_sms: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type. Return type \u00b6 SmsForwardingReport Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified subscriber does not support SMS API. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_sms_by_msisdn \u00b6 SmsForwardingReport send_sms_by_msisdn(msisdn, sms_forwarding_request) Send SMS to Subscriber by MSISDN Send SMS to a subscriber specified with MSISDN. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) msisdn = \"msisdn_example\" # str | MSISDN of the target subscriber. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to Subscriber by MSISDN api_response = api_instance.send_sms_by_msisdn(msisdn, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_sms_by_msisdn: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes msisdn str MSISDN of the target subscriber. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type. Return type \u00b6 SmsForwardingReport Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified subscriber does not support SMS API. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] send_subscriber_downlink_ping \u00b6 DownlinkPingResponse send_subscriber_downlink_ping(imsi, downlink_ping_request) Send ping requests to a subscriber. Send ICMP ping requests to a subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.downlink_ping_response import DownlinkPingResponse from soracom_api.model.downlink_ping_request import DownlinkPingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. downlink_ping_request = DownlinkPingRequest( number_of_ping_requests=1, timeout_seconds=1, ) # DownlinkPingRequest | ping options # example passing only required values which don't have defaults set try: # Send ping requests to a subscriber. api_response = api_instance.send_subscriber_downlink_ping(imsi, downlink_ping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_subscriber_downlink_ping: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. downlink_ping_request DownlinkPingRequest ping options Return type \u00b6 DownlinkPingResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Result of the ping - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_expiry_time \u00b6 Subscriber set_expiry_time(imsi, expiry_time) Update Expiry Time of Subscriber. Updates expiry time of specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.expiry_time import ExpiryTime from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. expiry_time = ExpiryTime( expiry_action=\"doNothing\", expiry_time=1, ) # ExpiryTime | Expiry time after the update (unixtime: in milliseconds). # example passing only required values which don't have defaults set try: # Update Expiry Time of Subscriber. api_response = api_instance.set_expiry_time(imsi, expiry_time) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_expiry_time: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. expiry_time ExpiryTime Expiry time after the update (unixtime: in milliseconds). Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_group \u00b6 Subscriber set_group(imsi, set_group_request) Set Group to Subscriber. Sets or overwrites a group for the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.set_group_request import SetGroupRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. set_group_request = SetGroupRequest( group_id=\"group_id_example\", tags=TagSet( key=\"key_example\", ), ) # SetGroupRequest | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group to Subscriber. api_response = api_instance.set_group(imsi, set_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. set_group_request SetGroupRequest Group (may include ID only). Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_imei_lock \u00b6 Subscriber set_imei_lock(imsi) Set IMEI lock configuration for Subscriber. Set IMEI that the subscriber should be locked to. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.set_imei_lock_request import SetImeiLockRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. set_imei_lock_request = SetImeiLockRequest( imei=\"imei_example\", ) # SetImeiLockRequest | IMEI lock configuration for the subscriber. (IMEI can be left blank for locking to the current IMEI of an online subscriber.) (optional) # example passing only required values which don't have defaults set try: # Set IMEI lock configuration for Subscriber. api_response = api_instance.set_imei_lock(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_imei_lock: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set IMEI lock configuration for Subscriber. api_response = api_instance.set_imei_lock(imsi, set_imei_lock_request=set_imei_lock_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_imei_lock: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. set_imei_lock_request SetImeiLockRequest IMEI lock configuration for the subscriber. (IMEI can be left blank for locking to the current IMEI of an online subscriber.) [optional] Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 400 Invalid IMEI string or subscriber is offline and IMEI not specified. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_subscriber_to_standby \u00b6 Subscriber set_subscriber_to_standby(imsi) Set Subscriber to standby mode. Set the specified subscriber to standby mode. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Set Subscriber to standby mode. api_response = api_instance.set_subscriber_to_standby(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_subscriber_to_standby: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 400 The specified subscriber does not support standby mode. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] suspend_subscriber \u00b6 Subscriber suspend_subscriber(imsi) Suspend Subscriber. Suspends the specified subscriber Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Suspend Subscriber. api_response = api_instance.suspend_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->suspend_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_subscriber \u00b6 Subscriber terminate_subscriber(imsi) Terminate Subscriber. Terminates the specified subscriber Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Terminate Subscriber. api_response = api_instance.terminate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->terminate_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_expiry_time \u00b6 unset_expiry_time(imsi) Delete Expiry Time of Subscriber. Deletes expiry time of specified subscriber and changes it to indefinite. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Delete Expiry Time of Subscriber. api_instance.unset_expiry_time(imsi) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_expiry_time: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Change of specified subscriber's expiry time to indefinite complete. - 404 The specified subscriber does not exist or the subscriber does not have an expiry time. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_group \u00b6 Subscriber unset_group(imsi) Unset Group to Subscriber. Removes the group configuration from the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Unset Group to Subscriber. api_response = api_instance.unset_group(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_group: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist or the subscriber does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_imei_lock \u00b6 Subscriber unset_imei_lock(imsi) Unset IMEI lock configuration for Subscriber. Remove any existing IMEI lock configuration for the subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Unset IMEI lock configuration for Subscriber. api_response = api_instance.unset_imei_lock(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_imei_lock: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_speed_class \u00b6 Subscriber update_speed_class(imsi, update_speed_class_request) Update Subscriber speed class. Changes the speed class of the specified subscriber. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.update_speed_class_request import UpdateSpeedClassRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. update_speed_class_request = UpdateSpeedClassRequest( speed_class=\"s1.minimum\", ) # UpdateSpeedClassRequest | speed_class # example passing only required values which don't have defaults set try: # Update Subscriber speed class. api_response = api_instance.update_speed_class(imsi, update_speed_class_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->update_speed_class: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI of the target subscriber. update_speed_class_request UpdateSpeedClassRequest speed_class Return type \u00b6 Subscriber Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_subscriber_transfer_token \u00b6 VerifySubscriberTransferTokenResponse verify_subscriber_transfer_token(verify_subscriber_transfer_token_request) Verify Subscriber Transfer Token. Verifies the subscriber's control transfer token, and executes the transfer. This API is called from the operator of the control destination. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.verify_subscriber_transfer_token_response import VerifySubscriberTransferTokenResponse from soracom_api.model.verify_subscriber_transfer_token_request import VerifySubscriberTransferTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) verify_subscriber_transfer_token_request = VerifySubscriberTransferTokenRequest( token=\"token_example\", ) # VerifySubscriberTransferTokenRequest | Subscriber transfer token that noticed via email. # example passing only required values which don't have defaults set try: # Verify Subscriber Transfer Token. api_response = api_instance.verify_subscriber_transfer_token(verify_subscriber_transfer_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->verify_subscriber_transfer_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes verify_subscriber_transfer_token_request VerifySubscriberTransferTokenRequest Subscriber transfer token that noticed via email. Return type \u00b6 VerifySubscriberTransferTokenResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.SubscriberApi"},{"location":"api/docs/SubscriberApi/#soracom_apisubscriberapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description activate_subscriber POST /subscribers/{imsi}/activate Activate Subscriber. deactivate_subscriber POST /subscribers/{imsi}/deactivate Deactivate Subscriber. delete_subscriber_session POST /subscribers/{imsi}/delete_session Delete Session delete_subscriber_tag DELETE /subscribers/{imsi}/tags/{tag_name} Delete Subscriber Tag. delete_subscriber_transfer_token DELETE /subscribers/transfer_token/{token} Delete Subscribers Transfer Token. disable_termination POST /subscribers/{imsi}/disable_termination Disable Termination of Subscriber. enable_termination POST /subscribers/{imsi}/enable_termination Enable Termination of Subscriber. export_subscribers POST /subscribers/export Export all subscribers. get_data_from_subscriber GET /subscribers/{imsi}/data Get data sent from a subscriber. get_subscriber GET /subscribers/{imsi} Get Subscriber. issue_subscriber_transfer_token POST /subscribers/transfer_token/issue Issue Subscribers Transfer Token. list_session_events GET /subscribers/{imsi}/events/sessions List Session Events. list_subscribers GET /subscribers List Subscribers. put_bundles PUT /subscribers/{imsi}/bundles Set Bundles to Subscriber. put_subscriber_tags PUT /subscribers/{imsi}/tags Bulk Insert or Update Subscriber Tags. register_subscriber POST /subscribers/{imsi}/register Register Subscriber. report_local_info POST /subscribers/{imsi}/report_local_info Triggers Subscriber to report SIM local info. send_sms POST /subscribers/{imsi}/send_sms Send SMS to Subscriber send_sms_by_msisdn POST /subscribers/msisdn/{msisdn}/send_sms Send SMS to Subscriber by MSISDN send_subscriber_downlink_ping POST /subscribers/{imsi}/downlink/ping Send ping requests to a subscriber. set_expiry_time POST /subscribers/{imsi}/set_expiry_time Update Expiry Time of Subscriber. set_group POST /subscribers/{imsi}/set_group Set Group to Subscriber. set_imei_lock POST /subscribers/{imsi}/set_imei_lock Set IMEI lock configuration for Subscriber. set_subscriber_to_standby POST /subscribers/{imsi}/set_to_standby Set Subscriber to standby mode. suspend_subscriber POST /subscribers/{imsi}/suspend Suspend Subscriber. terminate_subscriber POST /subscribers/{imsi}/terminate Terminate Subscriber. unset_expiry_time POST /subscribers/{imsi}/unset_expiry_time Delete Expiry Time of Subscriber. unset_group POST /subscribers/{imsi}/unset_group Unset Group to Subscriber. unset_imei_lock POST /subscribers/{imsi}/unset_imei_lock Unset IMEI lock configuration for Subscriber. update_speed_class POST /subscribers/{imsi}/update_speed_class Update Subscriber speed class. verify_subscriber_transfer_token POST /subscribers/transfer_token/verify Verify Subscriber Transfer Token.","title":"soracom_api.SubscriberApi"},{"location":"api/docs/SubscriberApi/#activate_subscriber","text":"Subscriber activate_subscriber(imsi) Activate Subscriber. Activates status of specified subscriber.","title":"activate_subscriber"},{"location":"api/docs/SubscriberApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Activate Subscriber. api_response = api_instance.activate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->activate_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#deactivate_subscriber","text":"Subscriber deactivate_subscriber(imsi) Deactivate Subscriber. Deactivates specified subscriber.","title":"deactivate_subscriber"},{"location":"api/docs/SubscriberApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Deactivate Subscriber. api_response = api_instance.deactivate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->deactivate_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_1","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_1","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_1","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#delete_subscriber_session","text":"Subscriber delete_subscriber_session(imsi) Delete Session Deletes session for the specified subscriber.","title":"delete_subscriber_session"},{"location":"api/docs/SubscriberApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Delete Session api_response = api_instance.delete_subscriber_session(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_2","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_2","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_2","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#delete_subscriber_tag","text":"delete_subscriber_tag(imsi, tag_name) Delete Subscriber Tag. Deletes a tag from the specified subscriber.","title":"delete_subscriber_tag"},{"location":"api/docs/SubscriberApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. tag_name = \"tag_name_example\" # str | Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().) # example passing only required values which don't have defaults set try: # Delete Subscriber Tag. api_instance.delete_subscriber_tag(imsi, tag_name) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_tag: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_3","text":"Name Type Description Notes imsi str IMSI of the target subscriber. tag_name str Tag name to be deleted. (This will be part of a URL path, so it needs to be percent-encoded. In JavaScript, specify the name after it has been encoded using encodeURIComponent().)","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_3","text":"Status code Description Response headers 204 Deletion of specified tag complete. - 404 The specified subscriber or the tag does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#delete_subscriber_transfer_token","text":"delete_subscriber_transfer_token(token) Delete Subscribers Transfer Token. Deletes the subscriber's inter-operator control transfer token, and cancels the control transfer.","title":"delete_subscriber_transfer_token"},{"location":"api/docs/SubscriberApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) token = \"token_example\" # str | token # example passing only required values which don't have defaults set try: # Delete Subscribers Transfer Token. api_instance.delete_subscriber_transfer_token(token) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->delete_subscriber_transfer_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_4","text":"Name Type Description Notes token str token","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_4","text":"Status code Description Response headers 204 Deletion implemented. - 404 The token does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#disable_termination","text":"Subscriber disable_termination(imsi) Disable Termination of Subscriber. Disables termination of specified subscriber.","title":"disable_termination"},{"location":"api/docs/SubscriberApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Disable Termination of Subscriber. api_response = api_instance.disable_termination(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->disable_termination: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_5","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_5","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_5","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#enable_termination","text":"Subscriber enable_termination(imsi) Enable Termination of Subscriber. Enables termination of specified subscriber.","title":"enable_termination"},{"location":"api/docs/SubscriberApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Enable Termination of Subscriber. api_response = api_instance.enable_termination(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->enable_termination: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_6","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_6","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_6","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#export_subscribers","text":"FileExportResponse export_subscribers() Export all subscribers. Export all subscribers as a CSV file.","title":"export_subscribers"},{"location":"api/docs/SubscriberApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.file_export_response import FileExportResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) export_mode = \"sync\" # str | export mode (async, sync) (optional) if omitted the server will use the default value of \"sync\" # example passing only required values which don't have defaults set # and optional values try: # Export all subscribers. api_response = api_instance.export_subscribers(export_mode=export_mode) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->export_subscribers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_7","text":"Name Type Description Notes export_mode str export mode (async, sync) [optional] if omitted the server will use the default value of \"sync\"","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_7","text":"FileExportResponse","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_7","text":"Status code Description Response headers 200 Where to export subscribers. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#get_data_from_subscriber","text":"[DataEntry] get_data_from_subscriber(imsi) Get data sent from a subscriber. Returns a list of data entries sent from a subscriber that match certain criteria. If the total number of entries does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"get_data_from_subscriber"},{"location":"api/docs/SubscriberApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.data_entry import DataEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber that generated data entries. _from = 1 # int | Start time for the data entries search range (unixtime in milliseconds). (optional) to = 1 # int | End time for the data entries search range (unixtime in milliseconds). (optional) sort = \"desc\" # str | Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). (optional) if omitted the server will use the default value of \"desc\" limit = 1 # int | Maximum number of data entries to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. (optional) # example passing only required values which don't have defaults set try: # Get data sent from a subscriber. api_response = api_instance.get_data_from_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_data_from_subscriber: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Get data sent from a subscriber. api_response = api_instance.get_data_from_subscriber(imsi, _from=_from, to=to, sort=sort, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_data_from_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_8","text":"Name Type Description Notes imsi str IMSI of the target subscriber that generated data entries. _from int Start time for the data entries search range (unixtime in milliseconds). [optional] to int End time for the data entries search range (unixtime in milliseconds). [optional] sort str Sort order of the data entries. Either descending (latest data entry first) or ascending (oldest data entry first). [optional] if omitted the server will use the default value of \"desc\" limit int Maximum number of data entries to retrieve. [optional] last_evaluated_key str The value of `time` in the last log entry retrieved in the previous page. By specifying this parameter, you can continue to retrieve the list from the next page onward. [optional]","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_8","text":"[DataEntry]","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_8","text":"Status code Description Response headers 200 A list of data entries. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#get_subscriber","text":"Subscriber get_subscriber(imsi) Get Subscriber. Returns information about the specified subscriber.","title":"get_subscriber"},{"location":"api/docs/SubscriberApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Get Subscriber. api_response = api_instance.get_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->get_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_9","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_9","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_9","text":"Status code Description Response headers 200 The subscriber's detailed information. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#issue_subscriber_transfer_token","text":"IssueSubscriberTransferTokenResponse issue_subscriber_transfer_token(issue_subscriber_transfer_token_request) Issue Subscribers Transfer Token. Sends the subscriber's inter-operator control transfer token to the control destination operator.","title":"issue_subscriber_transfer_token"},{"location":"api/docs/SubscriberApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.issue_subscriber_transfer_token_request import IssueSubscriberTransferTokenRequest from soracom_api.model.issue_subscriber_transfer_token_response import IssueSubscriberTransferTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) issue_subscriber_transfer_token_request = IssueSubscriberTransferTokenRequest( transfer_destination_operator_email=\"transfer_destination_operator_email_example\", transfer_destination_operator_id=\"transfer_destination_operator_id_example\", transfer_imsi=[ \"transfer_imsi_example\", ], ) # IssueSubscriberTransferTokenRequest | Destination operator's email address, Operator ID, transferring IMSI # example passing only required values which don't have defaults set try: # Issue Subscribers Transfer Token. api_response = api_instance.issue_subscriber_transfer_token(issue_subscriber_transfer_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->issue_subscriber_transfer_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_10","text":"Name Type Description Notes issue_subscriber_transfer_token_request IssueSubscriberTransferTokenRequest Destination operator's email address, Operator ID, transferring IMSI","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_10","text":"IssueSubscriberTransferTokenResponse","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_10","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_10","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#list_session_events","text":"[SessionEvent] list_session_events(imsi) List Session Events. Returns the event history for the specified subscriber, including session creation, change, and deletion. If the total number of events does not fit in one page, a URL for accessing the next page is returned in the Link header of the response.","title":"list_session_events"},{"location":"api/docs/SubscriberApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.session_event import SessionEvent from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. _from = 1 # int | Start time for the events search range (unixtime). (optional) to = 1 # int | End time for the events search range (unixtime). (optional) limit = 1 # int | Maximum number of events to retrieve. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. (optional) # example passing only required values which don't have defaults set try: # List Session Events. api_response = api_instance.list_session_events(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_session_events: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Session Events. api_response = api_instance.list_session_events(imsi, _from=_from, to=to, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_session_events: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_11","text":"Name Type Description Notes imsi str IMSI of the target subscriber. _from int Start time for the events search range (unixtime). [optional] to int End time for the events search range (unixtime). [optional] limit int Maximum number of events to retrieve. [optional] last_evaluated_key str The time stamp of the last event retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next event onward. [optional]","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_11","text":"[SessionEvent]","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_11","text":"Status code Description Response headers 200 A list of session events - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#list_subscribers","text":"[Subscriber] list_subscribers() List Subscribers. Returns a list of subscribers that match certain criteria. If the total number of subscribers does not fit in one page, a URL for accessing the next page is returned in the 'Link' header of the response.","title":"list_subscribers"},{"location":"api/docs/SubscriberApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) tag_name = \"tag_name_example\" # str | Tag name for filtering the search (exact match). (optional) tag_value = \"tag_value_example\" # str | Tag search string for filtering the search. Required when `tag_name` has been specified. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" status_filter = \"status_filter_example\" # str | Status for filtering the search. Can specify multiple values delimited by `|`. Valid values include: `active`, `inactive`, `ready`, `instock`, `shipped`, `suspended`, and `terminated`. (optional) speed_class_filter = \"speed_class_filter_example\" # str | Speed class for filtering the search. Can specify multiple values delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`, `s1.fast` (optional) serial_number_filter = \"serial_number_filter_example\" # str | Serial number for filtering the search. Can specify multiple values delimited by `|`. Returns subscribers with serial number starting with the specified value(s). (optional) limit = 1 # int | Maximum number of subscribers to retrieve. Setting a limit does not guarantee the number of subscribers returned in the response (i.e. the response may contain fewer subscribers than the specified limit). (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Subscribers. api_response = api_instance.list_subscribers(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, status_filter=status_filter, speed_class_filter=speed_class_filter, serial_number_filter=serial_number_filter, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->list_subscribers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_12","text":"Name Type Description Notes tag_name str Tag name for filtering the search (exact match). [optional] tag_value str Tag search string for filtering the search. Required when `tag_name` has been specified. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" status_filter str Status for filtering the search. Can specify multiple values delimited by ` `. Valid values include: `active`, `inactive`, `ready`, `instock`, `shipped`, `suspended`, and `terminated`. speed_class_filter str Speed class for filtering the search. Can specify multiple values delimited by ` `. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`, `s1.fast` serial_number_filter str Serial number for filtering the search. Can specify multiple values delimited by ` `. Returns subscribers with serial number starting with the specified value(s). limit int Maximum number of subscribers to retrieve. Setting a limit does not guarantee the number of subscribers returned in the response (i.e. the response may contain fewer subscribers than the specified limit). [optional] last_evaluated_key str The IMSI of the last subscriber retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next subscriber onward. [optional]","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_12","text":"[Subscriber]","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_12","text":"Status code Description Response headers 200 A list of subscribers. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#put_bundles","text":"Subscriber put_bundles(imsi, request_body) Set Bundles to Subscriber. Sets bundles to the specified subscriber.","title":"put_bundles"},{"location":"api/docs/SubscriberApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. request_body = [ \"request_body_example\", ] # [str] | Array of bundles to be set. # example passing only required values which don't have defaults set try: # Set Bundles to Subscriber. api_response = api_instance.put_bundles(imsi, request_body) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->put_bundles: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_13","text":"Name Type Description Notes imsi str IMSI of the target subscriber. request_body [str] Array of bundles to be set.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_13","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_13","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_13","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#put_subscriber_tags","text":"Subscriber put_subscriber_tags(imsi, tag_update_request) Bulk Insert or Update Subscriber Tags. Inserts/updates tags for the specified subscriber.","title":"put_subscriber_tags"},{"location":"api/docs/SubscriberApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.tag_update_request import TagUpdateRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. tag_update_request = [ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ] # [TagUpdateRequest] | Array of tags to be inserted/updated. # example passing only required values which don't have defaults set try: # Bulk Insert or Update Subscriber Tags. api_response = api_instance.put_subscriber_tags(imsi, tag_update_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->put_subscriber_tags: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_14","text":"Name Type Description Notes imsi str IMSI of the target subscriber. tag_update_request [TagUpdateRequest] Array of tags to be inserted/updated.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_14","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_14","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_14","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#register_subscriber","text":"Subscriber register_subscriber(imsi, register_subscribers_request) Register Subscriber. Registers a subscriber.","title":"register_subscriber"},{"location":"api/docs/SubscriberApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.register_subscribers_request import RegisterSubscribersRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. register_subscribers_request = RegisterSubscribersRequest( group_id=\"group_id_example\", registration_secret=\"registration_secret_example\", tags=[ TagUpdateRequest( tag_name=\"tag_name_example\", tag_value=\"tag_value_example\", ), ], ) # RegisterSubscribersRequest | subscriber # example passing only required values which don't have defaults set try: # Register Subscriber. api_response = api_instance.register_subscriber(imsi, register_subscribers_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->register_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_15","text":"Name Type Description Notes imsi str IMSI of the target subscriber. register_subscribers_request RegisterSubscribersRequest subscriber","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_15","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_15","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_15","text":"Status code Description Response headers 201 Subscriber registration complete. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#report_local_info","text":"Subscriber report_local_info(imsi) Triggers Subscriber to report SIM local info. Triggers Subscriber to report SIM local info.","title":"report_local_info"},{"location":"api/docs/SubscriberApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Triggers Subscriber to report SIM local info. api_response = api_instance.report_local_info(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->report_local_info: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_16","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_16","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_16","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_16","text":"Status code Description Response headers 202 The local info reporting has successfully been triggered. The subscriber information is asynchronously updated when the SIM reports the information back. - 400 The specified subscriber does not support local info reporting feature. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#send_sms","text":"SmsForwardingReport send_sms(imsi, sms_forwarding_request) Send SMS to Subscriber Send SMS to the specified subscriber.","title":"send_sms"},{"location":"api/docs/SubscriberApi/#example_17","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to Subscriber api_response = api_instance.send_sms(imsi, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_sms: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_17","text":"Name Type Description Notes imsi str IMSI of the target subscriber. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_17","text":"SmsForwardingReport","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_17","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_17","text":"Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified subscriber does not support SMS API. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#send_sms_by_msisdn","text":"SmsForwardingReport send_sms_by_msisdn(msisdn, sms_forwarding_request) Send SMS to Subscriber by MSISDN Send SMS to a subscriber specified with MSISDN.","title":"send_sms_by_msisdn"},{"location":"api/docs/SubscriberApi/#example_18","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.sms_forwarding_request import SmsForwardingRequest from soracom_api.model.sms_forwarding_report import SmsForwardingReport from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) msisdn = \"msisdn_example\" # str | MSISDN of the target subscriber. sms_forwarding_request = SmsForwardingRequest( encoding_type=2, payload=\"payload_example\", ) # SmsForwardingRequest | SMS forwarding request that contains message body and its encoding type. # example passing only required values which don't have defaults set try: # Send SMS to Subscriber by MSISDN api_response = api_instance.send_sms_by_msisdn(msisdn, sms_forwarding_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_sms_by_msisdn: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_18","text":"Name Type Description Notes msisdn str MSISDN of the target subscriber. sms_forwarding_request SmsForwardingRequest SMS forwarding request that contains message body and its encoding type.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_18","text":"SmsForwardingReport","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_18","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_18","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_18","text":"Status code Description Response headers 202 SMS forwarding report containing message ID. - 400 The specified subscriber does not support SMS API. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#send_subscriber_downlink_ping","text":"DownlinkPingResponse send_subscriber_downlink_ping(imsi, downlink_ping_request) Send ping requests to a subscriber. Send ICMP ping requests to a subscriber.","title":"send_subscriber_downlink_ping"},{"location":"api/docs/SubscriberApi/#example_19","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.downlink_ping_response import DownlinkPingResponse from soracom_api.model.downlink_ping_request import DownlinkPingRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. downlink_ping_request = DownlinkPingRequest( number_of_ping_requests=1, timeout_seconds=1, ) # DownlinkPingRequest | ping options # example passing only required values which don't have defaults set try: # Send ping requests to a subscriber. api_response = api_instance.send_subscriber_downlink_ping(imsi, downlink_ping_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->send_subscriber_downlink_ping: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_19","text":"Name Type Description Notes imsi str IMSI of the target subscriber. downlink_ping_request DownlinkPingRequest ping options","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_19","text":"DownlinkPingResponse","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_19","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_19","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_19","text":"Status code Description Response headers 200 Result of the ping - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#set_expiry_time","text":"Subscriber set_expiry_time(imsi, expiry_time) Update Expiry Time of Subscriber. Updates expiry time of specified subscriber.","title":"set_expiry_time"},{"location":"api/docs/SubscriberApi/#example_20","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.expiry_time import ExpiryTime from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. expiry_time = ExpiryTime( expiry_action=\"doNothing\", expiry_time=1, ) # ExpiryTime | Expiry time after the update (unixtime: in milliseconds). # example passing only required values which don't have defaults set try: # Update Expiry Time of Subscriber. api_response = api_instance.set_expiry_time(imsi, expiry_time) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_expiry_time: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_20","text":"Name Type Description Notes imsi str IMSI of the target subscriber. expiry_time ExpiryTime Expiry time after the update (unixtime: in milliseconds).","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_20","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_20","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_20","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_20","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#set_group","text":"Subscriber set_group(imsi, set_group_request) Set Group to Subscriber. Sets or overwrites a group for the specified subscriber.","title":"set_group"},{"location":"api/docs/SubscriberApi/#example_21","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from soracom_api.model.set_group_request import SetGroupRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. set_group_request = SetGroupRequest( group_id=\"group_id_example\", tags=TagSet( key=\"key_example\", ), ) # SetGroupRequest | Group (may include ID only). # example passing only required values which don't have defaults set try: # Set Group to Subscriber. api_response = api_instance.set_group(imsi, set_group_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_21","text":"Name Type Description Notes imsi str IMSI of the target subscriber. set_group_request SetGroupRequest Group (may include ID only).","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_21","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_21","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_21","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_21","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#set_imei_lock","text":"Subscriber set_imei_lock(imsi) Set IMEI lock configuration for Subscriber. Set IMEI that the subscriber should be locked to.","title":"set_imei_lock"},{"location":"api/docs/SubscriberApi/#example_22","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.set_imei_lock_request import SetImeiLockRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. set_imei_lock_request = SetImeiLockRequest( imei=\"imei_example\", ) # SetImeiLockRequest | IMEI lock configuration for the subscriber. (IMEI can be left blank for locking to the current IMEI of an online subscriber.) (optional) # example passing only required values which don't have defaults set try: # Set IMEI lock configuration for Subscriber. api_response = api_instance.set_imei_lock(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_imei_lock: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Set IMEI lock configuration for Subscriber. api_response = api_instance.set_imei_lock(imsi, set_imei_lock_request=set_imei_lock_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_imei_lock: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_22","text":"Name Type Description Notes imsi str IMSI of the target subscriber. set_imei_lock_request SetImeiLockRequest IMEI lock configuration for the subscriber. (IMEI can be left blank for locking to the current IMEI of an online subscriber.) [optional]","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_22","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_22","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_22","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_22","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 400 Invalid IMEI string or subscriber is offline and IMEI not specified. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#set_subscriber_to_standby","text":"Subscriber set_subscriber_to_standby(imsi) Set Subscriber to standby mode. Set the specified subscriber to standby mode.","title":"set_subscriber_to_standby"},{"location":"api/docs/SubscriberApi/#example_23","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Set Subscriber to standby mode. api_response = api_instance.set_subscriber_to_standby(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->set_subscriber_to_standby: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_23","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_23","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_23","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_23","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_23","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 400 The specified subscriber does not support standby mode. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#suspend_subscriber","text":"Subscriber suspend_subscriber(imsi) Suspend Subscriber. Suspends the specified subscriber","title":"suspend_subscriber"},{"location":"api/docs/SubscriberApi/#example_24","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Suspend Subscriber. api_response = api_instance.suspend_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->suspend_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_24","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_24","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_24","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_24","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_24","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#terminate_subscriber","text":"Subscriber terminate_subscriber(imsi) Terminate Subscriber. Terminates the specified subscriber","title":"terminate_subscriber"},{"location":"api/docs/SubscriberApi/#example_25","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Terminate Subscriber. api_response = api_instance.terminate_subscriber(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->terminate_subscriber: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_25","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_25","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_25","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_25","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_25","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#unset_expiry_time","text":"unset_expiry_time(imsi) Delete Expiry Time of Subscriber. Deletes expiry time of specified subscriber and changes it to indefinite.","title":"unset_expiry_time"},{"location":"api/docs/SubscriberApi/#example_26","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Delete Expiry Time of Subscriber. api_instance.unset_expiry_time(imsi) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_expiry_time: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_26","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_26","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_26","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_26","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_26","text":"Status code Description Response headers 204 Change of specified subscriber's expiry time to indefinite complete. - 404 The specified subscriber does not exist or the subscriber does not have an expiry time. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#unset_group","text":"Subscriber unset_group(imsi) Unset Group to Subscriber. Removes the group configuration from the specified subscriber.","title":"unset_group"},{"location":"api/docs/SubscriberApi/#example_27","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Unset Group to Subscriber. api_response = api_instance.unset_group(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_group: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_27","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_27","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_27","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_27","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_27","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist or the subscriber does not belong to a group. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#unset_imei_lock","text":"Subscriber unset_imei_lock(imsi) Unset IMEI lock configuration for Subscriber. Remove any existing IMEI lock configuration for the subscriber.","title":"unset_imei_lock"},{"location":"api/docs/SubscriberApi/#example_28","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. # example passing only required values which don't have defaults set try: # Unset IMEI lock configuration for Subscriber. api_response = api_instance.unset_imei_lock(imsi) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->unset_imei_lock: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_28","text":"Name Type Description Notes imsi str IMSI of the target subscriber.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_28","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_28","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_28","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_28","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#update_speed_class","text":"Subscriber update_speed_class(imsi, update_speed_class_request) Update Subscriber speed class. Changes the speed class of the specified subscriber.","title":"update_speed_class"},{"location":"api/docs/SubscriberApi/#example_29","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.update_speed_class_request import UpdateSpeedClassRequest from soracom_api.model.subscriber import Subscriber from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) imsi = \"imsi_example\" # str | IMSI of the target subscriber. update_speed_class_request = UpdateSpeedClassRequest( speed_class=\"s1.minimum\", ) # UpdateSpeedClassRequest | speed_class # example passing only required values which don't have defaults set try: # Update Subscriber speed class. api_response = api_instance.update_speed_class(imsi, update_speed_class_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->update_speed_class: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_29","text":"Name Type Description Notes imsi str IMSI of the target subscriber. update_speed_class_request UpdateSpeedClassRequest speed_class","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_29","text":"Subscriber","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_29","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_29","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_29","text":"Status code Description Response headers 200 The subscriber's detailed information after the update. - 404 The specified subscriber does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriberApi/#verify_subscriber_transfer_token","text":"VerifySubscriberTransferTokenResponse verify_subscriber_transfer_token(verify_subscriber_transfer_token_request) Verify Subscriber Transfer Token. Verifies the subscriber's control transfer token, and executes the transfer. This API is called from the operator of the control destination.","title":"verify_subscriber_transfer_token"},{"location":"api/docs/SubscriberApi/#example_30","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import subscriber_api from soracom_api.model.verify_subscriber_transfer_token_response import VerifySubscriberTransferTokenResponse from soracom_api.model.verify_subscriber_transfer_token_request import VerifySubscriberTransferTokenRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) verify_subscriber_transfer_token_request = VerifySubscriberTransferTokenRequest( token=\"token_example\", ) # VerifySubscriberTransferTokenRequest | Subscriber transfer token that noticed via email. # example passing only required values which don't have defaults set try: # Verify Subscriber Transfer Token. api_response = api_instance.verify_subscriber_transfer_token(verify_subscriber_transfer_token_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SubscriberApi->verify_subscriber_transfer_token: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SubscriberApi/#parameters_30","text":"Name Type Description Notes verify_subscriber_transfer_token_request VerifySubscriberTransferTokenRequest Subscriber transfer token that noticed via email.","title":"Parameters"},{"location":"api/docs/SubscriberApi/#return-type_30","text":"VerifySubscriberTransferTokenResponse","title":"Return type"},{"location":"api/docs/SubscriberApi/#authorization_30","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SubscriberApi/#http-request-headers_30","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/SubscriberApi/#http-response-details_30","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SubscriptionContainer/","text":"SubscriptionContainer \u00b6 Properties \u00b6 Name Type Description Notes container_id int [optional] downloaded bool [optional] subscriber {str: (Subscriber,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SubscriptionContainer"},{"location":"api/docs/SubscriptionContainer/#subscriptioncontainer","text":"","title":"SubscriptionContainer"},{"location":"api/docs/SubscriptionContainer/#properties","text":"Name Type Description Notes container_id int [optional] downloaded bool [optional] subscriber {str: (Subscriber,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SubscriptionContainerStatus/","text":"SubscriptionContainerStatus \u00b6 Properties \u00b6 Name Type Description Notes containers [SubscriptionContainer] [optional] country_mapping {str: (SubscriptionContainerStatusCountryMapping,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SubscriptionContainerStatus"},{"location":"api/docs/SubscriptionContainerStatus/#subscriptioncontainerstatus","text":"","title":"SubscriptionContainerStatus"},{"location":"api/docs/SubscriptionContainerStatus/#properties","text":"Name Type Description Notes containers [SubscriptionContainer] [optional] country_mapping {str: (SubscriptionContainerStatusCountryMapping,)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SubscriptionContainerStatusCountryMapping/","text":"SubscriptionContainerStatusCountryMapping \u00b6 Properties \u00b6 Name Type Description Notes mapping_record SubscriptionContainerStatusMappingRecord [optional] plmn_code str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SubscriptionContainerStatusCountryMapping"},{"location":"api/docs/SubscriptionContainerStatusCountryMapping/#subscriptioncontainerstatuscountrymapping","text":"","title":"SubscriptionContainerStatusCountryMapping"},{"location":"api/docs/SubscriptionContainerStatusCountryMapping/#properties","text":"Name Type Description Notes mapping_record SubscriptionContainerStatusMappingRecord [optional] plmn_code str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SubscriptionContainerStatusMappingRecord/","text":"SubscriptionContainerStatusMappingRecord \u00b6 Properties \u00b6 Name Type Description Notes container_id int [optional] subscription str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SubscriptionContainerStatusMappingRecord"},{"location":"api/docs/SubscriptionContainerStatusMappingRecord/#subscriptioncontainerstatusmappingrecord","text":"","title":"SubscriptionContainerStatusMappingRecord"},{"location":"api/docs/SubscriptionContainerStatusMappingRecord/#properties","text":"Name Type Description Notes container_id int [optional] subscription str, none_type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SupportTokenResponse/","text":"SupportTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SupportTokenResponse"},{"location":"api/docs/SupportTokenResponse/#supporttokenresponse","text":"","title":"SupportTokenResponse"},{"location":"api/docs/SupportTokenResponse/#properties","text":"Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/SystemNotificationApi/","text":"soracom_api.SystemNotificationApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_system_notification DELETE /operators/{operator_id}/system_notifications/{type} Delete system notification get_system_notification GET /operators/{operator_id}/system_notifications/{type} Get system notification list_system_notifications GET /operators/{operator_id}/system_notifications List system notifications set_system_notification POST /operators/{operator_id}/system_notifications/{type} Set system notification delete_system_notification \u00b6 delete_system_notification(operator_id, type) Delete system notification Deletes a system notification. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"recovery\" # str | system notification type # example passing only required values which don't have defaults set try: # Delete system notification api_instance.delete_system_notification(operator_id, type) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->delete_system_notification: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id type str system notification type Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_system_notification \u00b6 SystemNotificationsModel get_system_notification(operator_id, type) Get system notification Returns a system notification. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"primary\" # str | system notification type # example passing only required values which don't have defaults set try: # Get system notification api_response = api_instance.get_system_notification(operator_id, type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->get_system_notification: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id type str system notification type Return type \u00b6 SystemNotificationsModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_system_notifications \u00b6 [SystemNotificationsModel] list_system_notifications(operator_id) List system notifications Returns a list of system notifications. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List system notifications api_response = api_instance.list_system_notifications(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->list_system_notifications: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 [SystemNotificationsModel] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_system_notification \u00b6 SystemNotificationsModel set_system_notification(operator_id, type, set_system_notifications_request) Set system notification Sets a system notification. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.set_system_notifications_request import SetSystemNotificationsRequest from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"primary\" # str | system notification type set_system_notifications_request = SetSystemNotificationsRequest( email_id_list=[ \"email_id_list_example\", ], password=\"password_example\", ) # SetSystemNotificationsRequest | request # example passing only required values which don't have defaults set try: # Set system notification api_response = api_instance.set_system_notification(operator_id, type, set_system_notifications_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->set_system_notification: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id type str system notification type set_system_notifications_request SetSystemNotificationsRequest request Return type \u00b6 SystemNotificationsModel Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.SystemNotificationApi"},{"location":"api/docs/SystemNotificationApi/#soracom_apisystemnotificationapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description delete_system_notification DELETE /operators/{operator_id}/system_notifications/{type} Delete system notification get_system_notification GET /operators/{operator_id}/system_notifications/{type} Get system notification list_system_notifications GET /operators/{operator_id}/system_notifications List system notifications set_system_notification POST /operators/{operator_id}/system_notifications/{type} Set system notification","title":"soracom_api.SystemNotificationApi"},{"location":"api/docs/SystemNotificationApi/#delete_system_notification","text":"delete_system_notification(operator_id, type) Delete system notification Deletes a system notification.","title":"delete_system_notification"},{"location":"api/docs/SystemNotificationApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"recovery\" # str | system notification type # example passing only required values which don't have defaults set try: # Delete system notification api_instance.delete_system_notification(operator_id, type) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->delete_system_notification: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SystemNotificationApi/#parameters","text":"Name Type Description Notes operator_id str operator_id type str system notification type","title":"Parameters"},{"location":"api/docs/SystemNotificationApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/SystemNotificationApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SystemNotificationApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/SystemNotificationApi/#http-response-details","text":"Status code Description Response headers 204 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SystemNotificationApi/#get_system_notification","text":"SystemNotificationsModel get_system_notification(operator_id, type) Get system notification Returns a system notification.","title":"get_system_notification"},{"location":"api/docs/SystemNotificationApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"primary\" # str | system notification type # example passing only required values which don't have defaults set try: # Get system notification api_response = api_instance.get_system_notification(operator_id, type) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->get_system_notification: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SystemNotificationApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id type str system notification type","title":"Parameters"},{"location":"api/docs/SystemNotificationApi/#return-type_1","text":"SystemNotificationsModel","title":"Return type"},{"location":"api/docs/SystemNotificationApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SystemNotificationApi/#http-request-headers_1","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SystemNotificationApi/#http-response-details_1","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SystemNotificationApi/#list_system_notifications","text":"[SystemNotificationsModel] list_system_notifications(operator_id) List system notifications Returns a list of system notifications.","title":"list_system_notifications"},{"location":"api/docs/SystemNotificationApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List system notifications api_response = api_instance.list_system_notifications(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->list_system_notifications: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SystemNotificationApi/#parameters_2","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/SystemNotificationApi/#return-type_2","text":"[SystemNotificationsModel]","title":"Return type"},{"location":"api/docs/SystemNotificationApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SystemNotificationApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SystemNotificationApi/#http-response-details_2","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SystemNotificationApi/#set_system_notification","text":"SystemNotificationsModel set_system_notification(operator_id, type, set_system_notifications_request) Set system notification Sets a system notification.","title":"set_system_notification"},{"location":"api/docs/SystemNotificationApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import system_notification_api from soracom_api.model.set_system_notifications_request import SetSystemNotificationsRequest from soracom_api.model.system_notifications_model import SystemNotificationsModel from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = system_notification_api.SystemNotificationApi(api_client) operator_id = \"operator_id_example\" # str | operator_id type = \"primary\" # str | system notification type set_system_notifications_request = SetSystemNotificationsRequest( email_id_list=[ \"email_id_list_example\", ], password=\"password_example\", ) # SetSystemNotificationsRequest | request # example passing only required values which don't have defaults set try: # Set system notification api_response = api_instance.set_system_notification(operator_id, type, set_system_notifications_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling SystemNotificationApi->set_system_notification: %s\\n\" % e)","title":"Example"},{"location":"api/docs/SystemNotificationApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id type str system notification type set_system_notifications_request SetSystemNotificationsRequest request","title":"Parameters"},{"location":"api/docs/SystemNotificationApi/#return-type_3","text":"SystemNotificationsModel","title":"Return type"},{"location":"api/docs/SystemNotificationApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/SystemNotificationApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/SystemNotificationApi/#http-response-details_3","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/SystemNotificationsModel/","text":"SystemNotificationsModel \u00b6 Properties \u00b6 Name Type Description Notes email_id_list [str] [optional] type str Notification type [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SystemNotificationsModel"},{"location":"api/docs/SystemNotificationsModel/#systemnotificationsmodel","text":"","title":"SystemNotificationsModel"},{"location":"api/docs/SystemNotificationsModel/#properties","text":"Name Type Description Notes email_id_list [str] [optional] type str Notification type [optional] update_date_time int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/TagSet/","text":"TagSet \u00b6 An object which always contains at least one property \\\"name\\\" with a string value. If you give a subscriber/SIM a name, the name will be returned as the value of the \\\"name\\\" property. If the subscriber/SIM does not have a name, an empty string \\\"\\\" is returned. In addition, if you create any custom tags for the subscriber/SIM, each custom tag will appear as additional properties in the object. Properties \u00b6 Name Type Description Notes any string name str any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TagSet"},{"location":"api/docs/TagSet/#tagset","text":"An object which always contains at least one property \\\"name\\\" with a string value. If you give a subscriber/SIM a name, the name will be returned as the value of the \\\"name\\\" property. If the subscriber/SIM does not have a name, an empty string \\\"\\\" is returned. In addition, if you create any custom tags for the subscriber/SIM, each custom tag will appear as additional properties in the object.","title":"TagSet"},{"location":"api/docs/TagSet/#properties","text":"Name Type Description Notes any string name str any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/TagUpdateRequest/","text":"TagUpdateRequest \u00b6 Properties \u00b6 Name Type Description Notes tag_name str tag_value str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TagUpdateRequest"},{"location":"api/docs/TagUpdateRequest/#tagupdaterequest","text":"","title":"TagUpdateRequest"},{"location":"api/docs/TagUpdateRequest/#properties","text":"Name Type Description Notes tag_name str tag_value str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/TrafficVolumeRanking/","text":"TrafficVolumeRanking \u00b6 Properties \u00b6 Name Type Description Notes imsi str [optional] traffic_volume int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TrafficVolumeRanking"},{"location":"api/docs/TrafficVolumeRanking/#trafficvolumeranking","text":"","title":"TrafficVolumeRanking"},{"location":"api/docs/TrafficVolumeRanking/#properties","text":"Name Type Description Notes imsi str [optional] traffic_volume int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdateDefaultPermissionsRequest/","text":"UpdateDefaultPermissionsRequest \u00b6 Properties \u00b6 Name Type Description Notes permissions str JSON string of permissions any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UpdateDefaultPermissionsRequest"},{"location":"api/docs/UpdateDefaultPermissionsRequest/#updatedefaultpermissionsrequest","text":"","title":"UpdateDefaultPermissionsRequest"},{"location":"api/docs/UpdateDefaultPermissionsRequest/#properties","text":"Name Type Description Notes permissions str JSON string of permissions any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdateEventHandlerRequest/","text":"UpdateEventHandlerRequest \u00b6 Properties \u00b6 Name Type Description Notes value CreateEventHandlerRequest [Back to Model list] [Back to API list] [Back to README]","title":"UpdateEventHandlerRequest"},{"location":"api/docs/UpdateEventHandlerRequest/#updateeventhandlerrequest","text":"","title":"UpdateEventHandlerRequest"},{"location":"api/docs/UpdateEventHandlerRequest/#properties","text":"Name Type Description Notes value CreateEventHandlerRequest [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdatePasswordRequest/","text":"UpdatePasswordRequest \u00b6 Properties \u00b6 Name Type Description Notes current_password str new_password str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UpdatePasswordRequest"},{"location":"api/docs/UpdatePasswordRequest/#updatepasswordrequest","text":"","title":"UpdatePasswordRequest"},{"location":"api/docs/UpdatePasswordRequest/#properties","text":"Name Type Description Notes current_password str new_password str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdatePermissionRequest/","text":"UpdatePermissionRequest \u00b6 Properties \u00b6 Name Type Description Notes operator_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UpdatePermissionRequest"},{"location":"api/docs/UpdatePermissionRequest/#updatepermissionrequest","text":"","title":"UpdatePermissionRequest"},{"location":"api/docs/UpdatePermissionRequest/#properties","text":"Name Type Description Notes operator_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdateSpeedClassRequest/","text":"UpdateSpeedClassRequest \u00b6 Properties \u00b6 Name Type Description Notes speed_class str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UpdateSpeedClassRequest"},{"location":"api/docs/UpdateSpeedClassRequest/#updatespeedclassrequest","text":"","title":"UpdateSpeedClassRequest"},{"location":"api/docs/UpdateSpeedClassRequest/#properties","text":"Name Type Description Notes speed_class str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UpdateUserRequest/","text":"UpdateUserRequest \u00b6 Properties \u00b6 Name Type Description Notes description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UpdateUserRequest"},{"location":"api/docs/UpdateUserRequest/#updateuserrequest","text":"","title":"UpdateUserRequest"},{"location":"api/docs/UpdateUserRequest/#properties","text":"Name Type Description Notes description str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/UserApi/","text":"soracom_api.UserApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_user POST /operators/{operator_id}/users/{user_name} Create User. create_user_password POST /operators/{operator_id}/users/{user_name}/password Create Password. delete_user DELETE /operators/{operator_id}/users/{user_name} Delete User. delete_user_auth_key DELETE /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Delete User AuthKey. delete_user_password DELETE /operators/{operator_id}/users/{user_name}/password Delete Password. enable_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa Enable SAM user's MFA generate_user_auth_key POST /operators/{operator_id}/users/{user_name}/auth_keys Generate AuthKey. get_default_permissions GET /operators/{operator_id}/users/default_permissions Get the default permissions get_user GET /operators/{operator_id}/users/{user_name} Get User. get_user_auth_key GET /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Get AuthKey. get_user_mfa_status GET /operators/{operator_id}/users/{user_name}/mfa Get SAM user's MFA status get_user_permission GET /operators/{operator_id}/users/{user_name}/permission Get User Permission. has_user_password GET /operators/{operator_id}/users/{user_name}/password Has User Password. list_user_auth_keys GET /operators/{operator_id}/users/{user_name}/auth_keys List User AuthKeys. list_users GET /operators/{operator_id}/users List Users. revoke_user_mfa DELETE /operators/{operator_id}/users/{user_name}/mfa Revoke SAM user's MFA update_default_permissions PUT /operators/{operator_id}/users/default_permissions Update the default permissions update_user PUT /operators/{operator_id}/users/{user_name} Update User. update_user_password PUT /operators/{operator_id}/users/{user_name}/password Update Password. update_user_permission PUT /operators/{operator_id}/users/{user_name}/permission Update Permission to User. verify_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa/verify Verify SAM user's MFA OTP code when MFA activation phase create_user \u00b6 create_user(operator_id, user_name, create_user_request) Create User. Adds a new SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.create_user_request import CreateUserRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name create_user_request = CreateUserRequest( description=\"description_example\", ) # CreateUserRequest | description # example passing only required values which don't have defaults set try: # Create User. api_instance.create_user(operator_id, user_name, create_user_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->create_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name create_user_request CreateUserRequest description Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 A new user was added. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_user_password \u00b6 create_user_password(operator_id, user_name, create_user_password_request) Create Password. Creates a password for the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.create_user_password_request import CreateUserPasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name create_user_password_request = CreateUserPasswordRequest( password=\"password_example\", ) # CreateUserPasswordRequest | password # example passing only required values which don't have defaults set try: # Create Password. api_instance.create_user_password(operator_id, user_name, create_user_password_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->create_user_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name create_user_password_request CreateUserPasswordRequest password Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Password for the SAM user was registered. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_user \u00b6 delete_user(operator_id, user_name) Delete User. Deletes the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Delete User. api_instance.delete_user(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 204 The SAM user was deleted. - 404 SAM User not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_user_auth_key \u00b6 delete_user_auth_key(operator_id, user_name, auth_key_id) Delete User AuthKey. Deletes an AuthKey from the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Delete User AuthKey. api_instance.delete_user_auth_key(operator_id, user_name, auth_key_id) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user_auth_key: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name auth_key_id str auth_key_id Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 204 The AuthKey was deleted. - 404 AuthKey not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_user_password \u00b6 delete_user_password(operator_id, user_name) Delete Password. Deletes the user's password. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Delete Password. api_instance.delete_user_password(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 204 The user's password was deleted. - 404 Password registration is required. - [Back to top] [Back to API list] [Back to Model list] [Back to README] enable_user_mfa \u00b6 EnableMFAOTPResponse enable_user_mfa(operator_id, user_name) Enable SAM user's MFA Enable SAM user's MFA Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.enable_mfaotp_response import EnableMFAOTPResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Enable SAM user's MFA api_response = api_instance.enable_user_mfa(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->enable_user_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID user_name str SAM user name Return type \u00b6 EnableMFAOTPResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] generate_user_auth_key \u00b6 GenerateUserAuthKeyResponse generate_user_auth_key(operator_id, user_name) Generate AuthKey. Generates an AuthKey for the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.generate_user_auth_key_response import GenerateUserAuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Generate AuthKey. api_response = api_instance.generate_user_auth_key(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->generate_user_auth_key: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 GenerateUserAuthKeyResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_default_permissions \u00b6 GetDefaultPermissionsResponse get_default_permissions(operator_id) Get the default permissions Get the default permissions rule that is applied to all of the SAM users Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_default_permissions_response import GetDefaultPermissionsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID # example passing only required values which don't have defaults set try: # Get the default permissions api_response = api_instance.get_default_permissions(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_default_permissions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID Return type \u00b6 GetDefaultPermissionsResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - 403 Not privileged - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_user \u00b6 UserDetailResponse get_user(operator_id, user_name) Get User. Returns a SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Get User. api_response = api_instance.get_user(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 UserDetailResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_user_auth_key \u00b6 AuthKeyResponse get_user_auth_key(operator_id, user_name, auth_key_id) Get AuthKey. Returns the SAM user's AuthKey. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Get AuthKey. api_response = api_instance.get_user_auth_key(operator_id, user_name, auth_key_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_auth_key: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name auth_key_id str auth_key_id Return type \u00b6 AuthKeyResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_user_mfa_status \u00b6 MFAStatusOfUseResponse get_user_mfa_status(operator_id, user_name) Get SAM user's MFA status Get SAM user's MFA status Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.mfa_status_of_use_response import MFAStatusOfUseResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Get SAM user's MFA status api_response = api_instance.get_user_mfa_status(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_mfa_status: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID user_name str SAM user name Return type \u00b6 MFAStatusOfUseResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_user_permission \u00b6 GetUserPermissionResponse get_user_permission(operator_id, user_name) Get User Permission. Retrieves the SAM user's permissions. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_user_permission_response import GetUserPermissionResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Get User Permission. api_response = api_instance.get_user_permission(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_permission: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 GetUserPermissionResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] has_user_password \u00b6 GetUserPasswordResponse has_user_password(operator_id, user_name) Has User Password. Retrieves whether the SAM user has a password or not. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_user_password_response import GetUserPasswordResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Has User Password. api_response = api_instance.has_user_password(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->has_user_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 GetUserPasswordResponse Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_user_auth_keys \u00b6 [AuthKeyResponse] list_user_auth_keys(operator_id, user_name) List User AuthKeys. Returns the SAM user's AuthKey list. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # List User AuthKeys. api_response = api_instance.list_user_auth_keys(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->list_user_auth_keys: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name Return type \u00b6 [AuthKeyResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_users \u00b6 [UserDetailResponse] list_users(operator_id) List Users. Returns a list of SAM users. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Users. api_response = api_instance.list_users(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->list_users: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 [UserDetailResponse] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README] revoke_user_mfa \u00b6 revoke_user_mfa(operator_id, user_name) Revoke SAM user's MFA Revoke SAM user's MFA Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Revoke SAM user's MFA api_instance.revoke_user_mfa(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->revoke_user_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID user_name str SAM user name Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Revoked - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_default_permissions \u00b6 update_default_permissions(operator_id, update_default_permissions_request) Update the default permissions Update the default permissions rule that is applied to all of the SAM Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_default_permissions_request import UpdateDefaultPermissionsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID update_default_permissions_request = UpdateDefaultPermissionsRequest( permissions=\"permissions_example\", ) # UpdateDefaultPermissionsRequest | request # example passing only required values which don't have defaults set try: # Update the default permissions api_instance.update_default_permissions(operator_id, update_default_permissions_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_default_permissions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID update_default_permissions_request UpdateDefaultPermissionsRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 202 Accepted - 400 Bad Request - 403 Not privileged - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_user \u00b6 update_user(operator_id, user_name, update_user_request) Update User. Updates the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_user_request import UpdateUserRequest from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name update_user_request = UpdateUserRequest( description=\"description_example\", ) # UpdateUserRequest | description # example passing only required values which don't have defaults set try: # Update User. api_instance.update_user(operator_id, user_name, update_user_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name update_user_request UpdateUserRequest description Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json;charset=UTF-8 HTTP response details \u00b6 Status code Description Response headers 200 OK - 404 SAM User not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_user_password \u00b6 update_user_password(operator_id, user_name, update_password_request) Update Password. Updates the password of the SAM user. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_password_request import UpdatePasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name update_password_request = UpdatePasswordRequest( current_password=\"current_password_example\", new_password=\"new_password_example\", ) # UpdatePasswordRequest | password # example passing only required values which don't have defaults set try: # Update Password. api_instance.update_user_password(operator_id, user_name, update_password_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user_password: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name update_password_request UpdatePasswordRequest password Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_user_permission \u00b6 update_user_permission(operator_id, user_name, set_user_permission_request) Update Permission to User. Updates the SAM user's permissions. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.set_user_permission_request import SetUserPermissionRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name set_user_permission_request = SetUserPermissionRequest( description=\"description_example\", permission=\"permission_example\", ) # SetUserPermissionRequest | permission # example passing only required values which don't have defaults set try: # Update Permission to User. api_instance.update_user_permission(operator_id, user_name, set_user_permission_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user_permission: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id user_name str user_name set_user_permission_request SetUserPermissionRequest permission Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README] verify_user_mfa \u00b6 verify_user_mfa(operator_id, user_name, mfa_authentication_request) Verify SAM user's MFA OTP code when MFA activation phase Verify SAM user's MFA OTP code when MFA activation phase Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.mfa_authentication_request import MFAAuthenticationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name mfa_authentication_request = MFAAuthenticationRequest( mfa_otp_code=\"mfa_otp_code_example\", ) # MFAAuthenticationRequest | request # example passing only required values which don't have defaults set try: # Verify SAM user's MFA OTP code when MFA activation phase api_instance.verify_user_mfa(operator_id, user_name, mfa_authentication_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->verify_user_mfa: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str Operator ID user_name str SAM user name mfa_authentication_request MFAAuthenticationRequest request Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Verified - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.UserApi"},{"location":"api/docs/UserApi/#soracom_apiuserapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description create_user POST /operators/{operator_id}/users/{user_name} Create User. create_user_password POST /operators/{operator_id}/users/{user_name}/password Create Password. delete_user DELETE /operators/{operator_id}/users/{user_name} Delete User. delete_user_auth_key DELETE /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Delete User AuthKey. delete_user_password DELETE /operators/{operator_id}/users/{user_name}/password Delete Password. enable_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa Enable SAM user's MFA generate_user_auth_key POST /operators/{operator_id}/users/{user_name}/auth_keys Generate AuthKey. get_default_permissions GET /operators/{operator_id}/users/default_permissions Get the default permissions get_user GET /operators/{operator_id}/users/{user_name} Get User. get_user_auth_key GET /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id} Get AuthKey. get_user_mfa_status GET /operators/{operator_id}/users/{user_name}/mfa Get SAM user's MFA status get_user_permission GET /operators/{operator_id}/users/{user_name}/permission Get User Permission. has_user_password GET /operators/{operator_id}/users/{user_name}/password Has User Password. list_user_auth_keys GET /operators/{operator_id}/users/{user_name}/auth_keys List User AuthKeys. list_users GET /operators/{operator_id}/users List Users. revoke_user_mfa DELETE /operators/{operator_id}/users/{user_name}/mfa Revoke SAM user's MFA update_default_permissions PUT /operators/{operator_id}/users/default_permissions Update the default permissions update_user PUT /operators/{operator_id}/users/{user_name} Update User. update_user_password PUT /operators/{operator_id}/users/{user_name}/password Update Password. update_user_permission PUT /operators/{operator_id}/users/{user_name}/permission Update Permission to User. verify_user_mfa POST /operators/{operator_id}/users/{user_name}/mfa/verify Verify SAM user's MFA OTP code when MFA activation phase","title":"soracom_api.UserApi"},{"location":"api/docs/UserApi/#create_user","text":"create_user(operator_id, user_name, create_user_request) Create User. Adds a new SAM user.","title":"create_user"},{"location":"api/docs/UserApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.create_user_request import CreateUserRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name create_user_request = CreateUserRequest( description=\"description_example\", ) # CreateUserRequest | description # example passing only required values which don't have defaults set try: # Create User. api_instance.create_user(operator_id, user_name, create_user_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->create_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters","text":"Name Type Description Notes operator_id str operator_id user_name str user_name create_user_request CreateUserRequest description","title":"Parameters"},{"location":"api/docs/UserApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details","text":"Status code Description Response headers 201 A new user was added. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#create_user_password","text":"create_user_password(operator_id, user_name, create_user_password_request) Create Password. Creates a password for the SAM user.","title":"create_user_password"},{"location":"api/docs/UserApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.create_user_password_request import CreateUserPasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name create_user_password_request = CreateUserPasswordRequest( password=\"password_example\", ) # CreateUserPasswordRequest | password # example passing only required values which don't have defaults set try: # Create Password. api_instance.create_user_password(operator_id, user_name, create_user_password_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->create_user_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_1","text":"Name Type Description Notes operator_id str operator_id user_name str user_name create_user_password_request CreateUserPasswordRequest password","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_1","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_1","text":"Status code Description Response headers 201 Password for the SAM user was registered. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#delete_user","text":"delete_user(operator_id, user_name) Delete User. Deletes the SAM user.","title":"delete_user"},{"location":"api/docs/UserApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Delete User. api_instance.delete_user(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_2","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_2","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_2","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_2","text":"Status code Description Response headers 204 The SAM user was deleted. - 404 SAM User not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#delete_user_auth_key","text":"delete_user_auth_key(operator_id, user_name, auth_key_id) Delete User AuthKey. Deletes an AuthKey from the SAM user.","title":"delete_user_auth_key"},{"location":"api/docs/UserApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Delete User AuthKey. api_instance.delete_user_auth_key(operator_id, user_name, auth_key_id) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user_auth_key: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_3","text":"Name Type Description Notes operator_id str operator_id user_name str user_name auth_key_id str auth_key_id","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_3","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_3","text":"Status code Description Response headers 204 The AuthKey was deleted. - 404 AuthKey not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#delete_user_password","text":"delete_user_password(operator_id, user_name) Delete Password. Deletes the user's password.","title":"delete_user_password"},{"location":"api/docs/UserApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Delete Password. api_instance.delete_user_password(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->delete_user_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_4","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_4","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_4","text":"Status code Description Response headers 204 The user's password was deleted. - 404 Password registration is required. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#enable_user_mfa","text":"EnableMFAOTPResponse enable_user_mfa(operator_id, user_name) Enable SAM user's MFA Enable SAM user's MFA","title":"enable_user_mfa"},{"location":"api/docs/UserApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.enable_mfaotp_response import EnableMFAOTPResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Enable SAM user's MFA api_response = api_instance.enable_user_mfa(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->enable_user_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_5","text":"Name Type Description Notes operator_id str Operator ID user_name str SAM user name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_5","text":"EnableMFAOTPResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_5","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#generate_user_auth_key","text":"GenerateUserAuthKeyResponse generate_user_auth_key(operator_id, user_name) Generate AuthKey. Generates an AuthKey for the SAM user.","title":"generate_user_auth_key"},{"location":"api/docs/UserApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.generate_user_auth_key_response import GenerateUserAuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Generate AuthKey. api_response = api_instance.generate_user_auth_key(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->generate_user_auth_key: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_6","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_6","text":"GenerateUserAuthKeyResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_6","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#get_default_permissions","text":"GetDefaultPermissionsResponse get_default_permissions(operator_id) Get the default permissions Get the default permissions rule that is applied to all of the SAM users","title":"get_default_permissions"},{"location":"api/docs/UserApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_default_permissions_response import GetDefaultPermissionsResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID # example passing only required values which don't have defaults set try: # Get the default permissions api_response = api_instance.get_default_permissions(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_default_permissions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_7","text":"Name Type Description Notes operator_id str Operator ID","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_7","text":"GetDefaultPermissionsResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_7","text":"Status code Description Response headers 200 OK - 403 Not privileged - 404 Operator Not Found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#get_user","text":"UserDetailResponse get_user(operator_id, user_name) Get User. Returns a SAM user.","title":"get_user"},{"location":"api/docs/UserApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Get User. api_response = api_instance.get_user(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_8","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_8","text":"UserDetailResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_8","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#get_user_auth_key","text":"AuthKeyResponse get_user_auth_key(operator_id, user_name, auth_key_id) Get AuthKey. Returns the SAM user's AuthKey.","title":"get_user_auth_key"},{"location":"api/docs/UserApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name auth_key_id = \"auth_key_id_example\" # str | auth_key_id # example passing only required values which don't have defaults set try: # Get AuthKey. api_response = api_instance.get_user_auth_key(operator_id, user_name, auth_key_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_auth_key: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_9","text":"Name Type Description Notes operator_id str operator_id user_name str user_name auth_key_id str auth_key_id","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_9","text":"AuthKeyResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_9","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#get_user_mfa_status","text":"MFAStatusOfUseResponse get_user_mfa_status(operator_id, user_name) Get SAM user's MFA status Get SAM user's MFA status","title":"get_user_mfa_status"},{"location":"api/docs/UserApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.mfa_status_of_use_response import MFAStatusOfUseResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Get SAM user's MFA status api_response = api_instance.get_user_mfa_status(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_mfa_status: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_10","text":"Name Type Description Notes operator_id str Operator ID user_name str SAM user name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_10","text":"MFAStatusOfUseResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_10","text":"Status code Description Response headers 200 OK - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#get_user_permission","text":"GetUserPermissionResponse get_user_permission(operator_id, user_name) Get User Permission. Retrieves the SAM user's permissions.","title":"get_user_permission"},{"location":"api/docs/UserApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_user_permission_response import GetUserPermissionResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Get User Permission. api_response = api_instance.get_user_permission(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->get_user_permission: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_11","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_11","text":"GetUserPermissionResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_11","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#has_user_password","text":"GetUserPasswordResponse has_user_password(operator_id, user_name) Has User Password. Retrieves whether the SAM user has a password or not.","title":"has_user_password"},{"location":"api/docs/UserApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.get_user_password_response import GetUserPasswordResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # Has User Password. api_response = api_instance.has_user_password(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->has_user_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_12","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_12","text":"GetUserPasswordResponse","title":"Return type"},{"location":"api/docs/UserApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_12","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#list_user_auth_keys","text":"[AuthKeyResponse] list_user_auth_keys(operator_id, user_name) List User AuthKeys. Returns the SAM user's AuthKey list.","title":"list_user_auth_keys"},{"location":"api/docs/UserApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.auth_key_response import AuthKeyResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name # example passing only required values which don't have defaults set try: # List User AuthKeys. api_response = api_instance.list_user_auth_keys(operator_id, user_name) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->list_user_auth_keys: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_13","text":"Name Type Description Notes operator_id str operator_id user_name str user_name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_13","text":"[AuthKeyResponse]","title":"Return type"},{"location":"api/docs/UserApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_13","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#list_users","text":"[UserDetailResponse] list_users(operator_id) List Users. Returns a list of SAM users.","title":"list_users"},{"location":"api/docs/UserApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.user_detail_response import UserDetailResponse from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # List Users. api_response = api_instance.list_users(operator_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->list_users: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_14","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_14","text":"[UserDetailResponse]","title":"Return type"},{"location":"api/docs/UserApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_14","text":"Status code Description Response headers 200 OK. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#revoke_user_mfa","text":"revoke_user_mfa(operator_id, user_name) Revoke SAM user's MFA Revoke SAM user's MFA","title":"revoke_user_mfa"},{"location":"api/docs/UserApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name # example passing only required values which don't have defaults set try: # Revoke SAM user's MFA api_instance.revoke_user_mfa(operator_id, user_name) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->revoke_user_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_15","text":"Name Type Description Notes operator_id str Operator ID user_name str SAM user name","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_15","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_15","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_15","text":"Status code Description Response headers 204 Revoked - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#update_default_permissions","text":"update_default_permissions(operator_id, update_default_permissions_request) Update the default permissions Update the default permissions rule that is applied to all of the SAM","title":"update_default_permissions"},{"location":"api/docs/UserApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_default_permissions_request import UpdateDefaultPermissionsRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID update_default_permissions_request = UpdateDefaultPermissionsRequest( permissions=\"permissions_example\", ) # UpdateDefaultPermissionsRequest | request # example passing only required values which don't have defaults set try: # Update the default permissions api_instance.update_default_permissions(operator_id, update_default_permissions_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_default_permissions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_16","text":"Name Type Description Notes operator_id str Operator ID update_default_permissions_request UpdateDefaultPermissionsRequest request","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_16","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_16","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_16","text":"Status code Description Response headers 202 Accepted - 400 Bad Request - 403 Not privileged - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#update_user","text":"update_user(operator_id, user_name, update_user_request) Update User. Updates the SAM user.","title":"update_user"},{"location":"api/docs/UserApi/#example_17","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_user_request import UpdateUserRequest from soracom_api.model.api_call_error import APICallError from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name update_user_request = UpdateUserRequest( description=\"description_example\", ) # UpdateUserRequest | description # example passing only required values which don't have defaults set try: # Update User. api_instance.update_user(operator_id, user_name, update_user_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_17","text":"Name Type Description Notes operator_id str operator_id user_name str user_name update_user_request UpdateUserRequest description","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_17","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_17","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json;charset=UTF-8","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_17","text":"Status code Description Response headers 200 OK - 404 SAM User not found. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#update_user_password","text":"update_user_password(operator_id, user_name, update_password_request) Update Password. Updates the password of the SAM user.","title":"update_user_password"},{"location":"api/docs/UserApi/#example_18","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.update_password_request import UpdatePasswordRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name update_password_request = UpdatePasswordRequest( current_password=\"current_password_example\", new_password=\"new_password_example\", ) # UpdatePasswordRequest | password # example passing only required values which don't have defaults set try: # Update Password. api_instance.update_user_password(operator_id, user_name, update_password_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user_password: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_18","text":"Name Type Description Notes operator_id str operator_id user_name str user_name update_password_request UpdatePasswordRequest password","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_18","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_18","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_18","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_18","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#update_user_permission","text":"update_user_permission(operator_id, user_name, set_user_permission_request) Update Permission to User. Updates the SAM user's permissions.","title":"update_user_permission"},{"location":"api/docs/UserApi/#example_19","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.set_user_permission_request import SetUserPermissionRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | operator_id user_name = \"user_name_example\" # str | user_name set_user_permission_request = SetUserPermissionRequest( description=\"description_example\", permission=\"permission_example\", ) # SetUserPermissionRequest | permission # example passing only required values which don't have defaults set try: # Update Permission to User. api_instance.update_user_permission(operator_id, user_name, set_user_permission_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->update_user_permission: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_19","text":"Name Type Description Notes operator_id str operator_id user_name str user_name set_user_permission_request SetUserPermissionRequest permission","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_19","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_19","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_19","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_19","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserApi/#verify_user_mfa","text":"verify_user_mfa(operator_id, user_name, mfa_authentication_request) Verify SAM user's MFA OTP code when MFA activation phase Verify SAM user's MFA OTP code when MFA activation phase","title":"verify_user_mfa"},{"location":"api/docs/UserApi/#example_20","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import user_api from soracom_api.model.mfa_authentication_request import MFAAuthenticationRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = user_api.UserApi(api_client) operator_id = \"operator_id_example\" # str | Operator ID user_name = \"user_name_example\" # str | SAM user name mfa_authentication_request = MFAAuthenticationRequest( mfa_otp_code=\"mfa_otp_code_example\", ) # MFAAuthenticationRequest | request # example passing only required values which don't have defaults set try: # Verify SAM user's MFA OTP code when MFA activation phase api_instance.verify_user_mfa(operator_id, user_name, mfa_authentication_request) except soracom_api.ApiException as e: print(\"Exception when calling UserApi->verify_user_mfa: %s\\n\" % e)","title":"Example"},{"location":"api/docs/UserApi/#parameters_20","text":"Name Type Description Notes operator_id str Operator ID user_name str SAM user name mfa_authentication_request MFAAuthenticationRequest request","title":"Parameters"},{"location":"api/docs/UserApi/#return-type_20","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/UserApi/#authorization_20","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/UserApi/#http-request-headers_20","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/UserApi/#http-response-details_20","text":"Status code Description Response headers 204 Verified - 400 Bad request - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/UserDetailResponse/","text":"UserDetailResponse \u00b6 Properties \u00b6 Name Type Description Notes auth_key_list [AuthKeyResponse] [optional] create_date_time int [optional] description str [optional] has_password bool [optional] permission str [optional] role_list [ListRolesResponse] [optional] update_date_time int [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"UserDetailResponse"},{"location":"api/docs/UserDetailResponse/#userdetailresponse","text":"","title":"UserDetailResponse"},{"location":"api/docs/UserDetailResponse/#properties","text":"Name Type Description Notes auth_key_list [AuthKeyResponse] [optional] create_date_time int [optional] description str [optional] has_password bool [optional] permission str [optional] role_list [ListRolesResponse] [optional] update_date_time int [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VerifyAddEmailTokenRequest/","text":"VerifyAddEmailTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes token str Token sent by email any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VerifyAddEmailTokenRequest"},{"location":"api/docs/VerifyAddEmailTokenRequest/#verifyaddemailtokenrequest","text":"","title":"VerifyAddEmailTokenRequest"},{"location":"api/docs/VerifyAddEmailTokenRequest/#properties","text":"Name Type Description Notes token str Token sent by email any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VerifyOperatorsRequest/","text":"VerifyOperatorsRequest \u00b6 Properties \u00b6 Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VerifyOperatorsRequest"},{"location":"api/docs/VerifyOperatorsRequest/#verifyoperatorsrequest","text":"","title":"VerifyOperatorsRequest"},{"location":"api/docs/VerifyOperatorsRequest/#properties","text":"Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VerifyPasswordResetTokenRequest/","text":"VerifyPasswordResetTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes password str token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VerifyPasswordResetTokenRequest"},{"location":"api/docs/VerifyPasswordResetTokenRequest/#verifypasswordresettokenrequest","text":"","title":"VerifyPasswordResetTokenRequest"},{"location":"api/docs/VerifyPasswordResetTokenRequest/#properties","text":"Name Type Description Notes password str token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VerifySubscriberTransferTokenRequest/","text":"VerifySubscriberTransferTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes token str \u30c8\u30fc\u30af\u30f3 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VerifySubscriberTransferTokenRequest"},{"location":"api/docs/VerifySubscriberTransferTokenRequest/#verifysubscribertransfertokenrequest","text":"","title":"VerifySubscriberTransferTokenRequest"},{"location":"api/docs/VerifySubscriberTransferTokenRequest/#properties","text":"Name Type Description Notes token str \u30c8\u30fc\u30af\u30f3 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VerifySubscriberTransferTokenResponse/","text":"VerifySubscriberTransferTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes transferred_imsi [str] \u79fb\u7ba1\u3055\u308c\u305fIMSI\u30ea\u30b9\u30c8 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VerifySubscriberTransferTokenResponse"},{"location":"api/docs/VerifySubscriberTransferTokenResponse/#verifysubscribertransfertokenresponse","text":"","title":"VerifySubscriberTransferTokenResponse"},{"location":"api/docs/VerifySubscriberTransferTokenResponse/#properties","text":"Name Type Description Notes transferred_imsi [str] \u79fb\u7ba1\u3055\u308c\u305fIMSI\u30ea\u30b9\u30c8 any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VirtualPrivateGateway/","text":"VirtualPrivateGateway \u00b6 Properties \u00b6 Name Type Description Notes created_time int [optional] id str [optional] last_modified_time int [optional] operator_id str [optional] placement Placement [optional] status str [optional] tags TagSet [optional] type int [optional] use_internet_gateway bool [optional] virtual_interfaces {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] vpc_peering_connections {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VirtualPrivateGateway"},{"location":"api/docs/VirtualPrivateGateway/#virtualprivategateway","text":"","title":"VirtualPrivateGateway"},{"location":"api/docs/VirtualPrivateGateway/#properties","text":"Name Type Description Notes created_time int [optional] id str [optional] last_modified_time int [optional] operator_id str [optional] placement Placement [optional] status str [optional] tags TagSet [optional] type int [optional] use_internet_gateway bool [optional] virtual_interfaces {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] vpc_peering_connections {str: (bool, date, datetime, dict, float, int, list, str, none_type)} [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VirtualPrivateGatewayApi/","text":"soracom_api.VirtualPrivateGatewayApi \u00b6 All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description close_gate POST /virtual_private_gateways/{vpg_id}/gate/close Close SORACOM Gate. create_mirroring_peer POST /virtual_private_gateways/{vpg_id}/junction/mirroring/peers Add node in the list of Junction mirroring peers create_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions Create Packet Capture Session create_virtual_private_gateway POST /virtual_private_gateways Create Virtual Private Gateway. create_vpc_peering_connection POST /virtual_private_gateways/{vpg_id}/vpc_peering_connections Create VPC Peering Connection delete_mirroring_peer DELETE /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Remove peer from the list of Junction mirroring peers delete_packet_capture_session DELETE /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session delete_virtual_private_gateway_ip_address_map_entry DELETE /virtual_private_gateways/{vpg_id}/ip_address_map/{key} Delete VPG IP address map entry delete_vpc_peering_connection DELETE /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id} Delete VPC Peering Connection. get_packet_capture_session GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Get Packet Capture Session get_virtual_private_gateway GET /virtual_private_gateways/{vpg_id} Get Virtual Private Gateway. list_gate_peers GET /virtual_private_gateways/{vpg_id}/gate/peers List VPG Gate peers list_packet_capture_sessions GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions List Packet Capture Sessions list_virtual_private_gateway_ip_address_map_entries GET /virtual_private_gateways/{vpg_id}/ip_address_map List VPG IP address map entries list_virtual_private_gateways GET /virtual_private_gateways List Virtual Private Gateways. open_gate POST /virtual_private_gateways/{vpg_id}/gate/open Open SORACOM Gate. put_virtual_private_gateway_ip_address_map_entry POST /virtual_private_gateways/{vpg_id}/ip_address_map Put an entry in VPG IP address map register_gate_peer POST /virtual_private_gateways/{vpg_id}/gate/peers Register VPG Gate peer set_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_inspection Set configuration for Junction inspection feature set_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_redirection Set configuration for Junction redirection feature set_routing_filter POST /virtual_private_gateways/{vpg_id}/set_routing_filter Sets Virtual Private Gateway outbound routing filter. stop_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop Stop Packet Capture Session terminate_virtual_private_gateway POST /virtual_private_gateways/{vpg_id}/terminate Terminate Virtual Private Gateway. unregister_gate_peer DELETE /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address} Unregister VPG gate peer unset_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_inspection Unset configuration for Junction inspection feature unset_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_redirection Unset configuration for Junction redirection feature update_mirroring_peer PUT /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Update a Junction mirroring peer close_gate \u00b6 close_gate(vpg_id) Close SORACOM Gate. Close SORACOM Gate on the specified VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Close SORACOM Gate. api_instance.close_gate(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->close_gate: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 SORACOM Gate is successfully closed on the VPG. - 400 Client side error. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_mirroring_peer \u00b6 create_mirroring_peer(vpg_id, junction_mirroring_peer) Add node in the list of Junction mirroring peers Add node in the list of Junction mirroring peers Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_mirroring_peer import JunctionMirroringPeer from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_mirroring_peer = JunctionMirroringPeer( description=\"description_example\", enabled=False, ip_address=\"ip_address_example\", protocol=\"gre\", ) # JunctionMirroringPeer | Mirroring peer # example passing only required values which don't have defaults set try: # Add node in the list of Junction mirroring peers api_instance.create_mirroring_peer(vpg_id, junction_mirroring_peer) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_mirroring_peer: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID junction_mirroring_peer JunctionMirroringPeer Mirroring peer Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 201 Mirroring peer added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_packet_capture_session \u00b6 PacketCaptureSession create_packet_capture_session(vpg_id, packet_capture_session_request) Create Packet Capture Session Create a packet capture sessions associated the VPG Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session_request import PacketCaptureSessionRequest from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID packet_capture_session_request = PacketCaptureSessionRequest( duration=30, prefix=\"zBAMDTMv2D2ylmgd10Z3UB\", ) # PacketCaptureSessionRequest | A packet capture session request # example passing only required values which don't have defaults set try: # Create Packet Capture Session api_response = api_instance.create_packet_capture_session(vpg_id, packet_capture_session_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID packet_capture_session_request PacketCaptureSessionRequest A packet capture session request Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Created a new packet capture sessions associated with the VPG - 400 Failed to create a packet capture sessions associated with the VPG - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_virtual_private_gateway \u00b6 VirtualPrivateGateway create_virtual_private_gateway(create_virtual_private_gateway_request) Create Virtual Private Gateway. Create new VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.create_virtual_private_gateway_request import CreateVirtualPrivateGatewayRequest from soracom_api.model.virtual_private_gateway import VirtualPrivateGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) create_virtual_private_gateway_request = CreateVirtualPrivateGatewayRequest( device_subnet_cidr_range=\"10.128.0.0/9\", type=14, use_internet_gateway=True, ) # CreateVirtualPrivateGatewayRequest | Request containing information for the new VPG to be created. # example passing only required values which don't have defaults set try: # Create Virtual Private Gateway. api_response = api_instance.create_virtual_private_gateway(create_virtual_private_gateway_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_virtual_private_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes create_virtual_private_gateway_request CreateVirtualPrivateGatewayRequest Request containing information for the new VPG to be created. Return type \u00b6 VirtualPrivateGateway Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README] create_vpc_peering_connection \u00b6 CreateVpcPeeringConnectionRequest create_vpc_peering_connection(vpg_id, create_vpc_peering_connection_request) Create VPC Peering Connection Creates a VPC peering connection for the specified VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.create_vpc_peering_connection_request import CreateVpcPeeringConnectionRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. create_vpc_peering_connection_request = CreateVpcPeeringConnectionRequest( destination_cidr_block=\"destination_cidr_block_example\", peer_owner_id=\"peer_owner_id_example\", peer_region=\"peer_region_example\", peer_vpc_id=\"peer_vpc_id_example\", ) # CreateVpcPeeringConnectionRequest | VPC peering connection to be created. # example passing only required values which don't have defaults set try: # Create VPC Peering Connection api_response = api_instance.create_vpc_peering_connection(vpg_id, create_vpc_peering_connection_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_vpc_peering_connection: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. create_vpc_peering_connection_request CreateVpcPeeringConnectionRequest VPC peering connection to be created. Return type \u00b6 CreateVpcPeeringConnectionRequest Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 The created VPC peering connection. - 404 The specified VPC peering connection does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_mirroring_peer \u00b6 delete_mirroring_peer(vpg_id, ipaddr) Remove peer from the list of Junction mirroring peers Remove peer from the list of Junction mirroring peers Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID ipaddr = \"ipaddr_example\" # str | IP address of mirroring peer # example passing only required values which don't have defaults set try: # Remove peer from the list of Junction mirroring peers api_instance.delete_mirroring_peer(vpg_id, ipaddr) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_mirroring_peer: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID ipaddr str IP address of mirroring peer Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Mirroring peer removed - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_packet_capture_session \u00b6 PacketCaptureSession delete_packet_capture_session(vpg_id, session_id) Delete Packet Capture Session Delete a packet capture sessions associated the VPG Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Delete Packet Capture Session api_response = api_instance.delete_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Deleted the packet capture sessions associated with the VPG - 400 Failed to delete the packet capture sessions associated with the VPG was not found - 404 The packet capture sessions associated with the VPG was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_virtual_private_gateway_ip_address_map_entry \u00b6 IpAddressMapEntry delete_virtual_private_gateway_ip_address_map_entry(vpg_id, key) Delete VPG IP address map entry Deletes an entry in VPG IP address map. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. key = \"key_example\" # str | Target key to remove. # example passing only required values which don't have defaults set try: # Delete VPG IP address map entry api_response = api_instance.delete_virtual_private_gateway_ip_address_map_entry(vpg_id, key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_virtual_private_gateway_ip_address_map_entry: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. key str Target key to remove. Return type \u00b6 IpAddressMapEntry Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 204 Successfully deleted the entry from the VPG IP address map. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] delete_vpc_peering_connection \u00b6 delete_vpc_peering_connection(vpg_id, pcx_id) Delete VPC Peering Connection. Deletes the specified VPC peering connection. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. pcx_id = \"pcx_id_example\" # str | VPC peering connection ID to be deleted. # example passing only required values which don't have defaults set try: # Delete VPC Peering Connection. api_instance.delete_vpc_peering_connection(vpg_id, pcx_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_vpc_peering_connection: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. pcx_id str VPC peering connection ID to be deleted. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Deletion of specified VPC peering connection complete. - 404 The specified VPC peering connection does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_packet_capture_session \u00b6 PacketCaptureSession get_packet_capture_session(vpg_id, session_id) Get Packet Capture Session Get a packet capture sessions associated the VPG Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Get Packet Capture Session api_response = api_instance.get_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->get_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The packet capture sessions associated with the VPG - 404 The packet capture sessions associated with the VPG was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README] get_virtual_private_gateway \u00b6 get_virtual_private_gateway(vpg_id) Get Virtual Private Gateway. Retrieves information about the specified VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Get Virtual Private Gateway. api_instance.get_virtual_private_gateway(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->get_virtual_private_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 The specified VPG. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_gate_peers \u00b6 [GatePeer] list_gate_peers(vpg_id) List VPG Gate peers List Gate peers registered in the Virtual Private Gateway Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.gate_peer import GatePeer from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # List VPG Gate peers api_response = api_instance.list_gate_peers(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_gate_peers: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. Return type \u00b6 [GatePeer] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of peers registered in the VPG. - 400 Client side error in the request. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_packet_capture_sessions \u00b6 [PacketCaptureSession] list_packet_capture_sessions(vpg_id) List Packet Capture Sessions List packet capture sessions associated with the VPG Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID last_evaluated_key = \"null\" # str | ID of the last group in the previous page (optional) if omitted the server will use the default value of \"null\" limit = 10 # int | Max number of results in a response (optional) if omitted the server will use the default value of 10 # example passing only required values which don't have defaults set try: # List Packet Capture Sessions api_response = api_instance.list_packet_capture_sessions(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_packet_capture_sessions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Packet Capture Sessions api_response = api_instance.list_packet_capture_sessions(vpg_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_packet_capture_sessions: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID last_evaluated_key str ID of the last group in the previous page [optional] if omitted the server will use the default value of \"null\" limit int Max number of results in a response [optional] if omitted the server will use the default value of 10 Return type \u00b6 [PacketCaptureSession] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of packet capture sessions associated with the VPG - 400 Failed to list packet capture sessions associated with the VPG - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_virtual_private_gateway_ip_address_map_entries \u00b6 [IpAddressMapEntry] list_virtual_private_gateway_ip_address_map_entries(vpg_id) List VPG IP address map entries Describes the list of IP address map entries in the Virtual Private Gateway Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # List VPG IP address map entries api_response = api_instance.list_virtual_private_gateway_ip_address_map_entries(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_virtual_private_gateway_ip_address_map_entries: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. Return type \u00b6 [IpAddressMapEntry] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Successfully fetched the list of IP address map entries. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] list_virtual_private_gateways \u00b6 [VirtualPrivateGateway] list_virtual_private_gateways() List Virtual Private Gateways. Returns a list of VPGs. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.virtual_private_gateway import VirtualPrivateGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) tag_name = \"tag_name_example\" # str | Tag name of the VPG. Filters through all VPGs that exactly match the tag name. When tag_name is specified, tag_value is required. (optional) tag_value = \"tag_value_example\" # str | Tag value of the VPGs. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next VPG onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Virtual Private Gateways. api_response = api_instance.list_virtual_private_gateways(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_virtual_private_gateways: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes tag_name str Tag name of the VPG. Filters through all VPGs that exactly match the tag name. When tag_name is specified, tag_value is required. [optional] tag_value str Tag value of the VPGs. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of results per response page. [optional] last_evaluated_key str The last group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next VPG onward. [optional] Return type \u00b6 [VirtualPrivateGateway] Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 List of VPGs. - [Back to top] [Back to API list] [Back to Model list] [Back to README] open_gate \u00b6 open_gate(vpg_id) Open SORACOM Gate. Open SORACOM Gate on the specified VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.open_gate_request import OpenGateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. open_gate_request = OpenGateRequest( privacy_separator_enabled=False, vxlan_id=10, ) # OpenGateRequest | Optional configuration parameters for Gate. (optional) # example passing only required values which don't have defaults set try: # Open SORACOM Gate. api_instance.open_gate(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->open_gate: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Open SORACOM Gate. api_instance.open_gate(vpg_id, open_gate_request=open_gate_request) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->open_gate: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. open_gate_request OpenGateRequest Optional configuration parameters for Gate. [optional] Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 SORACOM Gate is successfully opened on the VPG. - 400 Client side error. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] put_virtual_private_gateway_ip_address_map_entry \u00b6 IpAddressMapEntry put_virtual_private_gateway_ip_address_map_entry(vpg_id, put_ip_address_map_entry_request) Put an entry in VPG IP address map Puts an entry in VPG IP address map. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from soracom_api.model.put_ip_address_map_entry_request import PutIpAddressMapEntryRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. put_ip_address_map_entry_request = PutIpAddressMapEntryRequest( ip_address=\"ip_address_example\", key=\"key_example\", ) # PutIpAddressMapEntryRequest | # example passing only required values which don't have defaults set try: # Put an entry in VPG IP address map api_response = api_instance.put_virtual_private_gateway_ip_address_map_entry(vpg_id, put_ip_address_map_entry_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->put_virtual_private_gateway_ip_address_map_entry: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. put_ip_address_map_entry_request PutIpAddressMapEntryRequest Return type \u00b6 IpAddressMapEntry Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Successfully put an entry for the specified key and IP address. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] register_gate_peer \u00b6 GatePeer register_gate_peer(vpg_id, register_gate_peer_request) Register VPG Gate peer Register a host as a gate peer in the Virtual Private Gateway Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.gate_peer import GatePeer from soracom_api.model.register_gate_peer_request import RegisterGatePeerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. register_gate_peer_request = RegisterGatePeerRequest( inner_ip_address=\"inner_ip_address_example\", outer_ip_address=\"outer_ip_address_example\", ) # RegisterGatePeerRequest | # example passing only required values which don't have defaults set try: # Register VPG Gate peer api_response = api_instance.register_gate_peer(vpg_id, register_gate_peer_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->register_gate_peer: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. register_gate_peer_request RegisterGatePeerRequest Return type \u00b6 GatePeer Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Gate peer is successfully registered. - 400 Client side error in the request. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_inspection_configuration \u00b6 set_inspection_configuration(vpg_id, junction_inspection_configuration) Set configuration for Junction inspection feature Set configuration for Junction inspection feature Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_inspection_configuration import JunctionInspectionConfiguration from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_inspection_configuration = JunctionInspectionConfiguration( enabled=False, report=FunnelConfiguration( add_sim_id=False, content_type=FunnelContentType(\"json\"), credentials_id=\"credentials_id_example\", destination=FunnelDestination( provider=\"provider_example\", resource_url=\"resource_url_example\", service=\"service_example\", ), enabled=False, ), ) # JunctionInspectionConfiguration | Inspection configuration # example passing only required values which don't have defaults set try: # Set configuration for Junction inspection feature api_instance.set_inspection_configuration(vpg_id, junction_inspection_configuration) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_inspection_configuration: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID junction_inspection_configuration JunctionInspectionConfiguration Inspection configuration Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Configuration added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_redirection_configuration \u00b6 set_redirection_configuration(vpg_id, junction_redirection_configuration) Set configuration for Junction redirection feature Set configuration for Junction redirection feature Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_redirection_configuration import JunctionRedirectionConfiguration from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_redirection_configuration = JunctionRedirectionConfiguration( description=\"description_example\", enabled=False, gateway=\"gateway_example\", ) # JunctionRedirectionConfiguration | Redirection configuration # example passing only required values which don't have defaults set try: # Set configuration for Junction redirection feature api_instance.set_redirection_configuration(vpg_id, junction_redirection_configuration) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_redirection_configuration: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID junction_redirection_configuration JunctionRedirectionConfiguration Redirection configuration Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Configuration added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] set_routing_filter \u00b6 set_routing_filter(vpg_id, routing_filter_entry) Sets Virtual Private Gateway outbound routing filter. Sets Virtual Private Gateway outbound routing filter. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.routing_filter_entry import RoutingFilterEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. routing_filter_entry = [ RoutingFilterEntry( action=\"allow\", ip_range=\"ip_range_example\", ), ] # [RoutingFilterEntry] | List of routing filter entries # example passing only required values which don't have defaults set try: # Sets Virtual Private Gateway outbound routing filter. api_instance.set_routing_filter(vpg_id, routing_filter_entry) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_routing_filter: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. routing_filter_entry [RoutingFilterEntry] List of routing filter entries Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 The routing filter is successfully configured. - 400 Invalid argument is given - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] stop_packet_capture_session \u00b6 PacketCaptureSession stop_packet_capture_session(vpg_id, session_id) Stop Packet Capture Session Stop a packet capture session associated with the VPG Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Stop Packet Capture Session api_response = api_instance.stop_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->stop_packet_capture_session: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID Return type \u00b6 PacketCaptureSession Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 The stopped packet capture session associated with the VPG - 400 The packet capture session can be stopped only when its status is CAPTURING - 404 The packet capture session associated with the VPG was not found - 500 The packet capture session could not be stopped - [Back to top] [Back to API list] [Back to Model list] [Back to README] terminate_virtual_private_gateway \u00b6 terminate_virtual_private_gateway(vpg_id) Terminate Virtual Private Gateway. Terminates the specified VPG. Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Terminate Virtual Private Gateway. api_instance.terminate_virtual_private_gateway(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->terminate_virtual_private_gateway: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Termination of specified VPG started. - 400 There is a reason why the specified VPG cannot be terminated. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unregister_gate_peer \u00b6 unregister_gate_peer(vpg_id, outer_ip_address) Unregister VPG gate peer Unregister a gate peer from the Virtual Private Gateway Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. outer_ip_address = \"outer_ip_address_example\" # str | ID of the target node. # example passing only required values which don't have defaults set try: # Unregister VPG gate peer api_instance.unregister_gate_peer(vpg_id, outer_ip_address) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unregister_gate_peer: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str Target VPG ID. outer_ip_address str ID of the target node. Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 204 Successfully deregistered the Gate peer. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_inspection_configuration \u00b6 unset_inspection_configuration(vpg_id) Unset configuration for Junction inspection feature Unset configuration for Junction inspection feature Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID # example passing only required values which don't have defaults set try: # Unset configuration for Junction inspection feature api_instance.unset_inspection_configuration(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unset_inspection_configuration: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Configuration unset - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] unset_redirection_configuration \u00b6 unset_redirection_configuration(vpg_id) Unset configuration for Junction redirection feature Unset configuration for Junction redirection feature Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID # example passing only required values which don't have defaults set try: # Unset configuration for Junction redirection feature api_instance.unset_redirection_configuration(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unset_redirection_configuration: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Configuration unset - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README] update_mirroring_peer \u00b6 update_mirroring_peer(vpg_id, ipaddr, attribute_update) Update a Junction mirroring peer Update a Junction mirroring peer Example \u00b6 Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.attribute_update import AttributeUpdate from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID ipaddr = \"ipaddr_example\" # str | Mirroring peer IP address attribute_update = [ AttributeUpdate( key=\"key_example\", value=\"value_example\", ), ] # [AttributeUpdate] | List of attributes to update # example passing only required values which don't have defaults set try: # Update a Junction mirroring peer api_instance.update_mirroring_peer(vpg_id, ipaddr, attribute_update) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->update_mirroring_peer: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes vpg_id str VPG ID ipaddr str Mirroring peer IP address attribute_update [AttributeUpdate] List of attributes to update Return type \u00b6 void (empty response body) Authorization \u00b6 api_key , api_token HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 Mirroring peer updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_api.VirtualPrivateGatewayApi"},{"location":"api/docs/VirtualPrivateGatewayApi/#soracom_apivirtualprivategatewayapi","text":"All URIs are relative to https://api.soracom.io/v1 Method HTTP request Description close_gate POST /virtual_private_gateways/{vpg_id}/gate/close Close SORACOM Gate. create_mirroring_peer POST /virtual_private_gateways/{vpg_id}/junction/mirroring/peers Add node in the list of Junction mirroring peers create_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions Create Packet Capture Session create_virtual_private_gateway POST /virtual_private_gateways Create Virtual Private Gateway. create_vpc_peering_connection POST /virtual_private_gateways/{vpg_id}/vpc_peering_connections Create VPC Peering Connection delete_mirroring_peer DELETE /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Remove peer from the list of Junction mirroring peers delete_packet_capture_session DELETE /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Delete Packet Capture Session delete_virtual_private_gateway_ip_address_map_entry DELETE /virtual_private_gateways/{vpg_id}/ip_address_map/{key} Delete VPG IP address map entry delete_vpc_peering_connection DELETE /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id} Delete VPC Peering Connection. get_packet_capture_session GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id} Get Packet Capture Session get_virtual_private_gateway GET /virtual_private_gateways/{vpg_id} Get Virtual Private Gateway. list_gate_peers GET /virtual_private_gateways/{vpg_id}/gate/peers List VPG Gate peers list_packet_capture_sessions GET /virtual_private_gateways/{vpg_id}/packet_capture_sessions List Packet Capture Sessions list_virtual_private_gateway_ip_address_map_entries GET /virtual_private_gateways/{vpg_id}/ip_address_map List VPG IP address map entries list_virtual_private_gateways GET /virtual_private_gateways List Virtual Private Gateways. open_gate POST /virtual_private_gateways/{vpg_id}/gate/open Open SORACOM Gate. put_virtual_private_gateway_ip_address_map_entry POST /virtual_private_gateways/{vpg_id}/ip_address_map Put an entry in VPG IP address map register_gate_peer POST /virtual_private_gateways/{vpg_id}/gate/peers Register VPG Gate peer set_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_inspection Set configuration for Junction inspection feature set_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/set_redirection Set configuration for Junction redirection feature set_routing_filter POST /virtual_private_gateways/{vpg_id}/set_routing_filter Sets Virtual Private Gateway outbound routing filter. stop_packet_capture_session POST /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop Stop Packet Capture Session terminate_virtual_private_gateway POST /virtual_private_gateways/{vpg_id}/terminate Terminate Virtual Private Gateway. unregister_gate_peer DELETE /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address} Unregister VPG gate peer unset_inspection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_inspection Unset configuration for Junction inspection feature unset_redirection_configuration POST /virtual_private_gateways/{vpg_id}/junction/unset_redirection Unset configuration for Junction redirection feature update_mirroring_peer PUT /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr} Update a Junction mirroring peer","title":"soracom_api.VirtualPrivateGatewayApi"},{"location":"api/docs/VirtualPrivateGatewayApi/#close_gate","text":"close_gate(vpg_id) Close SORACOM Gate. Close SORACOM Gate on the specified VPG.","title":"close_gate"},{"location":"api/docs/VirtualPrivateGatewayApi/#example","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Close SORACOM Gate. api_instance.close_gate(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->close_gate: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters","text":"Name Type Description Notes vpg_id str Target VPG ID.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details","text":"Status code Description Response headers 200 SORACOM Gate is successfully closed on the VPG. - 400 Client side error. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#create_mirroring_peer","text":"create_mirroring_peer(vpg_id, junction_mirroring_peer) Add node in the list of Junction mirroring peers Add node in the list of Junction mirroring peers","title":"create_mirroring_peer"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_1","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_mirroring_peer import JunctionMirroringPeer from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_mirroring_peer = JunctionMirroringPeer( description=\"description_example\", enabled=False, ip_address=\"ip_address_example\", protocol=\"gre\", ) # JunctionMirroringPeer | Mirroring peer # example passing only required values which don't have defaults set try: # Add node in the list of Junction mirroring peers api_instance.create_mirroring_peer(vpg_id, junction_mirroring_peer) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_mirroring_peer: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_1","text":"Name Type Description Notes vpg_id str VPG ID junction_mirroring_peer JunctionMirroringPeer Mirroring peer","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_1","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_1","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_1","text":"Status code Description Response headers 201 Mirroring peer added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#create_packet_capture_session","text":"PacketCaptureSession create_packet_capture_session(vpg_id, packet_capture_session_request) Create Packet Capture Session Create a packet capture sessions associated the VPG","title":"create_packet_capture_session"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_2","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session_request import PacketCaptureSessionRequest from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID packet_capture_session_request = PacketCaptureSessionRequest( duration=30, prefix=\"zBAMDTMv2D2ylmgd10Z3UB\", ) # PacketCaptureSessionRequest | A packet capture session request # example passing only required values which don't have defaults set try: # Create Packet Capture Session api_response = api_instance.create_packet_capture_session(vpg_id, packet_capture_session_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_2","text":"Name Type Description Notes vpg_id str VPG ID packet_capture_session_request PacketCaptureSessionRequest A packet capture session request","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_2","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_2","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_2","text":"Status code Description Response headers 200 Created a new packet capture sessions associated with the VPG - 400 Failed to create a packet capture sessions associated with the VPG - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#create_virtual_private_gateway","text":"VirtualPrivateGateway create_virtual_private_gateway(create_virtual_private_gateway_request) Create Virtual Private Gateway. Create new VPG.","title":"create_virtual_private_gateway"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_3","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.create_virtual_private_gateway_request import CreateVirtualPrivateGatewayRequest from soracom_api.model.virtual_private_gateway import VirtualPrivateGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) create_virtual_private_gateway_request = CreateVirtualPrivateGatewayRequest( device_subnet_cidr_range=\"10.128.0.0/9\", type=14, use_internet_gateway=True, ) # CreateVirtualPrivateGatewayRequest | Request containing information for the new VPG to be created. # example passing only required values which don't have defaults set try: # Create Virtual Private Gateway. api_response = api_instance.create_virtual_private_gateway(create_virtual_private_gateway_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_virtual_private_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_3","text":"Name Type Description Notes create_virtual_private_gateway_request CreateVirtualPrivateGatewayRequest Request containing information for the new VPG to be created.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_3","text":"VirtualPrivateGateway","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_3","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_3","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_3","text":"Status code Description Response headers 201 Created - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#create_vpc_peering_connection","text":"CreateVpcPeeringConnectionRequest create_vpc_peering_connection(vpg_id, create_vpc_peering_connection_request) Create VPC Peering Connection Creates a VPC peering connection for the specified VPG.","title":"create_vpc_peering_connection"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_4","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.create_vpc_peering_connection_request import CreateVpcPeeringConnectionRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. create_vpc_peering_connection_request = CreateVpcPeeringConnectionRequest( destination_cidr_block=\"destination_cidr_block_example\", peer_owner_id=\"peer_owner_id_example\", peer_region=\"peer_region_example\", peer_vpc_id=\"peer_vpc_id_example\", ) # CreateVpcPeeringConnectionRequest | VPC peering connection to be created. # example passing only required values which don't have defaults set try: # Create VPC Peering Connection api_response = api_instance.create_vpc_peering_connection(vpg_id, create_vpc_peering_connection_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->create_vpc_peering_connection: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_4","text":"Name Type Description Notes vpg_id str Target VPG ID. create_vpc_peering_connection_request CreateVpcPeeringConnectionRequest VPC peering connection to be created.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_4","text":"CreateVpcPeeringConnectionRequest","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_4","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_4","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_4","text":"Status code Description Response headers 201 The created VPC peering connection. - 404 The specified VPC peering connection does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#delete_mirroring_peer","text":"delete_mirroring_peer(vpg_id, ipaddr) Remove peer from the list of Junction mirroring peers Remove peer from the list of Junction mirroring peers","title":"delete_mirroring_peer"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_5","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID ipaddr = \"ipaddr_example\" # str | IP address of mirroring peer # example passing only required values which don't have defaults set try: # Remove peer from the list of Junction mirroring peers api_instance.delete_mirroring_peer(vpg_id, ipaddr) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_mirroring_peer: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_5","text":"Name Type Description Notes vpg_id str VPG ID ipaddr str IP address of mirroring peer","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_5","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_5","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_5","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_5","text":"Status code Description Response headers 204 Mirroring peer removed - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#delete_packet_capture_session","text":"PacketCaptureSession delete_packet_capture_session(vpg_id, session_id) Delete Packet Capture Session Delete a packet capture sessions associated the VPG","title":"delete_packet_capture_session"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_6","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Delete Packet Capture Session api_response = api_instance.delete_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_6","text":"Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_6","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_6","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_6","text":"Status code Description Response headers 200 Deleted the packet capture sessions associated with the VPG - 400 Failed to delete the packet capture sessions associated with the VPG was not found - 404 The packet capture sessions associated with the VPG was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#delete_virtual_private_gateway_ip_address_map_entry","text":"IpAddressMapEntry delete_virtual_private_gateway_ip_address_map_entry(vpg_id, key) Delete VPG IP address map entry Deletes an entry in VPG IP address map.","title":"delete_virtual_private_gateway_ip_address_map_entry"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_7","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. key = \"key_example\" # str | Target key to remove. # example passing only required values which don't have defaults set try: # Delete VPG IP address map entry api_response = api_instance.delete_virtual_private_gateway_ip_address_map_entry(vpg_id, key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_virtual_private_gateway_ip_address_map_entry: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_7","text":"Name Type Description Notes vpg_id str Target VPG ID. key str Target key to remove.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_7","text":"IpAddressMapEntry","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_7","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_7","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_7","text":"Status code Description Response headers 204 Successfully deleted the entry from the VPG IP address map. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#delete_vpc_peering_connection","text":"delete_vpc_peering_connection(vpg_id, pcx_id) Delete VPC Peering Connection. Deletes the specified VPC peering connection.","title":"delete_vpc_peering_connection"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_8","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. pcx_id = \"pcx_id_example\" # str | VPC peering connection ID to be deleted. # example passing only required values which don't have defaults set try: # Delete VPC Peering Connection. api_instance.delete_vpc_peering_connection(vpg_id, pcx_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->delete_vpc_peering_connection: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_8","text":"Name Type Description Notes vpg_id str Target VPG ID. pcx_id str VPC peering connection ID to be deleted.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_8","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_8","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_8","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_8","text":"Status code Description Response headers 204 Deletion of specified VPC peering connection complete. - 404 The specified VPC peering connection does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#get_packet_capture_session","text":"PacketCaptureSession get_packet_capture_session(vpg_id, session_id) Get Packet Capture Session Get a packet capture sessions associated the VPG","title":"get_packet_capture_session"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_9","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Get Packet Capture Session api_response = api_instance.get_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->get_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_9","text":"Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_9","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_9","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_9","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_9","text":"Status code Description Response headers 200 The packet capture sessions associated with the VPG - 404 The packet capture sessions associated with the VPG was not found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#get_virtual_private_gateway","text":"get_virtual_private_gateway(vpg_id) Get Virtual Private Gateway. Retrieves information about the specified VPG.","title":"get_virtual_private_gateway"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_10","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Get Virtual Private Gateway. api_instance.get_virtual_private_gateway(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->get_virtual_private_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_10","text":"Name Type Description Notes vpg_id str Target VPG ID.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_10","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_10","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_10","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_10","text":"Status code Description Response headers 200 The specified VPG. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#list_gate_peers","text":"[GatePeer] list_gate_peers(vpg_id) List VPG Gate peers List Gate peers registered in the Virtual Private Gateway","title":"list_gate_peers"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_11","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.gate_peer import GatePeer from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # List VPG Gate peers api_response = api_instance.list_gate_peers(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_gate_peers: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_11","text":"Name Type Description Notes vpg_id str Target VPG ID.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_11","text":"[GatePeer]","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_11","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_11","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_11","text":"Status code Description Response headers 200 List of peers registered in the VPG. - 400 Client side error in the request. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#list_packet_capture_sessions","text":"[PacketCaptureSession] list_packet_capture_sessions(vpg_id) List Packet Capture Sessions List packet capture sessions associated with the VPG","title":"list_packet_capture_sessions"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_12","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID last_evaluated_key = \"null\" # str | ID of the last group in the previous page (optional) if omitted the server will use the default value of \"null\" limit = 10 # int | Max number of results in a response (optional) if omitted the server will use the default value of 10 # example passing only required values which don't have defaults set try: # List Packet Capture Sessions api_response = api_instance.list_packet_capture_sessions(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_packet_capture_sessions: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # List Packet Capture Sessions api_response = api_instance.list_packet_capture_sessions(vpg_id, last_evaluated_key=last_evaluated_key, limit=limit) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_packet_capture_sessions: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_12","text":"Name Type Description Notes vpg_id str VPG ID last_evaluated_key str ID of the last group in the previous page [optional] if omitted the server will use the default value of \"null\" limit int Max number of results in a response [optional] if omitted the server will use the default value of 10","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_12","text":"[PacketCaptureSession]","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_12","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_12","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_12","text":"Status code Description Response headers 200 List of packet capture sessions associated with the VPG - 400 Failed to list packet capture sessions associated with the VPG - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#list_virtual_private_gateway_ip_address_map_entries","text":"[IpAddressMapEntry] list_virtual_private_gateway_ip_address_map_entries(vpg_id) List VPG IP address map entries Describes the list of IP address map entries in the Virtual Private Gateway","title":"list_virtual_private_gateway_ip_address_map_entries"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_13","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # List VPG IP address map entries api_response = api_instance.list_virtual_private_gateway_ip_address_map_entries(vpg_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_virtual_private_gateway_ip_address_map_entries: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_13","text":"Name Type Description Notes vpg_id str Target VPG ID.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_13","text":"[IpAddressMapEntry]","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_13","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_13","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_13","text":"Status code Description Response headers 200 Successfully fetched the list of IP address map entries. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#list_virtual_private_gateways","text":"[VirtualPrivateGateway] list_virtual_private_gateways() List Virtual Private Gateways. Returns a list of VPGs.","title":"list_virtual_private_gateways"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_14","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.virtual_private_gateway import VirtualPrivateGateway from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) tag_name = \"tag_name_example\" # str | Tag name of the VPG. Filters through all VPGs that exactly match the tag name. When tag_name is specified, tag_value is required. (optional) tag_value = \"tag_value_example\" # str | Tag value of the VPGs. (optional) tag_value_match_mode = \"exact\" # str | Tag match mode. (optional) if omitted the server will use the default value of \"exact\" limit = 1 # int | Maximum number of results per response page. (optional) last_evaluated_key = \"last_evaluated_key_example\" # str | The last group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next VPG onward. (optional) # example passing only required values which don't have defaults set # and optional values try: # List Virtual Private Gateways. api_response = api_instance.list_virtual_private_gateways(tag_name=tag_name, tag_value=tag_value, tag_value_match_mode=tag_value_match_mode, limit=limit, last_evaluated_key=last_evaluated_key) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->list_virtual_private_gateways: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_14","text":"Name Type Description Notes tag_name str Tag name of the VPG. Filters through all VPGs that exactly match the tag name. When tag_name is specified, tag_value is required. [optional] tag_value str Tag value of the VPGs. [optional] tag_value_match_mode str Tag match mode. [optional] if omitted the server will use the default value of \"exact\" limit int Maximum number of results per response page. [optional] last_evaluated_key str The last group ID retrieved on the current page. By specifying this parameter, you can continue to retrieve the list from the next VPG onward. [optional]","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_14","text":"[VirtualPrivateGateway]","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_14","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_14","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_14","text":"Status code Description Response headers 200 List of VPGs. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#open_gate","text":"open_gate(vpg_id) Open SORACOM Gate. Open SORACOM Gate on the specified VPG.","title":"open_gate"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_15","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.open_gate_request import OpenGateRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. open_gate_request = OpenGateRequest( privacy_separator_enabled=False, vxlan_id=10, ) # OpenGateRequest | Optional configuration parameters for Gate. (optional) # example passing only required values which don't have defaults set try: # Open SORACOM Gate. api_instance.open_gate(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->open_gate: %s\\n\" % e) # example passing only required values which don't have defaults set # and optional values try: # Open SORACOM Gate. api_instance.open_gate(vpg_id, open_gate_request=open_gate_request) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->open_gate: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_15","text":"Name Type Description Notes vpg_id str Target VPG ID. open_gate_request OpenGateRequest Optional configuration parameters for Gate. [optional]","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_15","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_15","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_15","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_15","text":"Status code Description Response headers 200 SORACOM Gate is successfully opened on the VPG. - 400 Client side error. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#put_virtual_private_gateway_ip_address_map_entry","text":"IpAddressMapEntry put_virtual_private_gateway_ip_address_map_entry(vpg_id, put_ip_address_map_entry_request) Put an entry in VPG IP address map Puts an entry in VPG IP address map.","title":"put_virtual_private_gateway_ip_address_map_entry"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_16","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.ip_address_map_entry import IpAddressMapEntry from soracom_api.model.put_ip_address_map_entry_request import PutIpAddressMapEntryRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. put_ip_address_map_entry_request = PutIpAddressMapEntryRequest( ip_address=\"ip_address_example\", key=\"key_example\", ) # PutIpAddressMapEntryRequest | # example passing only required values which don't have defaults set try: # Put an entry in VPG IP address map api_response = api_instance.put_virtual_private_gateway_ip_address_map_entry(vpg_id, put_ip_address_map_entry_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->put_virtual_private_gateway_ip_address_map_entry: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_16","text":"Name Type Description Notes vpg_id str Target VPG ID. put_ip_address_map_entry_request PutIpAddressMapEntryRequest","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_16","text":"IpAddressMapEntry","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_16","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_16","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_16","text":"Status code Description Response headers 200 Successfully put an entry for the specified key and IP address. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#register_gate_peer","text":"GatePeer register_gate_peer(vpg_id, register_gate_peer_request) Register VPG Gate peer Register a host as a gate peer in the Virtual Private Gateway","title":"register_gate_peer"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_17","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.gate_peer import GatePeer from soracom_api.model.register_gate_peer_request import RegisterGatePeerRequest from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. register_gate_peer_request = RegisterGatePeerRequest( inner_ip_address=\"inner_ip_address_example\", outer_ip_address=\"outer_ip_address_example\", ) # RegisterGatePeerRequest | # example passing only required values which don't have defaults set try: # Register VPG Gate peer api_response = api_instance.register_gate_peer(vpg_id, register_gate_peer_request) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->register_gate_peer: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_17","text":"Name Type Description Notes vpg_id str Target VPG ID. register_gate_peer_request RegisterGatePeerRequest","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_17","text":"GatePeer","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_17","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_17","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_17","text":"Status code Description Response headers 200 Gate peer is successfully registered. - 400 Client side error in the request. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#set_inspection_configuration","text":"set_inspection_configuration(vpg_id, junction_inspection_configuration) Set configuration for Junction inspection feature Set configuration for Junction inspection feature","title":"set_inspection_configuration"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_18","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_inspection_configuration import JunctionInspectionConfiguration from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_inspection_configuration = JunctionInspectionConfiguration( enabled=False, report=FunnelConfiguration( add_sim_id=False, content_type=FunnelContentType(\"json\"), credentials_id=\"credentials_id_example\", destination=FunnelDestination( provider=\"provider_example\", resource_url=\"resource_url_example\", service=\"service_example\", ), enabled=False, ), ) # JunctionInspectionConfiguration | Inspection configuration # example passing only required values which don't have defaults set try: # Set configuration for Junction inspection feature api_instance.set_inspection_configuration(vpg_id, junction_inspection_configuration) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_inspection_configuration: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_18","text":"Name Type Description Notes vpg_id str VPG ID junction_inspection_configuration JunctionInspectionConfiguration Inspection configuration","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_18","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_18","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_18","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_18","text":"Status code Description Response headers 200 Configuration added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#set_redirection_configuration","text":"set_redirection_configuration(vpg_id, junction_redirection_configuration) Set configuration for Junction redirection feature Set configuration for Junction redirection feature","title":"set_redirection_configuration"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_19","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.junction_redirection_configuration import JunctionRedirectionConfiguration from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID junction_redirection_configuration = JunctionRedirectionConfiguration( description=\"description_example\", enabled=False, gateway=\"gateway_example\", ) # JunctionRedirectionConfiguration | Redirection configuration # example passing only required values which don't have defaults set try: # Set configuration for Junction redirection feature api_instance.set_redirection_configuration(vpg_id, junction_redirection_configuration) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_redirection_configuration: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_19","text":"Name Type Description Notes vpg_id str VPG ID junction_redirection_configuration JunctionRedirectionConfiguration Redirection configuration","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_19","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_19","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_19","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_19","text":"Status code Description Response headers 200 Configuration added/updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#set_routing_filter","text":"set_routing_filter(vpg_id, routing_filter_entry) Sets Virtual Private Gateway outbound routing filter. Sets Virtual Private Gateway outbound routing filter.","title":"set_routing_filter"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_20","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.routing_filter_entry import RoutingFilterEntry from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. routing_filter_entry = [ RoutingFilterEntry( action=\"allow\", ip_range=\"ip_range_example\", ), ] # [RoutingFilterEntry] | List of routing filter entries # example passing only required values which don't have defaults set try: # Sets Virtual Private Gateway outbound routing filter. api_instance.set_routing_filter(vpg_id, routing_filter_entry) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->set_routing_filter: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_20","text":"Name Type Description Notes vpg_id str Target VPG ID. routing_filter_entry [RoutingFilterEntry] List of routing filter entries","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_20","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_20","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_20","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_20","text":"Status code Description Response headers 200 The routing filter is successfully configured. - 400 Invalid argument is given - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#stop_packet_capture_session","text":"PacketCaptureSession stop_packet_capture_session(vpg_id, session_id) Stop Packet Capture Session Stop a packet capture session associated with the VPG","title":"stop_packet_capture_session"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_21","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.packet_capture_session import PacketCaptureSession from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID session_id = \"session_id_example\" # str | Packet capture session ID # example passing only required values which don't have defaults set try: # Stop Packet Capture Session api_response = api_instance.stop_packet_capture_session(vpg_id, session_id) pprint(api_response) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->stop_packet_capture_session: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_21","text":"Name Type Description Notes vpg_id str VPG ID session_id str Packet capture session ID","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_21","text":"PacketCaptureSession","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_21","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_21","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_21","text":"Status code Description Response headers 200 The stopped packet capture session associated with the VPG - 400 The packet capture session can be stopped only when its status is CAPTURING - 404 The packet capture session associated with the VPG was not found - 500 The packet capture session could not be stopped - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#terminate_virtual_private_gateway","text":"terminate_virtual_private_gateway(vpg_id) Terminate Virtual Private Gateway. Terminates the specified VPG.","title":"terminate_virtual_private_gateway"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_22","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. # example passing only required values which don't have defaults set try: # Terminate Virtual Private Gateway. api_instance.terminate_virtual_private_gateway(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->terminate_virtual_private_gateway: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_22","text":"Name Type Description Notes vpg_id str Target VPG ID.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_22","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_22","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_22","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_22","text":"Status code Description Response headers 200 Termination of specified VPG started. - 400 There is a reason why the specified VPG cannot be terminated. - 404 The specified VPG does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#unregister_gate_peer","text":"unregister_gate_peer(vpg_id, outer_ip_address) Unregister VPG gate peer Unregister a gate peer from the Virtual Private Gateway","title":"unregister_gate_peer"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_23","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | Target VPG ID. outer_ip_address = \"outer_ip_address_example\" # str | ID of the target node. # example passing only required values which don't have defaults set try: # Unregister VPG gate peer api_instance.unregister_gate_peer(vpg_id, outer_ip_address) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unregister_gate_peer: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_23","text":"Name Type Description Notes vpg_id str Target VPG ID. outer_ip_address str ID of the target node.","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_23","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_23","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_23","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_23","text":"Status code Description Response headers 204 Successfully deregistered the Gate peer. - 400 Error in the request. - 404 The specified VPG or node does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#unset_inspection_configuration","text":"unset_inspection_configuration(vpg_id) Unset configuration for Junction inspection feature Unset configuration for Junction inspection feature","title":"unset_inspection_configuration"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_24","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID # example passing only required values which don't have defaults set try: # Unset configuration for Junction inspection feature api_instance.unset_inspection_configuration(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unset_inspection_configuration: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_24","text":"Name Type Description Notes vpg_id str VPG ID","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_24","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_24","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_24","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_24","text":"Status code Description Response headers 200 Configuration unset - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#unset_redirection_configuration","text":"unset_redirection_configuration(vpg_id) Unset configuration for Junction redirection feature Unset configuration for Junction redirection feature","title":"unset_redirection_configuration"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_25","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID # example passing only required values which don't have defaults set try: # Unset configuration for Junction redirection feature api_instance.unset_redirection_configuration(vpg_id) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->unset_redirection_configuration: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_25","text":"Name Type Description Notes vpg_id str VPG ID","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_25","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_25","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_25","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_25","text":"Status code Description Response headers 200 Configuration unset - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VirtualPrivateGatewayApi/#update_mirroring_peer","text":"update_mirroring_peer(vpg_id, ipaddr, attribute_update) Update a Junction mirroring peer Update a Junction mirroring peer","title":"update_mirroring_peer"},{"location":"api/docs/VirtualPrivateGatewayApi/#example_26","text":"Api Key Authentication (api_key): Api Key Authentication (api_token): import time import soracom_api from soracom_api.api import virtual_private_gateway_api from soracom_api.model.attribute_update import AttributeUpdate from pprint import pprint # Defining the host is optional and defaults to https://api.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_api.Configuration( host = \"https://api.soracom.io/v1\" ) # The client must configure the authentication and authorization parameters # in accordance with the API server security policy. # Examples for each auth method are provided below, use the example that # satisfies your auth use case. # Configure API key authorization: api_key configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # Configure API key authorization: api_token configuration.api_key['api_token'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_token'] = 'Bearer' # Enter a context with an instance of the API client with soracom_api.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = virtual_private_gateway_api.VirtualPrivateGatewayApi(api_client) vpg_id = \"vpg_id_example\" # str | VPG ID ipaddr = \"ipaddr_example\" # str | Mirroring peer IP address attribute_update = [ AttributeUpdate( key=\"key_example\", value=\"value_example\", ), ] # [AttributeUpdate] | List of attributes to update # example passing only required values which don't have defaults set try: # Update a Junction mirroring peer api_instance.update_mirroring_peer(vpg_id, ipaddr, attribute_update) except soracom_api.ApiException as e: print(\"Exception when calling VirtualPrivateGatewayApi->update_mirroring_peer: %s\\n\" % e)","title":"Example"},{"location":"api/docs/VirtualPrivateGatewayApi/#parameters_26","text":"Name Type Description Notes vpg_id str VPG ID ipaddr str Mirroring peer IP address attribute_update [AttributeUpdate] List of attributes to update","title":"Parameters"},{"location":"api/docs/VirtualPrivateGatewayApi/#return-type_26","text":"void (empty response body)","title":"Return type"},{"location":"api/docs/VirtualPrivateGatewayApi/#authorization_26","text":"api_key , api_token","title":"Authorization"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-request-headers_26","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"api/docs/VirtualPrivateGatewayApi/#http-response-details_26","text":"Status code Description Response headers 200 Mirroring peer updated - 404 No such VPG found - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"api/docs/VolumeDiscountModel/","text":"VolumeDiscountModel \u00b6 Long term discount Properties \u00b6 Name Type Description Notes contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 end_date str End date [optional] initial_cost float Initial cost [optional] quantity int Quantity [optional] start_date str Start date [optional] unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VolumeDiscountModel"},{"location":"api/docs/VolumeDiscountModel/#volumediscountmodel","text":"Long term discount","title":"VolumeDiscountModel"},{"location":"api/docs/VolumeDiscountModel/#properties","text":"Name Type Description Notes contract_term_month int Contract months [optional] if omitted the server will use the default value of 12 end_date str End date [optional] initial_cost float Initial cost [optional] quantity int Quantity [optional] start_date str Start date [optional] unit_price float Unit price [optional] volume_discount_payment_type str Payment type [optional] volume_discount_type str Long term discount type [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"api/docs/VpcPeeringConnection/","text":"VpcPeeringConnection \u00b6 Properties \u00b6 Name Type Description Notes destination_cidr_block str [optional] id str [optional] peer_owner_id str [optional] peer_vpc_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"VpcPeeringConnection"},{"location":"api/docs/VpcPeeringConnection/#vpcpeeringconnection","text":"","title":"VpcPeeringConnection"},{"location":"api/docs/VpcPeeringConnection/#properties","text":"Name Type Description Notes destination_cidr_block str [optional] id str [optional] peer_owner_id str [optional] peer_vpc_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/","text":"soracom-sandbox \u00b6 SORACOM SANDBOX API v1 This Python package is automatically generated by the OpenAPI Generator project: API version: 20160218 Package version: 1.0.0 Build package: org.openapitools.codegen.languages.PythonClientCodegen Requirements. \u00b6 Python >=3.6 Installation & Usage \u00b6 pip install \u00b6 If the python package is hosted on a repository, you can install directly using: pip install git+https://github.com/soracom-labs/openapi-client-python.git (you may need to run pip with root permission: sudo pip install git+https://github.com/soracom-labs/openapi-client-python.git ) Then import the package: import soracom_sandbox Setuptools \u00b6 Install via Setuptools . python setup.py install --user (or sudo python setup.py install to install the package for all users) Then import the package: import soracom_sandbox Getting Started \u00b6 Please follow the installation procedure and then run the following: import time import soracom_sandbox from pprint import pprint from soracom_sandbox.api import coupon_api from soracom_sandbox.model.sandbox_create_coupon_request import SandboxCreateCouponRequest from soracom_sandbox.model.sandbox_create_coupon_response import SandboxCreateCouponResponse # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = coupon_api.CouponApi(api_client) sandbox_create_coupon_request = SandboxCreateCouponRequest( amount=1000, applicable_bill_item_name=\"dailyDataTrafficChargeTotal\", expiry_year_month=\"yyyyMM\", ) # SandboxCreateCouponRequest | request try: # Creates a coupon api_response = api_instance.sandbox_create_coupon(sandbox_create_coupon_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling CouponApi->sandbox_create_coupon: %s\\n\" % e) Documentation for API Endpoints \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Class Method HTTP request Description CouponApi sandbox_create_coupon POST /sandbox/coupons/create Creates a coupon OperatorApi sandbox_delete_operator DELETE /sandbox/operators/{operator_id} Deletes an operator OperatorApi sandbox_get_signup_token POST /sandbox/operators/token/{email} Gets a signup token OperatorApi sandbox_initialize_operator POST /sandbox/init Creates an operator account. OrderApi sandbox_ship_order POST /sandbox/orders/ship Ships the specified order. StatsApi sandbox_insert_air_stats POST /sandbox/stats/air/subscribers/{imsi} Inserts Air stats for testing StatsApi sandbox_insert_beam_stats POST /sandbox/stats/beam/subscribers/{imsi} Inserts Beam stats for testing SubscriberApi sandbox_create_subscriber POST /sandbox/subscribers/create Creates a new subscriber for sandbox. Documentation For Models \u00b6 SandboxAuthResponse SandboxBeamCounts SandboxCreateCouponRequest SandboxCreateCouponResponse SandboxCreateSubscriberRequest SandboxCreateSubscriberResponse SandboxDataTrafficStats SandboxGetSignupTokenRequest SandboxGetSignupTokenResponse SandboxInitRequest SandboxInsertAirStatsRequest SandboxInsertAirStatsRequestDataTrafficStatsMap SandboxInsertBeamStatsRequest SandboxInsertBeamStatsRequestBeamStatsMap SandboxShipOrderRequest TagSet Documentation For Authorization \u00b6 All endpoints do not require authorization. Author \u00b6 Notes for Large OpenAPI documents \u00b6 If the OpenAPI document is large, imports in soracom_sandbox.apis and soracom_sandbox.models may fail with a RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions: Solution 1: Use specific imports for apis and models like: - from soracom_sandbox.api.default_api import DefaultApi - from soracom_sandbox.model.pet import Pet Solution 2: Before importing the package, adjust the maximum recursion limit as shown below: import sys sys.setrecursionlimit(1500) import soracom_sandbox from soracom_sandbox.apis import * from soracom_sandbox.models import *","title":"SORACOM API Sandbox"},{"location":"sandbox/#soracom-sandbox","text":"SORACOM SANDBOX API v1 This Python package is automatically generated by the OpenAPI Generator project: API version: 20160218 Package version: 1.0.0 Build package: org.openapitools.codegen.languages.PythonClientCodegen","title":"soracom-sandbox"},{"location":"sandbox/#requirements","text":"Python >=3.6","title":"Requirements."},{"location":"sandbox/#installation-usage","text":"","title":"Installation &amp; Usage"},{"location":"sandbox/#pip-install","text":"If the python package is hosted on a repository, you can install directly using: pip install git+https://github.com/soracom-labs/openapi-client-python.git (you may need to run pip with root permission: sudo pip install git+https://github.com/soracom-labs/openapi-client-python.git ) Then import the package: import soracom_sandbox","title":"pip install"},{"location":"sandbox/#setuptools","text":"Install via Setuptools . python setup.py install --user (or sudo python setup.py install to install the package for all users) Then import the package: import soracom_sandbox","title":"Setuptools"},{"location":"sandbox/#getting-started","text":"Please follow the installation procedure and then run the following: import time import soracom_sandbox from pprint import pprint from soracom_sandbox.api import coupon_api from soracom_sandbox.model.sandbox_create_coupon_request import SandboxCreateCouponRequest from soracom_sandbox.model.sandbox_create_coupon_response import SandboxCreateCouponResponse # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient(configuration) as api_client: # Create an instance of the API class api_instance = coupon_api.CouponApi(api_client) sandbox_create_coupon_request = SandboxCreateCouponRequest( amount=1000, applicable_bill_item_name=\"dailyDataTrafficChargeTotal\", expiry_year_month=\"yyyyMM\", ) # SandboxCreateCouponRequest | request try: # Creates a coupon api_response = api_instance.sandbox_create_coupon(sandbox_create_coupon_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling CouponApi->sandbox_create_coupon: %s\\n\" % e)","title":"Getting Started"},{"location":"sandbox/#documentation-for-api-endpoints","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Class Method HTTP request Description CouponApi sandbox_create_coupon POST /sandbox/coupons/create Creates a coupon OperatorApi sandbox_delete_operator DELETE /sandbox/operators/{operator_id} Deletes an operator OperatorApi sandbox_get_signup_token POST /sandbox/operators/token/{email} Gets a signup token OperatorApi sandbox_initialize_operator POST /sandbox/init Creates an operator account. OrderApi sandbox_ship_order POST /sandbox/orders/ship Ships the specified order. StatsApi sandbox_insert_air_stats POST /sandbox/stats/air/subscribers/{imsi} Inserts Air stats for testing StatsApi sandbox_insert_beam_stats POST /sandbox/stats/beam/subscribers/{imsi} Inserts Beam stats for testing SubscriberApi sandbox_create_subscriber POST /sandbox/subscribers/create Creates a new subscriber for sandbox.","title":"Documentation for API Endpoints"},{"location":"sandbox/#documentation-for-models","text":"SandboxAuthResponse SandboxBeamCounts SandboxCreateCouponRequest SandboxCreateCouponResponse SandboxCreateSubscriberRequest SandboxCreateSubscriberResponse SandboxDataTrafficStats SandboxGetSignupTokenRequest SandboxGetSignupTokenResponse SandboxInitRequest SandboxInsertAirStatsRequest SandboxInsertAirStatsRequestDataTrafficStatsMap SandboxInsertBeamStatsRequest SandboxInsertBeamStatsRequestBeamStatsMap SandboxShipOrderRequest TagSet","title":"Documentation For Models"},{"location":"sandbox/#documentation-for-authorization","text":"All endpoints do not require authorization.","title":"Documentation For Authorization"},{"location":"sandbox/#author","text":"","title":"Author"},{"location":"sandbox/#notes-for-large-openapi-documents","text":"If the OpenAPI document is large, imports in soracom_sandbox.apis and soracom_sandbox.models may fail with a RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions: Solution 1: Use specific imports for apis and models like: - from soracom_sandbox.api.default_api import DefaultApi - from soracom_sandbox.model.pet import Pet Solution 2: Before importing the package, adjust the maximum recursion limit as shown below: import sys sys.setrecursionlimit(1500) import soracom_sandbox from soracom_sandbox.apis import * from soracom_sandbox.models import *","title":"Notes for Large OpenAPI documents"},{"location":"sandbox/docs/CouponApi/","text":"soracom_sandbox.CouponApi \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_create_coupon POST /sandbox/coupons/create Creates a coupon sandbox_create_coupon \u00b6 SandboxCreateCouponResponse sandbox_create_coupon(sandbox_create_coupon_request) Creates a coupon Creates a coupon. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import coupon_api from soracom_sandbox.model.sandbox_create_coupon_request import SandboxCreateCouponRequest from soracom_sandbox.model.sandbox_create_coupon_response import SandboxCreateCouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = coupon_api.CouponApi(api_client) sandbox_create_coupon_request = SandboxCreateCouponRequest( amount=1000, applicable_bill_item_name=\"dailyDataTrafficChargeTotal\", expiry_year_month=\"yyyyMM\", ) # SandboxCreateCouponRequest | request # example passing only required values which don't have defaults set try: # Creates a coupon api_response = api_instance.sandbox_create_coupon(sandbox_create_coupon_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling CouponApi->sandbox_create_coupon: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sandbox_create_coupon_request SandboxCreateCouponRequest request Return type \u00b6 SandboxCreateCouponResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Request is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_sandbox.CouponApi"},{"location":"sandbox/docs/CouponApi/#soracom_sandboxcouponapi","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_create_coupon POST /sandbox/coupons/create Creates a coupon","title":"soracom_sandbox.CouponApi"},{"location":"sandbox/docs/CouponApi/#sandbox_create_coupon","text":"SandboxCreateCouponResponse sandbox_create_coupon(sandbox_create_coupon_request) Creates a coupon Creates a coupon.","title":"sandbox_create_coupon"},{"location":"sandbox/docs/CouponApi/#example","text":"import time import soracom_sandbox from soracom_sandbox.api import coupon_api from soracom_sandbox.model.sandbox_create_coupon_request import SandboxCreateCouponRequest from soracom_sandbox.model.sandbox_create_coupon_response import SandboxCreateCouponResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = coupon_api.CouponApi(api_client) sandbox_create_coupon_request = SandboxCreateCouponRequest( amount=1000, applicable_bill_item_name=\"dailyDataTrafficChargeTotal\", expiry_year_month=\"yyyyMM\", ) # SandboxCreateCouponRequest | request # example passing only required values which don't have defaults set try: # Creates a coupon api_response = api_instance.sandbox_create_coupon(sandbox_create_coupon_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling CouponApi->sandbox_create_coupon: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/CouponApi/#parameters","text":"Name Type Description Notes sandbox_create_coupon_request SandboxCreateCouponRequest request","title":"Parameters"},{"location":"sandbox/docs/CouponApi/#return-type","text":"SandboxCreateCouponResponse","title":"Return type"},{"location":"sandbox/docs/CouponApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/CouponApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"sandbox/docs/CouponApi/#http-response-details","text":"Status code Description Response headers 200 OK - 400 Request is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/OperatorApi/","text":"soracom_sandbox.OperatorApi \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_delete_operator DELETE /sandbox/operators/{operator_id} Deletes an operator sandbox_get_signup_token POST /sandbox/operators/token/{email} Gets a signup token sandbox_initialize_operator POST /sandbox/init Creates an operator account. sandbox_delete_operator \u00b6 sandbox_delete_operator(operator_id) Deletes an operator Deletes the specified operator. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Deletes an operator api_instance.sandbox_delete_operator(operator_id) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_delete_operator: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes operator_id str operator_id Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Operator does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README] sandbox_get_signup_token \u00b6 SandboxGetSignupTokenResponse sandbox_get_signup_token(email, sandbox_get_signup_token_request) Gets a signup token Retrieves a 'signup token' for registration confirmation. Please specify a pair of AuthKeyId and AuthKey of a SAM user on the production environment to check if the caller has a valid account on it. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import operator_api from soracom_sandbox.model.sandbox_get_signup_token_request import SandboxGetSignupTokenRequest from soracom_sandbox.model.sandbox_get_signup_token_response import SandboxGetSignupTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) email = \"email_example\" # str | email sandbox_get_signup_token_request = SandboxGetSignupTokenRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", ) # SandboxGetSignupTokenRequest | Authentication request # example passing only required values which don't have defaults set try: # Gets a signup token api_response = api_instance.sandbox_get_signup_token(email, sandbox_get_signup_token_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_get_signup_token: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes email str email sandbox_get_signup_token_request SandboxGetSignupTokenRequest Authentication request Return type \u00b6 SandboxGetSignupTokenResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 Successfully retrieved signup token. - 400 Email address, AuthKeyId, or AuthKey is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README] sandbox_initialize_operator \u00b6 SandboxAuthResponse sandbox_initialize_operator(sandbox_init_request) Creates an operator account. Performs complex signup process at once, including registering dummy payment method. Specify email and password for an operator which will be created on sandbox, authKeyId and authKey for a real operator on the production environment. An API Key and an API Token will be included in the response if successful. Use the API Key and the API Token to requests afterwards. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import operator_api from soracom_sandbox.model.sandbox_init_request import SandboxInitRequest from soracom_sandbox.model.sandbox_auth_response import SandboxAuthResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) sandbox_init_request = SandboxInitRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", coverage_types=[ \"coverage_types_example\", ], email=\"email_example\", password=\"password_example\", register_payment_method=True, ) # SandboxInitRequest | request # example passing only required values which don't have defaults set try: # Creates an operator account. api_response = api_instance.sandbox_initialize_operator(sandbox_init_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_initialize_operator: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sandbox_init_request SandboxInitRequest request Return type \u00b6 SandboxAuthResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 201 Successfully created a sandbox operator. - 400 Email address, AuthKeyId, or AuthKey is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_sandbox.OperatorApi"},{"location":"sandbox/docs/OperatorApi/#soracom_sandboxoperatorapi","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_delete_operator DELETE /sandbox/operators/{operator_id} Deletes an operator sandbox_get_signup_token POST /sandbox/operators/token/{email} Gets a signup token sandbox_initialize_operator POST /sandbox/init Creates an operator account.","title":"soracom_sandbox.OperatorApi"},{"location":"sandbox/docs/OperatorApi/#sandbox_delete_operator","text":"sandbox_delete_operator(operator_id) Deletes an operator Deletes the specified operator.","title":"sandbox_delete_operator"},{"location":"sandbox/docs/OperatorApi/#example","text":"import time import soracom_sandbox from soracom_sandbox.api import operator_api from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) operator_id = \"operator_id_example\" # str | operator_id # example passing only required values which don't have defaults set try: # Deletes an operator api_instance.sandbox_delete_operator(operator_id) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_delete_operator: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/OperatorApi/#parameters","text":"Name Type Description Notes operator_id str operator_id","title":"Parameters"},{"location":"sandbox/docs/OperatorApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"sandbox/docs/OperatorApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/OperatorApi/#http-request-headers","text":"Content-Type : Not defined Accept : Not defined","title":"HTTP request headers"},{"location":"sandbox/docs/OperatorApi/#http-response-details","text":"Status code Description Response headers 200 OK - 400 Operator does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/OperatorApi/#sandbox_get_signup_token","text":"SandboxGetSignupTokenResponse sandbox_get_signup_token(email, sandbox_get_signup_token_request) Gets a signup token Retrieves a 'signup token' for registration confirmation. Please specify a pair of AuthKeyId and AuthKey of a SAM user on the production environment to check if the caller has a valid account on it.","title":"sandbox_get_signup_token"},{"location":"sandbox/docs/OperatorApi/#example_1","text":"import time import soracom_sandbox from soracom_sandbox.api import operator_api from soracom_sandbox.model.sandbox_get_signup_token_request import SandboxGetSignupTokenRequest from soracom_sandbox.model.sandbox_get_signup_token_response import SandboxGetSignupTokenResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) email = \"email_example\" # str | email sandbox_get_signup_token_request = SandboxGetSignupTokenRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", ) # SandboxGetSignupTokenRequest | Authentication request # example passing only required values which don't have defaults set try: # Gets a signup token api_response = api_instance.sandbox_get_signup_token(email, sandbox_get_signup_token_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_get_signup_token: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/OperatorApi/#parameters_1","text":"Name Type Description Notes email str email sandbox_get_signup_token_request SandboxGetSignupTokenRequest Authentication request","title":"Parameters"},{"location":"sandbox/docs/OperatorApi/#return-type_1","text":"SandboxGetSignupTokenResponse","title":"Return type"},{"location":"sandbox/docs/OperatorApi/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/OperatorApi/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"sandbox/docs/OperatorApi/#http-response-details_1","text":"Status code Description Response headers 200 Successfully retrieved signup token. - 400 Email address, AuthKeyId, or AuthKey is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/OperatorApi/#sandbox_initialize_operator","text":"SandboxAuthResponse sandbox_initialize_operator(sandbox_init_request) Creates an operator account. Performs complex signup process at once, including registering dummy payment method. Specify email and password for an operator which will be created on sandbox, authKeyId and authKey for a real operator on the production environment. An API Key and an API Token will be included in the response if successful. Use the API Key and the API Token to requests afterwards.","title":"sandbox_initialize_operator"},{"location":"sandbox/docs/OperatorApi/#example_2","text":"import time import soracom_sandbox from soracom_sandbox.api import operator_api from soracom_sandbox.model.sandbox_init_request import SandboxInitRequest from soracom_sandbox.model.sandbox_auth_response import SandboxAuthResponse from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = operator_api.OperatorApi(api_client) sandbox_init_request = SandboxInitRequest( auth_key=\"auth_key_example\", auth_key_id=\"auth_key_id_example\", coverage_types=[ \"coverage_types_example\", ], email=\"email_example\", password=\"password_example\", register_payment_method=True, ) # SandboxInitRequest | request # example passing only required values which don't have defaults set try: # Creates an operator account. api_response = api_instance.sandbox_initialize_operator(sandbox_init_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling OperatorApi->sandbox_initialize_operator: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/OperatorApi/#parameters_2","text":"Name Type Description Notes sandbox_init_request SandboxInitRequest request","title":"Parameters"},{"location":"sandbox/docs/OperatorApi/#return-type_2","text":"SandboxAuthResponse","title":"Return type"},{"location":"sandbox/docs/OperatorApi/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/OperatorApi/#http-request-headers_2","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"sandbox/docs/OperatorApi/#http-response-details_2","text":"Status code Description Response headers 201 Successfully created a sandbox operator. - 400 Email address, AuthKeyId, or AuthKey is not correct. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/OrderApi/","text":"soracom_sandbox.OrderApi \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_ship_order POST /sandbox/orders/ship Ships the specified order. sandbox_ship_order \u00b6 sandbox_ship_order(sandbox_ship_order_request) Ships the specified order. Changes the shipping status to 'shipped' and gets ready the subscribers included in the order. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import order_api from soracom_sandbox.model.sandbox_ship_order_request import SandboxShipOrderRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) sandbox_ship_order_request = SandboxShipOrderRequest( operator_id=\"operator_id_example\", order_id=\"order_id_example\", ) # SandboxShipOrderRequest | Shipping request # example passing only required values which don't have defaults set try: # Ships the specified order. api_instance.sandbox_ship_order(sandbox_ship_order_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling OrderApi->sandbox_ship_order: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sandbox_ship_order_request SandboxShipOrderRequest Shipping request Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Order does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_sandbox.OrderApi"},{"location":"sandbox/docs/OrderApi/#soracom_sandboxorderapi","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_ship_order POST /sandbox/orders/ship Ships the specified order.","title":"soracom_sandbox.OrderApi"},{"location":"sandbox/docs/OrderApi/#sandbox_ship_order","text":"sandbox_ship_order(sandbox_ship_order_request) Ships the specified order. Changes the shipping status to 'shipped' and gets ready the subscribers included in the order.","title":"sandbox_ship_order"},{"location":"sandbox/docs/OrderApi/#example","text":"import time import soracom_sandbox from soracom_sandbox.api import order_api from soracom_sandbox.model.sandbox_ship_order_request import SandboxShipOrderRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = order_api.OrderApi(api_client) sandbox_ship_order_request = SandboxShipOrderRequest( operator_id=\"operator_id_example\", order_id=\"order_id_example\", ) # SandboxShipOrderRequest | Shipping request # example passing only required values which don't have defaults set try: # Ships the specified order. api_instance.sandbox_ship_order(sandbox_ship_order_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling OrderApi->sandbox_ship_order: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/OrderApi/#parameters","text":"Name Type Description Notes sandbox_ship_order_request SandboxShipOrderRequest Shipping request","title":"Parameters"},{"location":"sandbox/docs/OrderApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"sandbox/docs/OrderApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/OrderApi/#http-request-headers","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"sandbox/docs/OrderApi/#http-response-details","text":"Status code Description Response headers 200 OK - 400 Order does not exist. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/SandboxAuthResponse/","text":"SandboxAuthResponse \u00b6 Properties \u00b6 Name Type Description Notes api_key str [optional] operator_id str [optional] token str [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxAuthResponse"},{"location":"sandbox/docs/SandboxAuthResponse/#sandboxauthresponse","text":"","title":"SandboxAuthResponse"},{"location":"sandbox/docs/SandboxAuthResponse/#properties","text":"Name Type Description Notes api_key str [optional] operator_id str [optional] token str [optional] user_name str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxBeamCounts/","text":"SandboxBeamCounts \u00b6 Properties \u00b6 Name Type Description Notes count int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxBeamCounts"},{"location":"sandbox/docs/SandboxBeamCounts/#sandboxbeamcounts","text":"","title":"SandboxBeamCounts"},{"location":"sandbox/docs/SandboxBeamCounts/#properties","text":"Name Type Description Notes count int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxCreateCouponRequest/","text":"SandboxCreateCouponRequest \u00b6 Properties \u00b6 Name Type Description Notes amount int [optional] applicable_bill_item_name str [optional] expiry_year_month str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxCreateCouponRequest"},{"location":"sandbox/docs/SandboxCreateCouponRequest/#sandboxcreatecouponrequest","text":"","title":"SandboxCreateCouponRequest"},{"location":"sandbox/docs/SandboxCreateCouponRequest/#properties","text":"Name Type Description Notes amount int [optional] applicable_bill_item_name str [optional] expiry_year_month str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxCreateCouponResponse/","text":"SandboxCreateCouponResponse \u00b6 Properties \u00b6 Name Type Description Notes amount float Coupon amount [optional] balance float Balance [optional] bill_item_name str Bill Item [optional] coupon_code str Coupon code [optional] expiry_year_month str Year and month of expiration [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxCreateCouponResponse"},{"location":"sandbox/docs/SandboxCreateCouponResponse/#sandboxcreatecouponresponse","text":"","title":"SandboxCreateCouponResponse"},{"location":"sandbox/docs/SandboxCreateCouponResponse/#properties","text":"Name Type Description Notes amount float Coupon amount [optional] balance float Balance [optional] bill_item_name str Bill Item [optional] coupon_code str Coupon code [optional] expiry_year_month str Year and month of expiration [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxCreateSubscriberRequest/","text":"SandboxCreateSubscriberRequest \u00b6 Properties \u00b6 Name Type Description Notes subscription str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxCreateSubscriberRequest"},{"location":"sandbox/docs/SandboxCreateSubscriberRequest/#sandboxcreatesubscriberrequest","text":"","title":"SandboxCreateSubscriberRequest"},{"location":"sandbox/docs/SandboxCreateSubscriberRequest/#properties","text":"Name Type Description Notes subscription str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxCreateSubscriberResponse/","text":"SandboxCreateSubscriberResponse \u00b6 Properties \u00b6 Name Type Description Notes tags TagSet [optional] apn str [optional] created_at int [optional] expiry_time int [optional] imsi str [optional] ip_address str [optional] last_modified_at int [optional] msisdn str [optional] operator_id str [optional] registration_secret str [optional] serial_number str [optional] speed_class str [optional] status str [optional] subscription str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxCreateSubscriberResponse"},{"location":"sandbox/docs/SandboxCreateSubscriberResponse/#sandboxcreatesubscriberresponse","text":"","title":"SandboxCreateSubscriberResponse"},{"location":"sandbox/docs/SandboxCreateSubscriberResponse/#properties","text":"Name Type Description Notes tags TagSet [optional] apn str [optional] created_at int [optional] expiry_time int [optional] imsi str [optional] ip_address str [optional] last_modified_at int [optional] msisdn str [optional] operator_id str [optional] registration_secret str [optional] serial_number str [optional] speed_class str [optional] status str [optional] subscription str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxDataTrafficStats/","text":"SandboxDataTrafficStats \u00b6 Properties \u00b6 Name Type Description Notes download_byte_size_total int [optional] download_packet_size_total int [optional] upload_byte_size_total int [optional] upload_packet_size_total int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxDataTrafficStats"},{"location":"sandbox/docs/SandboxDataTrafficStats/#sandboxdatatrafficstats","text":"","title":"SandboxDataTrafficStats"},{"location":"sandbox/docs/SandboxDataTrafficStats/#properties","text":"Name Type Description Notes download_byte_size_total int [optional] download_packet_size_total int [optional] upload_byte_size_total int [optional] upload_packet_size_total int [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxGetSignupTokenRequest/","text":"SandboxGetSignupTokenRequest \u00b6 Properties \u00b6 Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxGetSignupTokenRequest"},{"location":"sandbox/docs/SandboxGetSignupTokenRequest/#sandboxgetsignuptokenrequest","text":"","title":"SandboxGetSignupTokenRequest"},{"location":"sandbox/docs/SandboxGetSignupTokenRequest/#properties","text":"Name Type Description Notes auth_key str [optional] auth_key_id str [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxGetSignupTokenResponse/","text":"SandboxGetSignupTokenResponse \u00b6 Properties \u00b6 Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxGetSignupTokenResponse"},{"location":"sandbox/docs/SandboxGetSignupTokenResponse/#sandboxgetsignuptokenresponse","text":"","title":"SandboxGetSignupTokenResponse"},{"location":"sandbox/docs/SandboxGetSignupTokenResponse/#properties","text":"Name Type Description Notes token str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxInitRequest/","text":"SandboxInitRequest \u00b6 Properties \u00b6 Name Type Description Notes auth_key str auth_key_id str email str password str coverage_types [str] [optional] register_payment_method bool [optional] if omitted the server will use the default value of True any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxInitRequest"},{"location":"sandbox/docs/SandboxInitRequest/#sandboxinitrequest","text":"","title":"SandboxInitRequest"},{"location":"sandbox/docs/SandboxInitRequest/#properties","text":"Name Type Description Notes auth_key str auth_key_id str email str password str coverage_types [str] [optional] register_payment_method bool [optional] if omitted the server will use the default value of True any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxInsertAirStatsRequest/","text":"SandboxInsertAirStatsRequest \u00b6 Properties \u00b6 Name Type Description Notes data_traffic_stats_map SandboxInsertAirStatsRequestDataTrafficStatsMap [optional] unixtime int UNIX time (in milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxInsertAirStatsRequest"},{"location":"sandbox/docs/SandboxInsertAirStatsRequest/#sandboxinsertairstatsrequest","text":"","title":"SandboxInsertAirStatsRequest"},{"location":"sandbox/docs/SandboxInsertAirStatsRequest/#properties","text":"Name Type Description Notes data_traffic_stats_map SandboxInsertAirStatsRequestDataTrafficStatsMap [optional] unixtime int UNIX time (in milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxInsertAirStatsRequestDataTrafficStatsMap/","text":"SandboxInsertAirStatsRequestDataTrafficStatsMap \u00b6 Properties \u00b6 Name Type Description Notes s1_fast SandboxDataTrafficStats [optional] s1_minimum SandboxDataTrafficStats [optional] s1_slow SandboxDataTrafficStats [optional] s1_standard SandboxDataTrafficStats [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxInsertAirStatsRequestDataTrafficStatsMap"},{"location":"sandbox/docs/SandboxInsertAirStatsRequestDataTrafficStatsMap/#sandboxinsertairstatsrequestdatatrafficstatsmap","text":"","title":"SandboxInsertAirStatsRequestDataTrafficStatsMap"},{"location":"sandbox/docs/SandboxInsertAirStatsRequestDataTrafficStatsMap/#properties","text":"Name Type Description Notes s1_fast SandboxDataTrafficStats [optional] s1_minimum SandboxDataTrafficStats [optional] s1_slow SandboxDataTrafficStats [optional] s1_standard SandboxDataTrafficStats [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequest/","text":"SandboxInsertBeamStatsRequest \u00b6 Properties \u00b6 Name Type Description Notes beam_stats_map SandboxInsertBeamStatsRequestBeamStatsMap [optional] unixtime int UNIX time (in milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxInsertBeamStatsRequest"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequest/#sandboxinsertbeamstatsrequest","text":"","title":"SandboxInsertBeamStatsRequest"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequest/#properties","text":"Name Type Description Notes beam_stats_map SandboxInsertBeamStatsRequestBeamStatsMap [optional] unixtime int UNIX time (in milliseconds) [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequestBeamStatsMap/","text":"SandboxInsertBeamStatsRequestBeamStatsMap \u00b6 Properties \u00b6 Name Type Description Notes in_http SandboxBeamCounts [optional] in_mqtt SandboxBeamCounts [optional] in_tcp SandboxBeamCounts [optional] in_udp SandboxBeamCounts [optional] out_http SandboxBeamCounts [optional] out_https SandboxBeamCounts [optional] out_mqtt SandboxBeamCounts [optional] out_mqtts SandboxBeamCounts [optional] out_tcp SandboxBeamCounts [optional] out_tcps SandboxBeamCounts [optional] out_udp SandboxBeamCounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxInsertBeamStatsRequestBeamStatsMap"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequestBeamStatsMap/#sandboxinsertbeamstatsrequestbeamstatsmap","text":"","title":"SandboxInsertBeamStatsRequestBeamStatsMap"},{"location":"sandbox/docs/SandboxInsertBeamStatsRequestBeamStatsMap/#properties","text":"Name Type Description Notes in_http SandboxBeamCounts [optional] in_mqtt SandboxBeamCounts [optional] in_tcp SandboxBeamCounts [optional] in_udp SandboxBeamCounts [optional] out_http SandboxBeamCounts [optional] out_https SandboxBeamCounts [optional] out_mqtt SandboxBeamCounts [optional] out_mqtts SandboxBeamCounts [optional] out_tcp SandboxBeamCounts [optional] out_tcps SandboxBeamCounts [optional] out_udp SandboxBeamCounts [optional] any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/SandboxShipOrderRequest/","text":"SandboxShipOrderRequest \u00b6 Properties \u00b6 Name Type Description Notes operator_id str order_id str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"SandboxShipOrderRequest"},{"location":"sandbox/docs/SandboxShipOrderRequest/#sandboxshiporderrequest","text":"","title":"SandboxShipOrderRequest"},{"location":"sandbox/docs/SandboxShipOrderRequest/#properties","text":"Name Type Description Notes operator_id str order_id str any string name bool, date, datetime, dict, float, int, list, str, none_type any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"sandbox/docs/StatsApi/","text":"soracom_sandbox.StatsApi \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_insert_air_stats POST /sandbox/stats/air/subscribers/{imsi} Inserts Air stats for testing sandbox_insert_beam_stats POST /sandbox/stats/beam/subscribers/{imsi} Inserts Beam stats for testing sandbox_insert_air_stats \u00b6 sandbox_insert_air_stats(imsi, sandbox_insert_air_stats_request) Inserts Air stats for testing Populates Air stats for testing purpose. Inserted data are going to be automatically accumulated. It is not possible to put the data multiple times with the same timestamp. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import stats_api from soracom_sandbox.model.sandbox_insert_air_stats_request import SandboxInsertAirStatsRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | IMSI sandbox_insert_air_stats_request = SandboxInsertAirStatsRequest( data_traffic_stats_map=SandboxInsertAirStatsRequestDataTrafficStatsMap( s1_fast=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_minimum=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_slow=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_standard=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), ), unixtime=1, ) # SandboxInsertAirStatsRequest | The Air stats (up/down bytes of data) with specified timestamp. # example passing only required values which don't have defaults set try: # Inserts Air stats for testing api_instance.sandbox_insert_air_stats(imsi, sandbox_insert_air_stats_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling StatsApi->sandbox_insert_air_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI sandbox_insert_air_stats_request SandboxInsertAirStatsRequest The Air stats (up/down bytes of data) with specified timestamp. Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Data with the same timestamp already exists. - [Back to top] [Back to API list] [Back to Model list] [Back to README] sandbox_insert_beam_stats \u00b6 sandbox_insert_beam_stats(imsi, sandbox_insert_beam_stats_request) Inserts Beam stats for testing Populates Beam stats for testing purpose. Inserted data are going to be automatically accumulated. It is not possible to put the data multiple times with the same timestamp. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import stats_api from soracom_sandbox.model.sandbox_insert_beam_stats_request import SandboxInsertBeamStatsRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | IMSI sandbox_insert_beam_stats_request = SandboxInsertBeamStatsRequest( beam_stats_map=SandboxInsertBeamStatsRequestBeamStatsMap( in_http=SandboxBeamCounts( count=1, ), in_mqtt=SandboxBeamCounts( count=1, ), in_tcp=SandboxBeamCounts( count=1, ), in_udp=SandboxBeamCounts( count=1, ), out_http=SandboxBeamCounts( count=1, ), out_https=SandboxBeamCounts( count=1, ), out_mqtt=SandboxBeamCounts( count=1, ), out_mqtts=SandboxBeamCounts( count=1, ), out_tcp=SandboxBeamCounts( count=1, ), out_tcps=SandboxBeamCounts( count=1, ), out_udp=SandboxBeamCounts( count=1, ), ), unixtime=1, ) # SandboxInsertBeamStatsRequest | The Beam stats (number of requests) with specified timestamp. # example passing only required values which don't have defaults set try: # Inserts Beam stats for testing api_instance.sandbox_insert_beam_stats(imsi, sandbox_insert_beam_stats_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling StatsApi->sandbox_insert_beam_stats: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes imsi str IMSI sandbox_insert_beam_stats_request SandboxInsertBeamStatsRequest The Beam stats (number of requests) with specified timestamp. Return type \u00b6 void (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined HTTP response details \u00b6 Status code Description Response headers 200 OK - 400 Data with the same timestamp already exists. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_sandbox.StatsApi"},{"location":"sandbox/docs/StatsApi/#soracom_sandboxstatsapi","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_insert_air_stats POST /sandbox/stats/air/subscribers/{imsi} Inserts Air stats for testing sandbox_insert_beam_stats POST /sandbox/stats/beam/subscribers/{imsi} Inserts Beam stats for testing","title":"soracom_sandbox.StatsApi"},{"location":"sandbox/docs/StatsApi/#sandbox_insert_air_stats","text":"sandbox_insert_air_stats(imsi, sandbox_insert_air_stats_request) Inserts Air stats for testing Populates Air stats for testing purpose. Inserted data are going to be automatically accumulated. It is not possible to put the data multiple times with the same timestamp.","title":"sandbox_insert_air_stats"},{"location":"sandbox/docs/StatsApi/#example","text":"import time import soracom_sandbox from soracom_sandbox.api import stats_api from soracom_sandbox.model.sandbox_insert_air_stats_request import SandboxInsertAirStatsRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | IMSI sandbox_insert_air_stats_request = SandboxInsertAirStatsRequest( data_traffic_stats_map=SandboxInsertAirStatsRequestDataTrafficStatsMap( s1_fast=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_minimum=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_slow=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), s1_standard=SandboxDataTrafficStats( download_byte_size_total=1, download_packet_size_total=1, upload_byte_size_total=1, upload_packet_size_total=1, ), ), unixtime=1, ) # SandboxInsertAirStatsRequest | The Air stats (up/down bytes of data) with specified timestamp. # example passing only required values which don't have defaults set try: # Inserts Air stats for testing api_instance.sandbox_insert_air_stats(imsi, sandbox_insert_air_stats_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling StatsApi->sandbox_insert_air_stats: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/StatsApi/#parameters","text":"Name Type Description Notes imsi str IMSI sandbox_insert_air_stats_request SandboxInsertAirStatsRequest The Air stats (up/down bytes of data) with specified timestamp.","title":"Parameters"},{"location":"sandbox/docs/StatsApi/#return-type","text":"void (empty response body)","title":"Return type"},{"location":"sandbox/docs/StatsApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/StatsApi/#http-request-headers","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"sandbox/docs/StatsApi/#http-response-details","text":"Status code Description Response headers 200 OK - 400 Data with the same timestamp already exists. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/StatsApi/#sandbox_insert_beam_stats","text":"sandbox_insert_beam_stats(imsi, sandbox_insert_beam_stats_request) Inserts Beam stats for testing Populates Beam stats for testing purpose. Inserted data are going to be automatically accumulated. It is not possible to put the data multiple times with the same timestamp.","title":"sandbox_insert_beam_stats"},{"location":"sandbox/docs/StatsApi/#example_1","text":"import time import soracom_sandbox from soracom_sandbox.api import stats_api from soracom_sandbox.model.sandbox_insert_beam_stats_request import SandboxInsertBeamStatsRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = stats_api.StatsApi(api_client) imsi = \"imsi_example\" # str | IMSI sandbox_insert_beam_stats_request = SandboxInsertBeamStatsRequest( beam_stats_map=SandboxInsertBeamStatsRequestBeamStatsMap( in_http=SandboxBeamCounts( count=1, ), in_mqtt=SandboxBeamCounts( count=1, ), in_tcp=SandboxBeamCounts( count=1, ), in_udp=SandboxBeamCounts( count=1, ), out_http=SandboxBeamCounts( count=1, ), out_https=SandboxBeamCounts( count=1, ), out_mqtt=SandboxBeamCounts( count=1, ), out_mqtts=SandboxBeamCounts( count=1, ), out_tcp=SandboxBeamCounts( count=1, ), out_tcps=SandboxBeamCounts( count=1, ), out_udp=SandboxBeamCounts( count=1, ), ), unixtime=1, ) # SandboxInsertBeamStatsRequest | The Beam stats (number of requests) with specified timestamp. # example passing only required values which don't have defaults set try: # Inserts Beam stats for testing api_instance.sandbox_insert_beam_stats(imsi, sandbox_insert_beam_stats_request) except soracom_sandbox.ApiException as e: print(\"Exception when calling StatsApi->sandbox_insert_beam_stats: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/StatsApi/#parameters_1","text":"Name Type Description Notes imsi str IMSI sandbox_insert_beam_stats_request SandboxInsertBeamStatsRequest The Beam stats (number of requests) with specified timestamp.","title":"Parameters"},{"location":"sandbox/docs/StatsApi/#return-type_1","text":"void (empty response body)","title":"Return type"},{"location":"sandbox/docs/StatsApi/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/StatsApi/#http-request-headers_1","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"sandbox/docs/StatsApi/#http-response-details_1","text":"Status code Description Response headers 200 OK - 400 Data with the same timestamp already exists. - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/SubscriberApi/","text":"soracom_sandbox.SubscriberApi \u00b6 All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_create_subscriber POST /sandbox/subscribers/create Creates a new subscriber for sandbox. sandbox_create_subscriber \u00b6 SandboxCreateSubscriberResponse sandbox_create_subscriber() Creates a new subscriber for sandbox. Creates a new subscriber for sandbox. Example \u00b6 import time import soracom_sandbox from soracom_sandbox.api import subscriber_api from soracom_sandbox.model.sandbox_create_subscriber_response import SandboxCreateSubscriberResponse from soracom_sandbox.model.sandbox_create_subscriber_request import SandboxCreateSubscriberRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) sandbox_create_subscriber_request = SandboxCreateSubscriberRequest( subscription=\"subscription_example\", ) # SandboxCreateSubscriberRequest | Create request (optional) # example passing only required values which don't have defaults set # and optional values try: # Creates a new subscriber for sandbox. api_response = api_instance.sandbox_create_subscriber(sandbox_create_subscriber_request=sandbox_create_subscriber_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling SubscriberApi->sandbox_create_subscriber: %s\\n\" % e) Parameters \u00b6 Name Type Description Notes sandbox_create_subscriber_request SandboxCreateSubscriberRequest Create request [optional] Return type \u00b6 SandboxCreateSubscriberResponse Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json HTTP response details \u00b6 Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"soracom_sandbox.SubscriberApi"},{"location":"sandbox/docs/SubscriberApi/#soracom_sandboxsubscriberapi","text":"All URIs are relative to https://api-sandbox.soracom.io/v1 Method HTTP request Description sandbox_create_subscriber POST /sandbox/subscribers/create Creates a new subscriber for sandbox.","title":"soracom_sandbox.SubscriberApi"},{"location":"sandbox/docs/SubscriberApi/#sandbox_create_subscriber","text":"SandboxCreateSubscriberResponse sandbox_create_subscriber() Creates a new subscriber for sandbox. Creates a new subscriber for sandbox.","title":"sandbox_create_subscriber"},{"location":"sandbox/docs/SubscriberApi/#example","text":"import time import soracom_sandbox from soracom_sandbox.api import subscriber_api from soracom_sandbox.model.sandbox_create_subscriber_response import SandboxCreateSubscriberResponse from soracom_sandbox.model.sandbox_create_subscriber_request import SandboxCreateSubscriberRequest from pprint import pprint # Defining the host is optional and defaults to https://api-sandbox.soracom.io/v1 # See configuration.py for a list of all supported configuration parameters. configuration = soracom_sandbox.Configuration( host = \"https://api-sandbox.soracom.io/v1\" ) # Enter a context with an instance of the API client with soracom_sandbox.ApiClient() as api_client: # Create an instance of the API class api_instance = subscriber_api.SubscriberApi(api_client) sandbox_create_subscriber_request = SandboxCreateSubscriberRequest( subscription=\"subscription_example\", ) # SandboxCreateSubscriberRequest | Create request (optional) # example passing only required values which don't have defaults set # and optional values try: # Creates a new subscriber for sandbox. api_response = api_instance.sandbox_create_subscriber(sandbox_create_subscriber_request=sandbox_create_subscriber_request) pprint(api_response) except soracom_sandbox.ApiException as e: print(\"Exception when calling SubscriberApi->sandbox_create_subscriber: %s\\n\" % e)","title":"Example"},{"location":"sandbox/docs/SubscriberApi/#parameters","text":"Name Type Description Notes sandbox_create_subscriber_request SandboxCreateSubscriberRequest Create request [optional]","title":"Parameters"},{"location":"sandbox/docs/SubscriberApi/#return-type","text":"SandboxCreateSubscriberResponse","title":"Return type"},{"location":"sandbox/docs/SubscriberApi/#authorization","text":"No authorization required","title":"Authorization"},{"location":"sandbox/docs/SubscriberApi/#http-request-headers","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"sandbox/docs/SubscriberApi/#http-response-details","text":"Status code Description Response headers 200 OK - [Back to top] [Back to API list] [Back to Model list] [Back to README]","title":"HTTP response details"},{"location":"sandbox/docs/TagSet/","text":"TagSet \u00b6 Properties \u00b6 Name Type Description Notes any string name str any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"TagSet"},{"location":"sandbox/docs/TagSet/#tagset","text":"","title":"TagSet"},{"location":"sandbox/docs/TagSet/#properties","text":"Name Type Description Notes any string name str any string name can be used but the value must be the correct type [optional] [Back to Model list] [Back to API list] [Back to README]","title":"Properties"}]}