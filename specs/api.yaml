openapi: 3.0.0
info:
  description: SORACOM API v1
  title: SORACOM API
  version: VERSION_PLACEHOLDER
servers:
- description: Japan coverage production API
  url: https://api.soracom.io/v1
- description: Global coverage production API
  url: https://g.api.soracom.io/v1
paths:
  /audit_logs/api:
    get:
      description: Retrieve audit logs for API calls.
      operationId: getApiAuditLogs
      parameters:
      - description: Filter item for audit log retrieval by API kind (e.g. `/v1/auth`).
        in: query
        name: api_kind
        required: false
        schema:
          type: string
      - description: Start time for the log search range (unixtime milliseconds).
        in: query
        name: from_epoch_ms
        required: false
        schema:
          type: integer
      - description: End time for the log search range (unixtime milliseconds).
        in: query
        name: to_epoch_ms
        required: false
        schema:
          type: integer
      - description: Maximum number of log entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `requestedTimeEpochMs` in the last log entry retrieved
          in the previous page. By specifying this parameter, you can continue to
          retrieve the list from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIAuditLogEntry'
                type: array
          description: A list of API audit log entries.
      security:
      - api_key: []
        api_token: []
      summary: Retrieve audit logs for API calls
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs api get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /audit_logs/napter:
    get:
      description: Retrieve audit logs for Napter.
      operationId: getNapterAuditLogs
      parameters:
      - description: Type of the target resource to query Napter audit log entries.
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          type: string
      - description: Identity of the target resource to query log entries.
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: Start time for the log search range (unixtime milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the log search range (unixtime milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Maximum number of log entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NapterAuditLogEntry'
                type: array
          description: A list of Napter audit log entries.
      security:
      - api_key: []
        api_token: []
      summary: Retrieve audit logs for Napter
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      description: Performs authentication to access to the SORACOM API. To perform
        authentication by a root account, specify `email` and `password`. To perform
        authentication by an AuthKey, specify `authKeyId` and `authKey`. To perform
        authentication by a SAM user, specify `operatorId`, `userName` and `password`.
        An API Key and an API Token will be included in the response if successful.
        Specify the API Key and the API Token to requests afterwards
      operationId: auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        description: Authentication request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Authentication successful.
        "401":
          description: Authentication failed.
      summary: Performs authentication to access to the SORACOM API.
      tags:
      - Auth
      x-soracom-cli:
      - auth
  /auth/password_reset_token/issue:
    post:
      description: Generates a password reset token and send it to the operator's
        mail address. After receiving the password reset token, call /v1/auth/password_reset_token/verify
        API with the token to update operator's password.
      operationId: issuePasswordResetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePasswordResetTokenRequest'
        description: email address
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid email address.
      summary: Issues a password reset token for the operator.
      tags:
      - Auth
      x-soracom-cli:
      - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      description: Updates the operator's password if the password reset token is
        verified.
      operationId: verifyPasswordResetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenRequest'
        description: token, password
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid token.
        "404":
          description: Token expired.
      summary: Verifies the password reset token and updates password.
      tags:
      - Auth
      x-soracom-cli:
      - auth verify-password-reset-token
  /bills:
    get:
      description: Returns past billing history (after applied discounts such as free
        tiers, etc., inclusive of tax). This API only returns the billing amounts
        that have been finalized at the end of the month.
      operationId: getBillingHistory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillingHistoryResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get billing history.
      tags:
      - Billing
      x-soracom-cli:
      - bills list
  /bills/{yyyyMM}:
    get:
      description: Returns the billing history for the specified month (after applied
        discounts such as free tiers, etc., inclusive of tax). The amounts retrieved
        using this API correspond to the values before the invoice was finalized.
      operationId: getBilling
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlyBill'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get bill.
      tags:
      - Billing
      x-soracom-cli:
      - bills get
  /bills/{yyyyMM}/daily:
    get:
      description: Returns detailed information of billing amounts per day for the
        specified month. This API only returns the billing amounts that have been
        finalized.
      operationId: getBillingPerDay
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyBillResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get bill per day.
      tags:
      - Billing
      x-soracom-cli:
      - bills get-daily
  /bills/{yyyyMM}/export:
    post:
      description: Returns detailed information for the billing amounts for the specified
        month. This detailed information includes billing amounts per day, subscriber,
        and billing item.
      operationId: exportBilling
      parameters:
      - description: yyyyMM
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Output billing CSV file to S3.
      tags:
      - Billing
      x-soracom-cli:
      - bills export
  /bills/latest:
    get:
      description: Returns the latest billing amounts after applied discounts such
        as free tiers, etc. The amounts retrieved using this API correspond to the
        values before the invoice was finalized.
      operationId: getLatestBilling
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestBill'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Get latest bill.
      tags:
      - Billing
      x-soracom-cli:
      - bills get-latest
  /bills/latest/export:
    post:
      description: Returns detailed information of the billing amounts for the latest
        month. This detailed information includes billing amounts per day, subscriber,
        and billing item. The amounts retrieved using this API correspond to the values
        before the invoice was finalized.
      operationId: exportLatestBilling
      parameters:
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export latest billing CSV file to S3.
      tags:
      - Billing
      x-soracom-cli:
      - bills export-latest
  /cell_locations:
    get:
      description: Retrieves location information (latitude / longitude) for a cell
        tower which is identified by Cell ID etc. Please specify MCC, MNC, LAC and
        CID when the access radio technology is 3G. It is possible to retrieve location
        information without CID, but the location information will be low accuracy.  For
        LTE (4G), please specify MCC, MNC, TAC and ECID. As it is based on an open
        database to convert cell information into location information, the location
        information does not exist or might be incorrect.
      operationId: getCellLocation
      parameters:
      - description: MCC - Mobile Country Code
        in: query
        name: mcc
        required: true
        schema:
          type: string
      - description: MNC - Mobile Network Code
        in: query
        name: mnc
        required: true
        schema:
          type: string
      - description: LAC - Location Area Code (for 3G)
        in: query
        name: lac
        required: false
        schema:
          type: string
      - description: CID - Cell ID (for 3G)
        in: query
        name: cid
        required: false
        schema:
          type: string
      - description: TAC - Tracking Area Code (for 4G)
        in: query
        name: tac
        required: false
        schema:
          type: string
      - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`
        in: query
        name: ecid
        required: false
        schema:
          type: string
      - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`
        in: query
        name: eci
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellLocation'
          description: Location information for the cell tower
        "404":
          description: Location information is not found for the cell tower
      security:
      - api_key: []
        api_token: []
      summary: Get location information for a cell tower.
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations get
    post:
      description: Retrieves a list of location information (latitude / longitude)
        for multiple cell towers which are identified by Cell IDs etc.
      operationId: batchGetCellLocations
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CellIdentifier'
              type: array
        description: List of cell identifiers.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CellLocation'
                type: array
          description: List of location information for the specified cell towers
      security:
      - api_key: []
        api_token: []
      summary: List location information for multiple cell towers.
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations batch-get
  /coupons:
    get:
      description: Returns a list of currently registered coupons.
      operationId: listCoupons
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListCouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List coupons.
      tags:
      - Payment
      x-soracom-cli:
      - coupons list
    post:
      description: Creates a new coupon quotation. If the orderId is put in /confirm,
        the order is complete.
      operationId: createCouponQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedCouponRequest'
        description: Coupon details
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedCouponModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create coupon quotation.
      tags:
      - Order
      x-soracom-cli:
      - coupons create
  /coupons/{coupon_code}/register:
    post:
      description: Registers a coupon.
      operationId: registerCoupon
      parameters:
      - description: Coupon code
        in: path
        name: coupon_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
        "400":
          description: The coupon code is invalid or the coupon code registration
            limit has been reached.
      security:
      - api_key: []
        api_token: []
      summary: Register Coupon.
      tags:
      - Payment
      x-soracom-cli:
      - coupons register
  /coupons/{order_id}/confirm:
    put:
      description: Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmCouponOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm coupon order.
      tags:
      - Order
      x-soracom-cli:
      - coupons confirm
  /credentials:
    get:
      description: Returns a list of credentials.
      operationId: listCredentials
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List of credentials.
      tags:
      - Credential
      x-soracom-cli:
      - credentials list
  /credentials/{credentials_id}:
    delete:
      description: Deletes a credential.
      operationId: deleteCredential
      parameters:
      - description: Credentials ID
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
      security:
      - api_key: []
        api_token: []
      summary: Delete a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials delete
    post:
      description: Creates a new credential.
      operationId: createCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              API Token credentials:
                $ref: '#/components/examples/APITokenCredentials'
              AWS IAM Role credentials:
                $ref: '#/components/examples/IAMRoleCredentials'
              AWS credentials:
                $ref: '#/components/examples/AWSCredentials'
              Asteria Platio credentials:
                $ref: '#/components/examples/InfoteriaPlatioCredentials'
              Azure IoT credentials:
                $ref: '#/components/examples/AzureIoTCredentials'
              Azure credentials:
                $ref: '#/components/examples/AzureCredentials'
              Esri Japan ArcGIS Online credentials:
                $ref: '#/components/examples/EsrijCredentials'
              Google Cloud IoT Core credentials:
                $ref: '#/components/examples/GoogleIoTCredentials'
              Google Service Account (JSON):
                $ref: '#/components/examples/GoogleServiceAccountJson'
              Kii Thing-IF credentials:
                $ref: '#/components/examples/KiiThingifCredentials'
              LANDLOG credentials:
                $ref: '#/components/examples/LandlogCredentials'
              OPTiM Cloud IoT OS credentials:
                $ref: '#/components/examples/OptimCloudCredentials'
              Pre-Shared Key:
                $ref: '#/components/examples/PreSharedKey'
              PubNub credentials:
                $ref: '#/components/examples/PubnubCredentials'
              SensorCorpus credentials:
                $ref: '#/components/examples/SensorcorpusCredentials'
              Username password credentials:
                $ref: '#/components/examples/UsernamePasswordCredentials'
              Watson IoT credentials:
                $ref: '#/components/examples/WatsonIoTCredentials'
              WingArc1st MotionBoard credentials:
                $ref: '#/components/examples/MotionboardCredentials'
              X.509 certificate:
                $ref: '#/components/examples/X509Certificate'
              YE DIGITAL MMCloud credentials:
                $ref: '#/components/examples/MmcloudCredentials'
              mockmock DataRecorder credentials:
                $ref: '#/components/examples/MockmockDatarecorderCredentials'
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: credentials
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials create
    put:
      description: Updates a credential.
      operationId: updateCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: OK.
        "400":
          description: There was an error in the request or the specified token has
            already expired. (In the latter case, you will need to use the /auth API
            to do authentication once again.)
      security:
      - api_key: []
        api_token: []
      summary: Update a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials update
  /data/{resource_type}/{resource_id}:
    get:
      description: Returns a list of data entries sent from a resource that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataEntries
      parameters:
      - description: Type of data source resource
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a resource.
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /data/{resource_type}/{resource_id}/{time}:
    delete:
      description: Deletes a data entry identified with resource ID and timestamp
      operationId: deleteDataEntry
      parameters:
      - description: Type of data source resource
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: Timestamp of the target data entry to delete (unixtime in milliseconds).
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: The data entry has been successfully deleted
      security:
      - api_key: []
        api_token: []
      summary: Deletes a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data delete-entry
    get:
      description: Gets a data entry identified with resource ID and timestamp
      operationId: getDataEntry
      parameters:
      - description: Type of data source resource
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: Timestamp of the target data entry to get (unixtime in milliseconds).
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: The data entry specified with resource ID and timestamp
        "404":
          description: No such entry found
      security:
      - api_key: []
        api_token: []
      summary: Gets a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entry
  /data/resources:
    get:
      description: Returns a list of data source resources that have sent data from
        resources that belong to the operator. If the total number of entries does
        not fit in one page, a URL for accessing the next page is returned in the
        'Link' header of the response.
      operationId: listDataSourceResources
      parameters:
      - description: Type of data source resource
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - SubscriberIdentityModule
          - SigfoxDevice
          - Device
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `resourceId` in the last log entry retrieved in
          the previous page. By specifying this parameter, you can continue to retrieve
          the list from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSourceResourceMetadata'
                type: array
          description: A list of data source resources.
      security:
      - api_key: []
        api_token: []
      summary: Get the list of data source resources
      tags:
      - DataEntry
      x-soracom-cli:
      - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /device_object_models:
    get:
      description: Returns a list of device object models
      operationId: listDeviceObjectModels
      parameters:
      - description: ID of the last device object model in the previous page
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Max number of device object models in a response
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceObjectModel'
                type: array
          description: List of device object models
      security:
      - api_key: []
        api_token: []
      summary: Returns a list of device object models
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Creates a new device object model
      operationId: createDeviceObjectModel
      requestBody:
        $ref: '#/components/requestBodies/DeviceObjectModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: Device object model created
        "400":
          description: Failed to parse device object model definition
      security:
      - api_key: []
        api_token: []
      summary: Creates a new device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices create-object-model
  /device_object_models/{model_id}:
    delete:
      description: Deletes a device object model
      operationId: deleteDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: No such device object model found
      security:
      - api_key: []
        api_token: []
      summary: Deletes a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices delete-object-model
    get:
      description: Gets a device object model
      operationId: getDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: Device object model
        "404":
          description: No such device object model found
      security:
      - api_key: []
        api_token: []
      summary: Gets a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices get-object-model
    post:
      description: Updates a device object model
      operationId: updateDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceObjectModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeviceObjectModel'
        description: Device object model definition in either XML or JSON format.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: Device object model updated
        "400":
          description: Failed to parse device object model definition
        "404":
          description: No such device object model found
      security:
      - api_key: []
        api_token: []
      summary: Updates a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices update-object-model
  /device_object_models/{model_id}/set_scope:
    post:
      description: Sets scope for a device object model
      operationId: setDeviceObjectModelScope
      parameters:
      - description: Target device object model ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDeviceObjectModelScopeRequest'
        description: Scope value that is applied to the target device object model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: Scope is set to the target device object model
        "404":
          description: No such device object model found
      security:
      - api_key: []
        api_token: []
      summary: Sets scope for a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices set-object-model-scope
  /devices:
    get:
      description: Returns a list of Devices
      operationId: listDevices
      parameters:
      - description: Tag name
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag value
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag value match mode (exact | prefix)
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          type: string
      - description: ID of the last Device in the previous page
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Max number of Devices in a response
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: List of Devices
      security:
      - api_key: []
        api_token: []
      summary: Returns a list of Devices
      tags:
      - Device
      x-soracom-cli:
      - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Creates a new Device
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        description: Device to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device created
      security:
      - api_key: []
        api_token: []
      summary: Creates a new Device
      tags:
      - Device
      x-soracom-cli:
      - devices create
  /devices/{device_id}:
    delete:
      description: Delete Device
      operationId: deleteDevice
      parameters:
      - description: Device to delete
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Device deleted
        "404":
          description: No such device found
      security:
      - api_key: []
        api_token: []
      summary: Delete Device
      tags:
      - Device
      x-soracom-cli:
      - devices delete
    get:
      description: Returns a Device identified by device ID
      operationId: getDevice
      parameters:
      - description: Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Whether or not to add model information
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: A Device identified by device ID
        "404":
          description: No such device found
      security:
      - api_key: []
        api_token: []
      summary: Returns a Device identified by device ID
      tags:
      - Device
      x-soracom-cli:
      - devices get
  /devices/{device_id}/{object}/{instance}:
    get:
      description: Get resources under an object instance of a device
      operationId: readDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Whether or not to add model information
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectInstance'
          description: Resources under the specified object instance
        "400":
          description: Object instance is not readable
        "404":
          description: Object instance is not found
      security:
      - api_key: []
        api_token: []
      summary: Get resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices get-instance
  /devices/{device_id}/{object}/{instance}/{resource}:
    get:
      description: Get the specified resource of a device
      operationId: readDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: Whether or not to add model information
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInstance'
          description: Resource
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Get the specified resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices get-resource
    put:
      description: Write value to a resource of a device
      operationId: writeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
              type: object
        description: Value(s) to write to the resource. This value accepts LwM2M basic
          data types. You have to use the property name `values` (instead of `value`)
          with an array value if the resource model is multiple-mode.
        required: true
      responses:
        "202":
          description: Updating resource is accepted
        "400":
          description: Specified Resource does not support write (Including case of
            connection error such as offline device)
        "404":
          description: Resource is not found
        "500":
          description: Error response from the device. (It includes the case where
            the LwM2M response message is error from the device, and the error message
            from the device is included in the response 'message'.)
      security:
      - api_key: []
        api_token: []
      summary: Write value to a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices put-resource
  /devices/{device_id}/{object}/{instance}/{resource}/execute:
    post:
      description: Executes a resource of a device
      operationId: executeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
              type: object
        description: Argument string when executing the resource
      responses:
        "202":
          description: Execution request is accepted
        "400":
          description: Resource is not executable
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Executes a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices execute-resource
  /devices/{device_id}/{object}/{instance}/{resource}/observe:
    post:
      description: Triggers observation of the specified resource of a device
      operationId: observeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: Whether or not to add model information
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "202":
          description: Observation started.
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Triggers observation of the specified resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resource
  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:
    post:
      description: Stops observation of a resource of a device
      operationId: unobserveDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observation cancelled
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Stops observation of a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resource
  /devices/{device_id}/{object}/{instance}/observe:
    post:
      description: Triggers observation of resources under an object instance of a
        device
      operationId: observeDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Whether or not to add model information
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "202":
          description: Observation started.
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Triggers observation of resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resources
  /devices/{device_id}/{object}/{instance}/unobserve:
    post:
      description: Stops observation of resources under an object instance of a device
      operationId: unobserveDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observation cancelled
        "404":
          description: Resource is not found
      security:
      - api_key: []
        api_token: []
      summary: Stops observation of resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resources
  /devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a device that match certain
        criteria. If the total number of entries does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the response.
      operationId: getDataFromDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a device.
      tags:
      - Device
      x-soracom-cli:
      - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /devices/{device_id}/set_group:
    post:
      description: Lets a device join a group
      operationId: setDeviceGroup
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                groupId:
                  type: string
                  nullable: true
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device updated
        "404":
          description: No such device found
      security:
      - api_key: []
        api_token: []
      summary: Lets a device join a group
      tags:
      - Device
      x-soracom-cli:
      - devices set-group
  /devices/{device_id}/tags:
    put:
      description: Updates device tags
      operationId: putDeviceTags
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of values for tags to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device updated
        "404":
          description: No such device found
      security:
      - api_key: []
        api_token: []
      summary: Updates device tags
      tags:
      - Device
      x-soracom-cli:
      - devices put-device-tags
  /devices/{device_id}/tags/{tag_name}:
    delete:
      description: Delete device tag
      operationId: deleteDeviceTag
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Name of tag to delete
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Device tag deleted
        "404":
          description: No such device or tag found
      security:
      - api_key: []
        api_token: []
      summary: Delete device tag
      tags:
      - Device
      x-soracom-cli:
      - devices delete-device-tag
  /devices/{device_id}/unset_group:
    post:
      description: Lets a device leave from a group
      operationId: unsetDeviceGroup
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device updated
        "404":
          description: No such device found
      security:
      - api_key: []
        api_token: []
      summary: Lets a device leave from a group
      tags:
      - Device
      x-soracom-cli:
      - devices unset-group
  /diagnostics:
    post:
      description: Send a diagnostic request.
      operationId: sendDiagnosticRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/DiagnosticResponse'
                type: array
          description: Successfully accepted a diagnostic request.
      security:
      - api_key: []
        api_token: []
      summary: Send diagnostic request
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics send-request
  /diagnostics/{diagnostic_id}:
    get:
      description: Returns a diagnostic.
      operationId: getDiagnostic
      parameters:
      - description: The identifier of diagnostic request.
        in: path
        name: diagnostic_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DiagnosticResponse'
          description: OK.
        "404":
          description: The specified diagnostic_id is not found.
      security:
      - api_key: []
        api_token: []
      summary: Get diagnostic
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics get
  /event_handlers:
    get:
      description: Returns a list of event handlers.
      operationId: listEventHandlers
      parameters:
      - description: target
        in: query
        name: target
        required: false
        schema:
          enum:
          - operator
          - imsi
          - sim
          - group
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Event Handlers.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list
    post:
      description: Creates a new event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/
      operationId: createEventHandler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
        description: event handler settings
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers create
  /event_handlers/{handler_id}:
    delete:
      description: Deletes the specified event handler.
      operationId: deleteEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK.
        "404":
          description: EventHandler not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers delete
    get:
      description: Returns information about the specified event handler.
      operationId: getEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: OK.
        "404":
          description: Handler not found.
      security:
      - api_key: []
        api_token: []
      summary: Get Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers get
    put:
      description: Updates the specified event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/
      operationId: updateEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
        description: event handler settings
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid handlerId.
      security:
      - api_key: []
        api_token: []
      summary: Update Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers update
  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:
    delete:
      description: Deletes the setting for ignoring the specified event handler of
        the specified IMSI.
      operationId: deleteIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK
        "404":
          description: not found
      security:
      - api_key: []
        api_token: []
      summary: Delete Ignore Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers unignore
    post:
      description: Adds a setting for ignoring the specified event handler of the
        specified IMSI.
      operationId: setIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Ignore Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers ignore
  /event_handlers/subscribers/{imsi}:
    get:
      description: Returns a list of event handlers related to the specified IMSI.
      operationId: listEventHandlersBySubscriber
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
        "404":
          description: not found
      security:
      - api_key: []
        api_token: []
      summary: List Event Handlers related to Subscriber.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list-for-subscriber
  /files:
    get:
      description: Returns a list of file entries which beginnings of their file paths
        are matched with the `prefix` query string in the ascending sorted UTF-8 bytes
        order of their file paths. An empty list is returned if the prefix does not
        match with any paths of file entries.
      operationId: findFiles
      parameters:
      - description: Scope of the request
        in: query
        name: scope
        required: true
        schema:
          enum:
          - private
          - public
          type: string
      - description: Prefix to match with file path
        in: query
        name: prefix
        required: true
        schema:
          type: string
      - description: Num of entries
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: string
      - description: The filePath of the last file entry retrieved on the current
          page. By specifying this parameter, you can continue to retrieve the list
          from the next file entry onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: List of file entries found with query parameters, which can
            be empty if the prefix does not match with any paths of file entries.
        "404":
          description: The specified scope does not exist
      security:
      - api_key: []
        api_token: []
      summary: Find files with prefix query parameter in the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files find
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/{scope}/{path}:
    delete:
      description: Deletes the specified file in the scope. Only `private` scope is
        allowed for the operation.
      operationId: deleteFile
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: Target path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The specified file is successfully deleted
        "404":
          description: No such file
      security:
      - api_key: []
        api_token: []
      summary: Delete specified file in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete
    get:
      description: Redirects the client to URL for the link to download the file specified
        by the scope and the path. By issuing HTTP GET request to the link returned
        in the response, the client is able to download the file.
      operationId: getFile
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: Target path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "302":
          description: Client is redirected to the link to download the file.
        "404":
          description: No such file
      security:
      - api_key: []
        api_token: []
      summary: Download file specified by the path and the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files get
    head:
      description: Gets metadata of the file specified by the path and the scope.
      operationId: getFileMetadata
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: Target path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileEntry'
          description: Metadata of the file
        "404":
          description: No such file
      security:
      - api_key: []
        api_token: []
      summary: Get the metadata of the file specified by the path and the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files get-metadata
    put:
      description: Uploads the file to the specified path in the scope. Only `private`
        scope is allowed for the operation.
      operationId: putFile
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: Target path
        in: path
        name: path
        required: true
        schema:
          type: string
      - description: Content type of the file to upload
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              format: binary
              type: string
        description: Content of the file to upload
        required: true
      responses:
        "200":
          description: File is successfully updated with the content
        "201":
          description: File is successfully created
      security:
      - api_key: []
        api_token: []
      summary: Upload file to the path in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files put
  /files/{scope}/{path}/:
    delete:
      description: Deletes the specified directory in the scope. Only `private` scope
        is allowed for the operation.
      operationId: deleteDirectory
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: Target directory path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The specified directory is successfully deleted
        "400":
          description: The specified directory is not empty
        "404":
          description: No such directory
      security:
      - api_key: []
        api_token: []
      summary: Delete specified directory in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete-directory
    get:
      description: Returns a list of file entries under the path in the scope. This
        operation works only for directories and an error will be retrurned if the
        file entry corresponds to the given path is not a directory. If the total
        number of entries does not fit in one page, a URL for accessing the next page
        is returned in the 'Link' header of the response.
      operationId: listFiles
      parameters:
      - description: Scope of the request
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: Target path
        in: path
        name: path
        required: true
        schema:
          default: /
          type: string
      - description: Num of entries
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: string
      - description: The filename  of the last file entry retrieved on the current
          page. By specifying this parameter, you can continue to retrieve the list
          from the next file entry onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: A list of file entries.
        "404":
          description: No such directory
      security:
      - api_key: []
        api_token: []
      summary: List files and directories on the path in the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/exported/{exported_file_id}:
    get:
      description: Get an exported file. The `url` field in the response will contain
        a URL to download the exported file.
      operationId: getExportedFile
      parameters:
      - description: file export id
        in: path
        name: exported_file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetExportedFileResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Get an exported file.
      tags:
      - Files
      x-soracom-cli:
      - files get-exported
  /gadgets:
    get:
      description: Returns a list of gadgets that match certain criteria. If the total
        number of gadgets does not fit in one page, a URL for accessing the next page
        is returned in the 'Link' header of the response.
      operationId: listGadgets
      parameters:
      - description: Product ID for filtering the search.
        in: query
        name: product_id
        required: false
        schema:
          type: string
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of gadgets to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The ID ({product_id}/{serial_number}) of the last gadget retrieved
          on the current page. By specifying this parameter, you can continue to retrieve
          the list from the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Gadget'
                type: array
          description: A list of Gadgets.
      security:
      - api_key: []
        api_token: []
      summary: List gadgets.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets/{product_id}/{serial_number}:
    get:
      description: Returns information about the specified gadget.
      operationId: getGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets get
  /gadgets/{product_id}/{serial_number}/disable_termination:
    post:
      description: Disables termination of specified gadget.
      operationId: disableTerminationOnGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets disable-termination
  /gadgets/{product_id}/{serial_number}/enable_termination:
    post:
      description: Enables termination of specified gadget.
      operationId: enableTerminationOnGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets enable-termination
  /gadgets/{product_id}/{serial_number}/register:
    post:
      description: Registers a gadget
      operationId: registerGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GadgetRegistrationRequest'
        description: Gadget registration request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: Gadget successfully registered
        "404":
          description: No such resource found.
      security:
      - api_key: []
        api_token: []
      summary: Register a gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets register
  /gadgets/{product_id}/{serial_number}/set_group:
    post:
      description: Sets or overwrites a group for the specified gadget.
      operationId: setGadgetGroup
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group (may include ID only).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Group of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets set-group
  /gadgets/{product_id}/{serial_number}/tags:
    put:
      description: Inserts/updates tags for the specified gadget.
      operationId: putGadgetTags
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update gadget Tags.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets put-tags
  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified gadget.
      operationId: deleteGadgetTag
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified gadget or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete gadget Tag.
      tags:
      - Gadget
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - gadgets delete-tag
  /gadgets/{product_id}/{serial_number}/terminate:
    post:
      description: Terminates the specified gadget
      operationId: terminateGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets terminate
  /gadgets/{product_id}/{serial_number}/unset_group:
    post:
      description: Removes the group configuration from the specified gadget.
      operationId: unsetGadgetGroup
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        schema:
          type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: The gadget's detailed information after the update.
        "404":
          description: The specified gadget does not exist or the gadget does not
            belong to a group.
      security:
      - api_key: []
        api_token: []
      summary: Unset Group of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets unset-group
  /groups:
    get:
      description: Returns a list of groups.
      operationId: listGroups
      parameters:
      - description: Tag name of the group. Filters through all groups that exactly
          match the tag name. When tag_name is specified, tag_value is required.
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag value of the groups.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The last Group ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: A list of groups.
      security:
      - api_key: []
        api_token: []
      summary: List Groups.
      tags:
      - Group
      x-soracom-cli:
      - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new group.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        description: Tags for group to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Group.
      tags:
      - Group
      x-soracom-cli:
      - groups create
  /groups/{group_id}:
    delete:
      description: Deletes the specified group by group ID
      operationId: deleteGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified group complete.
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Group.
      tags:
      - Group
      x-soracom-cli:
      - groups delete
    get:
      description: Returns the group specified by the group ID.
      operationId: getGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The specified group.
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Group.
      tags:
      - Group
      x-soracom-cli:
      - groups get
  /groups/{group_id}/configuration/{namespace}:
    delete:
      description: Delete a namespace for the specified group.
      operationId: deleteConfigurationNamespace
      parameters:
      - description: Target group.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: Namespace to be deleted.
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      responses:
        "204":
          description: The namespace was successfully deleted.
        "400":
          description: The specified namespace does not exist.
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Configuration Namespace.
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config-namespace
    put:
      description: Adds/updates parameters for the specified group.
      operationId: putConfigurationParameters
      parameters:
      - description: Target group.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: Target configuration.
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GroupConfigurationUpdateRequest'
              type: array
        description: Array of values for target object to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The group after the update.
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update Group Configuration Parameters.
      tags:
      - Group
      x-soracom-cli:
      - groups put-config
  /groups/{group_id}/configuration/{namespace}/{name}:
    delete:
      description: Delete parameters for the specified group.
      operationId: deleteConfigurationParameter
      parameters:
      - description: Target group.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: Namespace of target parameters.
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      - description: Parameter name to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The parameter was successfully deleted.
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Configuration Parameters.
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config
  /groups/{group_id}/subscribers:
    get:
      description: Returns a list of subscribers that belong to the specified group
        by group ID.
      operationId: listSubscribersInGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Target group ID
        "404":
          description: The specified group does not exist.
      security:
      - api_key: []
        api_token: []
      summary: List Subscribers in a group.
      tags:
      - Group
      x-sam-operationId: listSubscribers
      x-soracom-cli:
      - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /groups/{group_id}/tags:
    put:
      description: Adds/updates tags of specified configuration group.
      operationId: putGroupTags
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of values for tags to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update Group Tags.
      tags:
      - Group
      x-sam-operationId: putTags
      x-soracom-cli:
      - groups put-tags
  /groups/{group_id}/tags/{tag_name}:
    delete:
      description: Deletes tag from the specified group.
      operationId: deleteGroupTag
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Tag deletion complete.
        "404":
          description: The specified subscriber or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Group Tag.
      tags:
      - Group
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - groups delete-tag
  /lagoon/dashboards/{dashboard_id}/permissions:
    put:
      description: Update permissions for a dashboard of SORACOM Lagoon
      operationId: updateLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonDashboardPermissionsUpdatingRequest'
        description: req
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: Update permissions for a dashboard of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards update-permissions
  /lagoon/dashboards/{dashboard_id}/permissions/init:
    post:
      description: Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      operationId: initializeLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards init-permissions
  /lagoon/dashboards/permissions:
    get:
      description: List permissions for all SORACOM Lagoon dashboards
      operationId: listLagoonDashboardsPermissions
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonDashboardPermissionsResponse'
                type: array
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: List permissions for all SORACOM Lagoon dashboards
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards list-permissions
  /lagoon/image/link:
    get:
      description: Get a custom icon image link of SORACOM Lagoon
      operationId: getImageLink
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Bad request
      summary: Get a custom icon image link of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon get-image-link
  /lagoon/license_packs:
    get:
      description: Get the status of active SORACOM Lagoon license packs
      operationId: listLagoonLicensePackStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonLicensePackStatusResponse'
                type: array
          description: OK
        "400":
          description: Bad request
      summary: Get the status of active SORACOM Lagoon license packs
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs list-status
    put:
      description: Update the quantities for license packs of SORACOM Lagoon. This
        API is only allowed to operate by root account.
      operationId: updateLagoonLicensePack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonLicensePacksUpdatingRequest'
        description: req
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: Update the quantities for license packs of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs update
  /lagoon/migration:
    get:
      description: Get the version migration information for SORACOM Lagoon. Only
        the root account can operate this.
      operationId: getLagoonMigrationInfo
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Get the version migration information for SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration get-info
    post:
      description: Migrate SORACOM Lagoon version. Only the root account can operate
        this.
      operationId: migrateLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonMigrationFromClassicRequest'
        description: req
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Migrate SORACOM Lagoon version
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration migrate
  /lagoon/plan:
    put:
      description: Update the plan of SORACOM Lagoon. This API is only allowed to
        operate by root account.
      operationId: updateLagoonPlan
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: Update the plan of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon updated-plan
  /lagoon/register:
    post:
      description: Register (activate) SORACOM Lagoon. This API is only allowed to
        operate by root account.
      operationId: registerLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonRegistrationRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonRegistrationResponse'
          description: Registered
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Register (activate) SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon register
  /lagoon/terminate:
    post:
      description: Terminate (deactivate) SORACOM Lagoon.
      operationId: terminateLagoon
      responses:
        "204":
          description: Terminated
        "400":
          description: Bad request
        "404":
          description: Operator not found
      security:
      - api_key: []
        api_token: []
      summary: Terminate (deactivate) SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon terminate
  /lagoon/users:
    get:
      description: List SORACOM Lagoon users that belong to operator.
      operationId: listLagoonUsers
      parameters:
      - description: If the value is true, a request will be issued to Lagoon Classic.
          This is only valid if both Lagoon and Lagoon Classic are enabled.
        in: query
        name: classic
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonUser'
                type: array
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: List SORACOM Lagoon users that belong to operator
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon list-users
      - lagoon users list
    post:
      description: Create a SORACOM Lagoon user.
      operationId: createLagoonUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserCreationRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonUserCreationResponse'
          description: Created
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Create a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon create-user
      - lagoon users create
  /lagoon/users/{lagoon_user_id}:
    delete:
      description: Delete a SORACOM Lagoon user.
      operationId: deleteLagoonUser
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Delete a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon delete-user
      - lagoon users delete
  /lagoon/users/{lagoon_user_id}/email:
    put:
      description: Update email address of a SORACOM Lagoon user.
      operationId: updateLagoonUserEmail
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserEmailUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Update email address of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-email
      - lagoon users update-email
  /lagoon/users/{lagoon_user_id}/password:
    put:
      description: Update password of a SORACOM Lagoon user.
      operationId: updateLagoonUserPassword
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPasswordUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Update password of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-password
      - lagoon users update-password
  /lagoon/users/{lagoon_user_id}/permission:
    put:
      description: Update permission of a SORACOM Lagoon user.
      operationId: updateLagoonUserPermission
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPermissionUpdatingRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Update permission of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-permission
      - lagoon users update-permission
  /logs:
    get:
      description: Returns a list of log entries that match certain criteria. If the
        total number of entries does not fit in one page, a URL for accessing the
        next page is returned in the 'Link' header of the response.
      operationId: getLogs
      parameters:
      - description: Type of the target resource to query log entries.
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - EventHandler
          - VirtualPrivateGateway
          type: string
      - description: Identity of the target resource to query log entries.
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: Service name to filter log entries.
        in: query
        name: service
        required: false
        schema:
          enum:
          - Air
          - Beam
          - Canal
          - Direct
          - Door
          - Endorse
          - Funnel
          - Gate
          type: string
      - description: Start time for the log search range (unixtime).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the log search range (unixtime).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Maximum number of log entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEntry'
                type: array
          description: A list of log entries.
      security:
      - api_key: []
        api_token: []
      summary: Get Logs.
      tags:
      - Log
      x-soracom-cli:
      - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      description: Returns a list of LoRa devices that match certain criteria. If
        the total number of LoRa devices does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listLoraDevices
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of LoRa devices to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraDevice'
                type: array
          description: A list of LoRa devices.
      security:
      - api_key: []
        api_token: []
      summary: List LoRa devices.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices/{device_id}:
    get:
      description: Returns information about the specified LoRa device.
      operationId: getLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get
  /lora_devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a LoRa device that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromLoraDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Sends data to the specified LoRa device. The data is sent to the
        LoRa network server, to be sent out to the device using the next available
        slot. If another message destined for the same LoRa device ID is already waiting
        to be sent, the existing message will be discarded, and the new message will
        be sent instead.
      operationId: sendDataToLoraDevice
      parameters:
      - description: ID of the recipient device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraData'
        description: Binary data encoded as a hexadecimal string. Maximum length of
          original binary data is 11 octets (22 characters when encoded as a hexadecimal
          string). The number of characters must be even. fPort MUST be equal to or
          greater than 0. 0 is used for the control plane and 1 or greater values
          should be used in general. It defaults to 2 to avoid the issues of some
          devices from some vendors and all invalid values that can not be parsed
          fallback to 2.
        required: true
      responses:
        "204":
          description: Data has been received and sent to the LoRa network server
            for the recipient device to retrieve.
        "400":
          description: The payload JSON data contains one or more invalid parameters.
        "404":
          description: No such device found.
      security:
      - api_key: []
        api_token: []
      summary: Send data to a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices send-data
  /lora_devices/{device_id}/disable_termination:
    post:
      description: Disables termination of specified LoRa device.
      operationId: disableTerminationOnLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices disable-termination
  /lora_devices/{device_id}/enable_termination:
    post:
      description: Enables termination of specified LoRa device.
      operationId: enableTerminationOnLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices enable-termination
  /lora_devices/{device_id}/register:
    post:
      description: Registers a LoRa device.
      operationId: registerLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLoraDeviceRequest'
        description: LoRa device
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: LoRa device registration complete.
      security:
      - api_key: []
        api_token: []
      summary: Register LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices register
  /lora_devices/{device_id}/set_group:
    post:
      description: Sets or overwrites a group for the specified LoRa device.
      operationId: setLoraDeviceGroup
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group (may include ID only).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Group of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices set-group
  /lora_devices/{device_id}/tags:
    put:
      description: Inserts/updates tags for the specified LoRa device.
      operationId: putLoraDeviceTags
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update LoRa device Tags.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices put-tags
  /lora_devices/{device_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified LoRa device.
      operationId: deleteLoraDeviceTag
      parameters:
      - description: device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified LoRa device or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa device Tag.
      tags:
      - LoraDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - lora-devices delete-tag
  /lora_devices/{device_id}/terminate:
    post:
      description: Terminates the specified LoRa device
      operationId: terminateLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices terminate
  /lora_devices/{device_id}/unset_group:
    post:
      description: Removes the group configuration from the specified LoRa device.
      operationId: unsetLoraDeviceGroup
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: The LoRa device's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist or the LoRa device
            does not belong to a group.
      security:
      - api_key: []
        api_token: []
      summary: Unset Group of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices unset-group
  /lora_gateways:
    get:
      description: Returns a list of LoRa gateways that match certain criteria. If
        the total number of LoRa gateways does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listLoraGateways
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of LoRa devices to retrieve.
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: A list of LoRa gateways.
      security:
      - api_key: []
        api_token: []
      summary: List LoRa Gateways.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_gateways/{gateway_id}:
    get:
      description: Returns information about the specified LoRa gateway.
      operationId: getLoraGateway
      parameters:
      - description: Gateway ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways get
  /lora_gateways/{gateway_id}/disable_termination:
    post:
      description: Disables termination of specified LoRa gateway.
      operationId: disableTerminationOnLoraGateway
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways disable-termination
  /lora_gateways/{gateway_id}/enable_termination:
    post:
      description: Enables termination of specified LoRa gateway.
      operationId: enableTerminationOnLoraGateway
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways enable-termination
  /lora_gateways/{gateway_id}/set_network_set:
    post:
      description: Sets or overwrites network set ID for the specified LoRa gateway.
      operationId: setLoraNetworkSet
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/SetNetworkSetRequest'
        description: LoRa Network Set ID.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways set-network-set
  /lora_gateways/{gateway_id}/tags:
    put:
      description: Inserts/updates tags for the specified LoRa gateway.
      operationId: putLoraGatewayTags
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update LoRa gateway Tags.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways put-tags
  /lora_gateways/{gateway_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified LoRa gateway.
      operationId: deleteLoraGatewayTag
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      - description: Name of tag to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified LoRa gateway or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa gateway tag.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways delete-tag
  /lora_gateways/{gateway_id}/terminate:
    post:
      description: Terminates the specified LoRa gateway
      operationId: terminateLoraGateway
      parameters:
      - description: Device ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways terminate
  /lora_gateways/{gateway_id}/unset_network_set:
    post:
      description: Unset network set ID of the specified LoRa gateway.
      operationId: unsetLoraNetworkSet
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: The LoRa gateway's detailed information after the update.
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Unset Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      description: Returns a list of LoRa network sets that match certain criteria.
        If the total number of LoRa network sets does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the response.
      operationId: listLoraNetworkSets
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of LoRa devices to retrieve.
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: The ID of the last network set retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraNetworkSet'
                type: array
          description: A list of LoRa network sets.
      security:
      - api_key: []
        api_token: []
      summary: List LoRa Network Sets.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Creates a specified LoRa network set
      operationId: createLoraNetworkSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraNetworkSet'
        description: Additional metadata such as tags for a LoRa network set to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: A LoRa network set was created.
      security:
      - api_key: []
        api_token: []
      summary: Create a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets create
  /lora_network_sets/{ns_id}:
    delete:
      description: Deletes the specified LoRa network set
      operationId: deleteLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Successfully deleted.
        "404":
          description: The specified LoRa network set does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete
    get:
      description: Returns information about the specified LoRa network set.
      operationId: getLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: The LoRa network set's detailed information.
        "404":
          description: The specified LoRa network set does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets get
  /lora_network_sets/{ns_id}/add_permission:
    post:
      description: Adds permission to allow another operator to use the network set.
      operationId: addPermissionToLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: ID of the operator to be added to the list of allowed operators.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: Permission added to the network set.
      security:
      - api_key: []
        api_token: []
      summary: Adds permission to a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets add-permission
  /lora_network_sets/{ns_id}/gateways:
    get:
      description: Returns a list of LoRa gateways that belong to the specified network
        set. If the total number of LoRa gateways does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the response.
      operationId: listGatewaysInLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: Maximum number of LoRa gateways to retrieve.
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: The ID of the last gateway retrieved on the current page. By
          specifying this parameter, you can continue to retrieve the list from the
          next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: A list of LoRa gateways.
        "404":
          description: The specified network set does not exist.
      security:
      - api_key: []
        api_token: []
      summary: List LoRa Gateways in a Network Set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_network_sets/{ns_id}/revoke_permission:
    post:
      description: Revokes a permission and removes an operator from the list of allowed
        operators in the network set.
      operationId: revokePermissionFromLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: ID of the operator to be added to the list of allowed operators.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: Permission revoked from the network set.
      security:
      - api_key: []
        api_token: []
      summary: Revokes a permission from a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets revoke-permission
  /lora_network_sets/{ns_id}/tags:
    put:
      description: Inserts/updates tags for the specified LoRa network set.
      operationId: putLoraNetworkSetTags
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: The LoRa network set's detailed information after the update.
        "404":
          description: The specified LoRa network set does not exist.
      summary: Bulk Insert or Update LoRa network set tags.
      tags:
      - LoraNetworkSet
  /lora_network_sets/{ns_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified LoRa network set.
      operationId: deleteLoraNetworkSetTag
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: Name of tag to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified LoRa network set or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete LoRa network set tag.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete-tag
  /operators:
    post:
      description: Makes a request to create a new operator. An e-mail is sent to
        the e-mail address specified in the parameters, containing a one-time token
        for verifying the operator’s registration.
      operationId: createOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOperatorsRequest'
        description: email, password
        required: true
      responses:
        "201":
          description: Operator created.
        "400":
          description: The e-mail address is already registered or the password has
            an incorrect format.
      security:
      - api_key: []
        api_token: []
      summary: Create Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator create
  /operators/{operator_id}:
    get:
      description: Returns information about the operator.
      operationId: getOperator
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperatorResponse'
          description: OK.
        "400":
          description: Invalid Operator Id
      security:
      - api_key: []
        api_token: []
      summary: Get Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator get
  /operators/{operator_id}/auth_keys:
    get:
      description: Returns the operator's AuthKey list.
      operationId: listOperatorAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Operator AuthKeys.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys list
    post:
      description: Generates an AuthKey for the operator.
      operationId: generateOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateOperatorsAuthKeyResponse'
          description: AuthKey was generated.
      security:
      - api_key: []
        api_token: []
      summary: Generate Operator AuthKey.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys generate
  /operators/{operator_id}/auth_keys/{auth_key_id}:
    delete:
      description: Deletes an AuthKey from the operator.
      operationId: deleteOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: AuthKey was deleted.
      security:
      - api_key: []
        api_token: []
      summary: Delete Operator AuthKey.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys delete
  /operators/{operator_id}/company_information:
    get:
      description: Gets the operator's company information.
      operationId: getCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get company information.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-company-information
    post:
      description: Creates the operator's company information.
      operationId: createCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: model
        required: true
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Create company information.
      tags:
      - Operator
      x-soracom-cli:
      - operator create-company-information
    put:
      description: Updates the operator's company information.
      operationId: updateCompanyInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: model
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Update company information.
      tags:
      - Operator
      x-soracom-cli:
      - operator update-company-information
  /operators/{operator_id}/contracts:
    post:
      description: Adds the operator's contract.
      operationId: addOperatorContract
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdatingRequest'
        description: model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractUpdatedResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Add Operator Contract.
      tags:
      - Operator
      x-soracom-cli:
      - operator add-contract
  /operators/{operator_id}/contracts/{contract_name}:
    delete:
      description: Deletes the operator's contract.
      operationId: deleteOperatorContract
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: contract_name
        in: path
        name: contract_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content.
      security:
      - api_key: []
        api_token: []
      summary: Delete Operator Contract.
      tags:
      - Operator
      x-soracom-cli:
      - operator delete-contract
  /operators/{operator_id}/coverage_type/{coverage_type}:
    post:
      description: Adds the operator's coverage type.
      operationId: addCoverageType
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: coverage_type
        in: path
        name: coverage_type
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Add coverage type.
      tags:
      - Operator
      x-soracom-cli:
      - operator add-coverage-type
  /operators/{operator_id}/emails:
    get:
      description: Returns a list of email addresses.
      operationId: listEmails
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/EmailsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List email addresses
      tags:
      - Email
      x-soracom-cli:
      - emails list
  /operators/{operator_id}/emails/{email_id}:
    delete:
      description: Deletes an email address.
      operationId: deleteEmail
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: email_id
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete email address
      tags:
      - Email
      x-soracom-cli:
      - emails delete
    get:
      description: Returns an email address.
      operationId: getEmail
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: email_id
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EmailsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get email address
      tags:
      - Email
      x-soracom-cli:
      - emails get
  /operators/{operator_id}/individual_information:
    get:
      description: Gets the operator's individual information.
      operationId: getIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get individual information.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-individual-information
    post:
      description: Creates the operator's individual information.
      operationId: createIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: model
        required: true
      responses:
        "201":
          description: Created.
      security:
      - api_key: []
        api_token: []
      summary: Create individual information.
      tags:
      - Operator
      x-soracom-cli:
      - operator create-individual-information
    put:
      description: Updates the operator's individual information.
      operationId: updateIndividualInformation
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: model
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Update individual information.
      tags:
      - Operator
      x-soracom-cli:
      - operator update-individual-information
  /operators/{operator_id}/mfa:
    delete:
      description: Revokes operator's MFA without backup codes.
      operationId: revokeMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Revoke Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-mfa
    get:
      description: |-
        Gets operator's MFA status. The MFA status is one of `ACTIVE`,
        `INACTIVE` or `UNCONFIRMED`.
      operationId: getMFAStatus
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Get Operator's MFA Status.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-mfa-status
    post:
      description: Enables operator's MFA. After calling this APIg, it should be verified
        by calling `Operator:verifyMFA` API.
      operationId: enableMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Enable Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator enable-mfa
  /operators/{operator_id}/mfa/verify:
    post:
      description: Verifies operator's MFA with OTP code after calling `Operator:enableMFA`
        API. MFA will not be activated unless the MFA OTP is verified with this API.  Backup
        codes are going to be returned in the response. These codes must be securely
        stored.
      operationId: verifyMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorMFAVerifyingResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Verify Operator's MFA OTP Code.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-otp
  /operators/{operator_id}/password:
    post:
      description: Updates the operator's password.
      operationId: updateOperatorPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: current password, new password
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid password.
      security:
      - api_key: []
        api_token: []
      summary: Update Operator Password.
      tags:
      - Operator
      x-soracom-cli:
      - operator update-password
  /operators/{operator_id}/roles:
    get:
      description: Returns a list of roles.
      operationId: listRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/ListRolesResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Roles.
      tags:
      - Role
      x-soracom-cli:
      - roles list
  /operators/{operator_id}/roles/{role_id}:
    delete:
      description: Deletes a role.
      operationId: deleteRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The role was deleted.
      security:
      - api_key: []
        api_token: []
      summary: Delete Role.
      tags:
      - Role
      x-soracom-cli:
      - roles delete
    get:
      description: Retrieves a role.
      operationId: getRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Role.
      tags:
      - Role
      x-soracom-cli:
      - roles get
    post:
      description: Adds a new role.
      operationId: createRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: permission
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Create Role.
      tags:
      - Role
      x-soracom-cli:
      - roles create
    put:
      description: Edits a role.
      operationId: updateRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: permission
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update Role.
      tags:
      - Role
      x-soracom-cli:
      - roles update
  /operators/{operator_id}/roles/{role_id}/users:
    get:
      description: Retrieves a list of users attached to a role.
      operationId: listRoleAttachedUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Role Attached Users.
      tags:
      - Role
      x-soracom-cli:
      - roles list-users
  /operators/{operator_id}/shipping_addresses:
    get:
      description: Returns a list of shipping addresses.
      operationId: listShippingAddresses
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List shipping addresses.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses list
    post:
      description: Creates a new shipping address.
      operationId: createShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: Shipping address was registered.
      security:
      - api_key: []
        api_token: []
      summary: Create shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses create
  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:
    delete:
      description: Deletes a shipping address.
      operationId: deleteShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses delete
    get:
      description: Returns a shipping address.
      operationId: getShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses get
    put:
      description: Updates a shipping address.
      operationId: updateShippingAddress
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: model
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses update
  /operators/{operator_id}/support/token:
    post:
      description: Returns a token for accessing the support console.
      operationId: generateSupportToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTokenResponse'
          description: OK.
        "400":
          description: Invalid Operator Id
        "403":
          description: Invalid token.
      security:
      - api_key: []
        api_token: []
      summary: Generate Token for Support Console.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-support-token
  /operators/{operator_id}/system_notifications:
    get:
      description: Returns a list of system notifications.
      operationId: listSystemNotifications
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SystemNotificationsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List system notifications
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications list
  /operators/{operator_id}/system_notifications/{type}:
    delete:
      description: Deletes a system notification.
      operationId: deleteSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - recovery
          - billing
          - support
          type: string
      responses:
        "204":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Delete system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications delete
    get:
      description: Returns a system notification.
      operationId: getSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications get
    post:
      description: Sets a system notification.
      operationId: setSystemNotification
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: system notification type
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSystemNotificationsRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Set system notification
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications set
  /operators/{operator_id}/token:
    post:
      description: Generates a new API token. If you insert the current API token
        into the header and make a request, a response is returned containing the
        new API token. You can then use the new API token in future requests.
      operationId: generateAuthToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTokenRequest'
        description: token timeout seconds
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTokenResponse'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: There was an error in the request or the specified token has
            already expired. (In the latter case, you will need to use the /auth API
            to do authentication once again.)
      security:
      - api_key: []
        api_token: []
      summary: Generate Authentication Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator generate-api-token
  /operators/{operator_id}/users:
    get:
      description: Returns a list of SAM users.
      operationId: listUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Users.
      tags:
      - User
      x-soracom-cli:
      - users list
  /operators/{operator_id}/users/{user_name}:
    delete:
      description: Deletes the SAM user.
      operationId: deleteUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The SAM user was deleted.
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM User not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete User.
      tags:
      - User
      x-soracom-cli:
      - users delete
    get:
      description: Returns a SAM user.
      operationId: getUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get User.
      tags:
      - User
      x-soracom-cli:
      - users get
    post:
      description: Adds a new SAM user.
      operationId: createUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: description
        required: true
      responses:
        "201":
          description: A new user was added.
      security:
      - api_key: []
        api_token: []
      summary: Create User.
      tags:
      - User
      x-soracom-cli:
      - users create
    put:
      description: Updates the SAM user.
      operationId: updateUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: description
        required: true
      responses:
        "200":
          description: OK
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM User not found.
      security:
      - api_key: []
        api_token: []
      summary: Update User.
      tags:
      - User
      x-soracom-cli:
      - users update
  /operators/{operator_id}/users/{user_name}/auth_keys:
    get:
      description: Returns the SAM user's AuthKey list.
      operationId: listUserAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List User AuthKeys.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys list
    post:
      description: Generates an AuthKey for the SAM user.
      operationId: generateUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GenerateUserAuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Generate AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys generate
  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:
    delete:
      description: Deletes an AuthKey from the SAM user.
      operationId: deleteUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The AuthKey was deleted.
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: AuthKey not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete User AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys delete
    get:
      description: Returns the SAM user's AuthKey.
      operationId: getUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys get
  /operators/{operator_id}/users/{user_name}/mfa:
    delete:
      description: Revoke SAM user's MFA
      operationId: revokeUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Revoke SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa revoke
    get:
      description: Get SAM user's MFA status
      operationId: getUserMFAStatus
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Get SAM user's MFA status
      tags:
      - User
      x-soracom-cli:
      - users mfa get
    post:
      description: Enable SAM user's MFA
      operationId: enableUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Enable SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa enable
  /operators/{operator_id}/users/{user_name}/mfa/verify:
    post:
      description: Verify SAM user's MFA OTP code when MFA activation phase
      operationId: verifyUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: request
        required: true
      responses:
        "204":
          description: Verified
        "400":
          description: Bad request
      security:
      - api_key: []
        api_token: []
      summary: Verify SAM user's MFA OTP code when MFA activation phase
      tags:
      - User
      x-soracom-cli:
      - users mfa verify
  /operators/{operator_id}/users/{user_name}/password:
    delete:
      description: Deletes the user's password.
      operationId: deleteUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The user's password was deleted.
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: Password registration is required.
      security:
      - api_key: []
        api_token: []
      summary: Delete Password.
      tags:
      - User
      x-soracom-cli:
      - users password delete
    get:
      description: Retrieves whether the SAM user has a password or not.
      operationId: hasUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetUserPasswordResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Has User Password.
      tags:
      - User
      x-soracom-cli:
      - users password configured
    post:
      description: Creates a password for the SAM user.
      operationId: createUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPasswordRequest'
        description: password
        required: true
      responses:
        "201":
          description: Password for the SAM user was registered.
      security:
      - api_key: []
        api_token: []
      summary: Create Password.
      tags:
      - User
      x-soracom-cli:
      - users password create
    put:
      description: Updates the password of the SAM user.
      operationId: updateUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: password
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update Password.
      tags:
      - User
      x-soracom-cli:
      - users password update
  /operators/{operator_id}/users/{user_name}/permission:
    get:
      description: Retrieves the SAM user's permissions.
      operationId: getUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetUserPermissionResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get User Permission.
      tags:
      - User
      x-soracom-cli:
      - users permissions get
    put:
      description: Updates the SAM user's permissions.
      operationId: updateUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserPermissionRequest'
        description: permission
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Update Permission to User.
      tags:
      - User
      x-soracom-cli:
      - users permissions update
  /operators/{operator_id}/users/{user_name}/roles:
    get:
      description: Retrieves a list of the user's roles.
      operationId: listUserRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List User Roles.
      tags:
      - Role
      x-soracom-cli:
      - users list-roles
    post:
      description: Attaches a role to a user.
      operationId: attachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachRoleRequest'
        description: role_id
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Attach Role to User.
      tags:
      - Role
      x-soracom-cli:
      - users attach-role
  /operators/{operator_id}/users/{user_name}/roles/{role_id}:
    delete:
      description: Detaches a role from a user.
      operationId: detachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Detach Role from User.
      tags:
      - Role
      x-soracom-cli:
      - users detach-role
  /operators/{operator_id}/users/default_permissions:
    get:
      description: Get the default permissions rule that is applied to all of the
        SAM users
      operationId: getDefaultPermissions
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetDefaultPermissionsResponse'
          description: OK
        "403":
          description: Not privileged
        "404":
          description: Operator Not Found
      security:
      - api_key: []
        api_token: []
      summary: Get the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions get
    put:
      description: Update the default permissions rule that is applied to all of the
        SAM
      operationId: updateDefaultPermissions
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsRequest'
        description: request
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Not privileged
      security:
      - api_key: []
        api_token: []
      summary: Update the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions update
  /operators/add_email_token/issue:
    post:
      description: Sends an email with a one-time token for adding an e-mail address.
      operationId: issueAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAddEmailTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Issue a token to add an email address
      tags:
      - Email
      x-soracom-cli:
      - emails issue-add-email-token
  /operators/add_email_token/verify:
    post:
      description: Verifies the token for adding email address.
      operationId: verifyAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAddEmailTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
      summary: Verify a token to add an email address
      tags:
      - Email
      x-soracom-cli:
      - emails verify-add-email-token
  /operators/mfa_revoke_token/issue:
    post:
      description: Issues a token to revoke operator's MFA. The issued token will
        be sent to the operator via email.
      operationId: issueMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAIssueRevokingTokenRequest'
        description: request
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Operator not found
      summary: Issue Operator's MFA Revoke Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      description: Verifies the one-time token which is previously issued by calling
        `/operators/mfa_revoke_token/issue` API, operator's email address, password,
        and one of the backup codes. If verified, operator's MFA is going to be revoked.
      operationId: verifyMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFARevokingTokenVerifyRequest'
        description: request
        required: true
      responses:
        "200":
          description: Revoked
        "400":
          description: Bad request
        "403":
          description: Invalid username or password
      summary: Verify Operator's MFA revoke token.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-revoke-token
  /operators/verify:
    post:
      description: Verifies the operator's registration. Called by setting as parameter
        the one-time verification token received via e-mail.
      operationId: verifyOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOperatorsRequest'
        description: token
        required: true
      responses:
        "200":
          description: Registration successful.
        "400":
          description: The one-time token is incorrect.
        "404":
          description: The one-time token has expired.
      summary: Verify Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify
  /orders:
    get:
      description: Returns a list of confirmed orders.
      operationId: listOrders
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List confirmed orders.
      tags:
      - Order
      x-soracom-cli:
      - orders list
    post:
      description: Creates a new order quotation. If the orderId is put in /confirm,
        the order is complete.
      operationId: createQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedOrderRequest'
        description: Order item list and shipping address ID
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedOrderModel'
          description: A new order quotation was created.
      security:
      - api_key: []
        api_token: []
      summary: Create Quotation.
      tags:
      - Order
      x-soracom-cli:
      - orders create
  /orders/{order_id}:
    get:
      description: Returns a confirmed order.
      operationId: getOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get confirmed order.
      tags:
      - Order
      x-soracom-cli:
      - orders get
  /orders/{order_id}/cancel:
    put:
      description: Cancels an order. If the order has already been dispatched, an
        error is returned.
      operationId: cancelOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
          description: The order was cancelled.
      security:
      - api_key: []
        api_token: []
      summary: Cancel order.
      tags:
      - Order
      x-soracom-cli:
      - orders cancel
  /orders/{order_id}/confirm:
    put:
      description: Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm order.
      tags:
      - Order
      x-soracom-cli:
      - orders confirm
  /orders/{order_id}/subscribers:
    get:
      description: List ordered subscribers
      operationId: listOrderedSubscribers
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      - description: Serial number of the last subscriber in the previous page that
          is set to response header with X-Soracom-Next-Key.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Max number of subscribers in a response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListOrderedSubscriberResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List ordered subscribers.
      tags:
      - Order
      x-soracom-cli:
      - orders list-subscribers
  /orders/{order_id}/subscribers/register:
    post:
      description: Registers the ordered SIM with the operator.
      operationId: registerOrderedSim
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
          description: Subscribers were registered for the operator.
      security:
      - api_key: []
        api_token: []
      summary: Register subscribers for operator.
      tags:
      - Order
      x-soracom-cli:
      - orders register-subscribers
  /payment_history/transactions/{payment_transaction_id}:
    get:
      description: Returns result of a payment transaction.
      operationId: getPaymentTransaction
      parameters:
      - description: Payment transaction ID
        in: path
        name: payment_transaction_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetPaymentTransactionResult'
          description: OK.
        "400":
          description: Invalid payment transaction ID.
        "404":
          description: Payment transaction result not found.
      security:
      - api_key: []
        api_token: []
      summary: Get payment transaction result.
      tags:
      - Payment
      x-soracom-cli:
      - payment-history get
  /payment_methods/current:
    get:
      description: Returns current payment methods. Detailed information is included
        in the properties.
      operationId: getPaymentMethod
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetPaymentMethodResult'
          description: OK.
        "404":
          description: Payment method not found.
      security:
      - api_key: []
        api_token: []
      summary: Get payment method information.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods get-current
  /payment_methods/current/activate:
    post:
      description: Activates a current payment method that has an error.
      operationId: activatePaymentMethod
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
          description: OK.
        "404":
          description: Payment method not found.
      security:
      - api_key: []
        api_token: []
      summary: Activate payment method.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods reactivate-current
  /payment_statements:
    get:
      description: List payment statements.
      operationId: listPaymentStatements
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListPaymentStatementResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: List payment statements.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements list
  /payment_statements/{payment_statement_id}/export:
    post:
      description: Export payment statement.
      operationId: exportPaymentStatement
      parameters:
      - description: Payment statement ID
        in: path
        name: payment_statement_id
        required: true
        schema:
          type: string
      - description: Export mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK
        "400":
          description: Invalid payment statement ID.
      security:
      - api_key: []
        api_token: []
      summary: Export payment statement.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements export
  /payment_statements/payer_information:
    get:
      description: Export payer information.
      operationId: getPayerInformation
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RegisterPayerInformationModel'
          description: OK
        "400":
          description: Payer information not found.
      security:
      - api_key: []
        api_token: []
      summary: Export payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information get
    post:
      description: Register payer information.
      operationId: registerPayerInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayerInformationModel'
        description: Payer information to be registered in the accounting specification
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Invalid payer information.
      security:
      - api_key: []
        api_token: []
      summary: Register payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information register
  /port_mappings:
    get:
      description: Returns a list of port mappings.
      operationId: listPortMappings
      parameters:
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The last Port Mapping ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PortMapping'
                type: array
          description: A list of port mappings.
      security:
      - api_key: []
        api_token: []
      summary: List Port Mapping Entries.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new port mapping.
      operationId: createPortMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortMappingRequest'
        description: Port mapping to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortMapping'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Port Mapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings create
  /port_mappings/{ip_address}/{port}:
    delete:
      description: Deletes the specified port mapping entry
      operationId: deletePortMapping
      parameters:
      - description: IP address of the target port mapping entry
        in: path
        name: ip_address
        required: true
        schema:
          type: string
      - description: Port of the target port mapping entry
        in: path
        name: port
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified port mapping entry complete.
        "404":
          description: The specified port mapping entry does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete PortMapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings delete
  /port_mappings/subscribers/{imsi}:
    get:
      description: Returns the port mapping entries for a subscriber.
      operationId: listPortMappingsForSubscriber
      parameters:
      - description: Target subscriber IMSI.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortMapping'
          description: List of port mapping entries for the subscriber.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Port Mapping entries for a subscriber.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings get
  /products:
    get:
      description: Returns a list of products.
      operationId: listProducts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListProductResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List products.
      tags:
      - Order
      x-soracom-cli:
      - products list
  /query/devices:
    get:
      description: Search SORACOM Inventory devices by query terms. It returns partial
        match results. When this API permission is allowed, it grants the authority
        to search and retrieve all SORACOM Inventory devices that includes their group
        information.
      operationId: searchDevices
      parameters:
      - description: Name to search
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Group name to search
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: SORACOM Inventory device ID to search
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: String of tag values to search
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IMSI of the device that was used on bootstrapping
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IMEI of the device that was used on bootstrapping
        explode: true
        in: query
        name: imei
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The maximum number of item to retrieve
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: The SORACOM Inventory device ID of the last Inventory device
          retrieved on the current page. By specifying this parameter, you can continue
          to retrieve the list from the next Inventory device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Type of the search ('AND searching' or 'OR searching')
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: Returns result of searching
        "400":
          description: Invalid search queries
      security:
      - api_key: []
        api_token: []
      summary: Search SORACOM Inventory devices by query
      tags:
      - Query
      x-soracom-cli:
      - query devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sigfox_devices:
    get:
      description: Search Sigfox devices by query terms. It returns partial match
        results. When this API permission is allowed, it grants the authority to search
        and retrieve all Sigfox devices that includes their group information.
      operationId: searchSigfoxDevices
      parameters:
      - description: Name to search
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Group name to search
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Sigfox device ID to search
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: String of tag values to search
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Status of sigfox devices
        in: query
        name: status
        required: false
        schema:
          default: and
          enum:
          - active
          - inactive
          - suspended
          - terminated
          - shipped
          - ready
          - inStock
          - banned
          - standby
          type: string
      - description: Registration status of sigfox devices
        in: query
        name: registration
        required: false
        schema:
          default: and
          enum:
          - notStarted
          - pending
          - success
          - failed
          type: string
      - description: The maximum number of item to retrieve
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: The Sigfox device ID of the last Sigfox device retrieved on the
          current page. By specifying this parameter, you can continue to retrieve
          the list from the next Sigfox device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Type of the search ('AND searching' or 'OR searching')
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: Returns result of searching
        "400":
          description: Invalid search queries
      security:
      - api_key: []
        api_token: []
      summary: Search Sigfox devices by query
      tags:
      - Query
      x-soracom-cli:
      - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sims:
    get:
      description: Search SIMs by query terms. It returns partial match results. When
        this API permission is allowed, it grants the authority to search and retrieve
        all SIMs that includes their group information.
      operationId: searchSims
      parameters:
      - description: Name to search
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Group name to search
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Identifier of the SIM to search
        explode: true
        in: query
        name: sim_id
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IMSI to search
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: MSISDN to search
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ICCID to search
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Serial number to search
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: String of tag values to search
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Bundles type to search
        explode: true
        in: query
        name: bundles
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Status of the session to search (ONLINE or OFFLINE)
        in: query
        name: session_status
        required: false
        schema:
          default: NA
          enum:
          - NA
          - ONLINE
          - OFFLINE
          format: string
          type: string
      - description: The maximum number of item to retrieve
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: The SIM ID of the last SIM retrieved on the current page. By
          specifying this parameter, you can continue to retrieve the list from the
          next SIM onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Type of the search ('AND searching' or 'OR searching')
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: Returns result of searching
        "400":
          description: Invalid search queries
      security:
      - api_key: []
        api_token: []
      summary: Search SIMs by query terms
      tags:
      - Query
      x-soracom-cli:
      - query sims
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      deprecated: true
      description: '(DEPRECATED: please consider to use `/query/sims` API instead)
        Search subscribers by query terms. It returns partial match results. When
        this API permission is allowed, it grants the authority to search and retrieve
        all SIMs that includes their group information.'
      operationId: searchSubscribers
      parameters:
      - description: Name to search
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Group name to search
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IMSI to search
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: MSISDN to search
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ICCID to search
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Serial number to search
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: String of tag values to search
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Subscription (e.g. `plan01s`) to search
        explode: true
        in: query
        name: subscription
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Module type (e.g. `mini`, `virtual`) to search
        explode: true
        in: query
        name: module_type
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The maximum number of item to retrieve
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Type of the search ('AND searching' or 'OR searching')
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: Returns result of searching
        "400":
          description: Invalid search queries
      security:
      - api_key: []
        api_token: []
      summary: (DEPRECATED) Search subscribers by query terms
      tags:
      - Query
      x-soracom-alternative-cli: query sims
      x-soracom-cli:
      - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      description: Search traffic volume ranking of subscribers
      operationId: searchSubscriberTrafficVolumeRanking
      parameters:
      - description: 'The beginning point of searching range (unixtime: in milliseconds)'
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - description: 'The end point of searching range (unixtime: in milliseconds)'
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
      - description: The maximum number of item to retrieve
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          type: integer
      - description: The order of ranking
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/TrafficVolumeRanking'
                type: array
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Search traffic volume ranking of subscribers
      tags:
      - Query
      x-soracom-cli:
      - query subscribers traffic-volume-ranking
      - query traffic-ranking
  /sigfox_devices:
    get:
      description: Returns a list of Sigfox devices that match certain criteria. If
        the total number of Sigfox devices does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listSigfoxDevices
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of Sigfox devices to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: A list of Sigfox devices.
      security:
      - api_key: []
        api_token: []
      summary: List Sigfox devices.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sigfox_devices/{device_id}:
    get:
      description: Returns information about the specified Sigfox device.
      operationId: getSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get
  /sigfox_devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a Sigfox device that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSigfoxDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Sends data to the specified Sigfox device. The data will be stored
        until the device sends a next uplink message. If another message destined
        for the same Sigfox device ID is already waiting to be sent, the existing
        message will be discarded, and the new message will be sent instead.
      operationId: sendDataToSigfoxDevice
      parameters:
      - description: ID of the recipient device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxData'
        description: Binary data encoded as a hexadecimal string. Length of original
          binary data must be 8 octets (16 characters when encoded as a hexadecimal
          string).
        required: true
      responses:
        "204":
          description: Data has been received by server and waiting for the recipient
            device to retrieve.
        "404":
          description: No such device found.
      security:
      - api_key: []
        api_token: []
      summary: Send data to a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices send-data
  /sigfox_devices/{device_id}/disable_termination:
    post:
      description: Disables termination of specified Sigfox device.
      operationId: disableTerminationOnSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices disable-termination
  /sigfox_devices/{device_id}/enable_termination:
    post:
      description: Enables termination of specified Sigfox device.
      operationId: enableTerminationOnSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices enable-termination
  /sigfox_devices/{device_id}/register:
    post:
      description: Registers a Sigfox device
      operationId: registerSigfoxDevice
      parameters:
      - description: Device ID of the target sigfox device to register
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxRegistrationRequest'
        description: Sigfox device registration request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: Sigfox device successfully registered
        "400":
          description: PAC code is missing
      security:
      - api_key: []
        api_token: []
      summary: Register a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices register
  /sigfox_devices/{device_id}/set_group:
    post:
      description: Sets or overwrites a group for the specified Sigfox device.
      operationId: setSigfoxDeviceGroup
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group (may include ID only).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Group of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices set-group
  /sigfox_devices/{device_id}/tags:
    put:
      description: Inserts/updates tags for the specified Sigfox device.
      operationId: putSigfoxDeviceTags
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update Sigfox device Tags.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices put-tags
  /sigfox_devices/{device_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified Sigfox device.
      operationId: deleteSigfoxDeviceTag
      parameters:
      - description: device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified Sigfox device or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Sigfox device Tag.
      tags:
      - SigfoxDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sigfox-devices delete-tag
  /sigfox_devices/{device_id}/terminate:
    post:
      description: Terminates the specified Sigfox device
      operationId: terminateSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: If the Sigfox device is deleted immediately
        in: query
        name: delete_immediately
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices terminate
  /sigfox_devices/{device_id}/unset_group:
    post:
      description: Removes the group configuration from the specified Sigfox device.
      operationId: unsetSigfoxDeviceGroup
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: The Sigfox device's detailed information after the update.
        "404":
          description: The specified Sigfox device does not exist or the Sigfox device
            does not belong to a group.
      security:
      - api_key: []
        api_token: []
      summary: Unset Group of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices unset-group
  /sims:
    get:
      description: Returns a list of SIMs that match certain criteria. If the total
        number of SIMs does not fit in one page, a URL for accessing the next page
        is returned in the 'Link' header of the response.
      operationId: listSims
      parameters:
      - description: Maximum number of SIMs to retrieve. Setting a limit does not
          guarantee the number of sims returned in the response (i.e. the response
          may contain fewer sims than the specified limit).
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The ID of the last SIM retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next SIM
          onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: A list of SIMs.
        "404":
          description: No such SIM found
      security:
      - api_key: []
        api_token: []
      summary: List SIMs.
      tags:
      - Sim
      x-soracom-cli:
      - sims list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Creates a SIM for example for use with Arc service.
      operationId: createSim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimRequest'
        description: A SIM creation request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: SIM created.
      security:
      - api_key: []
        api_token: []
      summary: Create a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims create
  /sims/{sim_id}:
    get:
      description: Obtain a SIM record identified by the sim_id
      operationId: getSim
      parameters:
      - description: Id of the target SIM
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: A SIM identified by sim_id
        "404":
          description: No such SIM found
      security:
      - api_key: []
        api_token: []
      summary: Get a SIM identified by sim_id
      tags:
      - Sim
      x-soracom-cli:
      - sims get
  /sims/{sim_id}/activate:
    post:
      description: Change status of specified SIM to active.
      operationId: activateSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Activate SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims activate
  /sims/{sim_id}/credentials/arc:
    delete:
      deprecated: true
      description: (DEPRECATED) Use this API to remove the set of credentials for
        Arc from the specified SIM. Please do not use this API.
      operationId: removeArcSimCredentials
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: The credentials for Arc have been removed.
      security:
      - api_key: []
        api_token: []
      summary: (DEPRECATED) Remove the credentials for Arc from a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims remove-arc-credentials
    post:
      deprecated: true
      description: (DEPRECATED) Use this API to attach a set of credentials to a SIM.
        Please use `renewArcSimCredentials` API instead.
      operationId: attachArcSimCredentials
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialAttachRequest'
        description: Arc credential attach request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialAttachResponse'
          description: Arc credential attach response
      security:
      - api_key: []
        api_token: []
      summary: (DEPRECATED) Attach the credentials for Arc to a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims attach-arc-credentials
    put:
      description: Use this API to attach a set of credentials to a SIM and re-initialize
        a session at once.
      operationId: renewArcSimCredentials
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialRenewRequest'
        description: Arc credential attach request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialRenewResponse'
          description: Arc credential attach response
      security:
      - api_key: []
        api_token: []
      summary: Renew the credentials for Arc to a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims renew-arc-credentials
  /sims/{sim_id}/data:
    get:
      description: Returns a list of data entries sent from a SIM that match certain
        criteria. If the total number of entries does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the response.
      operationId: getDataFromSim
      parameters:
      - description: Sim Id of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims get-data
  /sims/{sim_id}/deactivate:
    post:
      description: Change status of specified SIM to inactive.
      operationId: deactivateSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Deactivate SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims deactivate
  /sims/{sim_id}/delete_session:
    post:
      description: Deletes session for the specified SIM.
      operationId: deleteSimSession
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Session
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-session
  /sims/{sim_id}/disable_termination:
    post:
      description: Disables termination of the specified SIM.
      operationId: disableSimTermination
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable termination of the SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims disable-termination
  /sims/{sim_id}/downlink/ping:
    post:
      description: Send ICMP ping requests to a SIM.
      operationId: downlinkPingToUserEquipment
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping options
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: Result of the ping
      security:
      - api_key: []
        api_token: []
      summary: Send ping requests to a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims downlink-ping
  /sims/{sim_id}/enable_termination:
    post:
      description: Enables termination of specified SIM.
      operationId: enableSimTermination
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable termination of the SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims enable-termination
  /sims/{sim_id}/events/sessions:
    get:
      description: Returns the history of session creation, change, and deletion events
        occurred on the target SIM in the last 14 days. If the total number of events
        does not fit in one page, a URL for accessing the next page is returned in
        the `Link` header of the response.
      operationId: listSimSessionEvents
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Start time for the events search range (unixtime).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the events search range (unixtime).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Maximum number of events to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The time stamp of the last event retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next event onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: A list of session events
      security:
      - api_key: []
        api_token: []
      summary: List Session Events.
      tags:
      - Sim
      x-soracom-cli:
      - sims session-events
  /sims/{sim_id}/packet_capture_sessions:
    get:
      description: List packet capture sessions associated with the SIM
      operationId: listSimPacketCaptureSessions
      parameters:
      - description: SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: ID of the last packet capture session in the previous page
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: Max number of results in a response
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: List of packet capture sessions associated with the SIM
        "404":
          description: No such sim found
      security:
      - api_key: []
        api_token: []
      summary: List Packet Capture Sessions
      tags:
      - Sim
      x-soracom-cli:
      - sims list-packet-capture-sessions
    post:
      description: Create a packet capture session associated with the SIM
      operationId: createSimPacketCaptureSession
      parameters:
      - description: The SIM ID for which a packet capture session is created
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: A packet capture session request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: Created a new packet capture sessions associated with the SIM
        "404":
          description: No such sim found
      security:
      - api_key: []
        api_token: []
      summary: Create Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims create-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}:
    delete:
      description: Delete a packet capture session associated with the SIM
      operationId: deleteSimPacketCaptureSession
      parameters:
      - description: SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: Deleted the packet capture session associated with the SIM
        "400":
          description: Failed to delete the packet capture session associated with
            the SIM
        "404":
          description: The packet capture session associated with the SIM was not
            found
      security:
      - api_key: []
        api_token: []
      summary: Delete Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-packet-capture-session
    get:
      description: Get a packet capture sessions associated the SIM
      operationId: getSimPacketCaptureSession
      parameters:
      - description: SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: The packet capture session associated with the SIM
        "404":
          description: The packet capture session associated with the SIM was not
            found
      security:
      - api_key: []
        api_token: []
      summary: Get Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims get-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: Stop a packet capture session associated with the SIM
      operationId: stopSimPacketCaptureSession
      parameters:
      - description: SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: The stopped packet capture session associated with the SIM
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: The packet capture session associated with the SIM was not
            found
        "500":
          description: The packet capture session could not be stopped
      security:
      - api_key: []
        api_token: []
      summary: Stop SIM Packet Capture Session
      tags:
      - Sim
      x-soracom-cli:
      - sims stop-packet-capture-session
  /sims/{sim_id}/profiles/{iccid}/add_subscription:
    post:
      description: This API is used to trigger the OTA update of a new subscription
        container to a SIM profile.
      operationId: addSubscription
      parameters:
      - description: Id of the target SIM
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable:
                  description: A flag to indicate if it should cause a switch to the
                    subscription after the download has finished. If it is set to
                    true, the downloaded subscriber will be enabled immediately.
                  type: boolean
                subscription:
                  description: Name of the subscription plan
                  type: string
                  nullable: true
                type:
                  enum:
                  - virtual
                  - cellular
                  type: string
              required:
              - subscription
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimProfile'
          description: The updated SIM profile
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Adds a new subscription container to a SIM profile
      tags:
      - Sim
      x-soracom-cli:
      - sims add-subscription
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download:
    post:
      description: Cancel the download of subscription before it gets downloaded to
        the SIM. The condition is that the status of the subscription is still `shipped`
      operationId: cancelSubscriptionContainerDownload
      parameters:
      - description: SIM ID of the target subscription container.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: ICCID of the target subscription container.
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: IMSI of the target subscription container.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "404":
          description: No such SIM found
      security:
      - api_key: []
        api_token: []
      summary: Cancel subscription download to subscription container
      tags:
      - Sim
      x-soracom-cli:
      - sims cancel-subscription-container-download
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate:
    post:
      description: Terminate subscription container. Currently this API supports only
        for virtual subscribers for SORACOM Arc service.
      operationId: terminateSubscriptionContainer
      parameters:
      - description: SIM ID of the target subscription container.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: ICCID of the target subscription container.
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: IMSI of the target subscription container.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "204":
          description: The subscription container has been terminated.
      security:
      - api_key: []
        api_token: []
      summary: Terminate subscription container
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate-subscription-container
  /sims/{sim_id}/profiles/{iccid}/subscription_containers:
    get:
      description: Returns a schema listing subscription containers and containing
        a map of PLMN codes to subscription containers
      operationId: listSubscriptionContainers
      parameters:
      - description: Sim Id of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Get subscription container status.
      tags:
      - Sim
      x-soracom-cli:
      - sims list-subscription-containers
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/{containerId}/enable:
    post:
      description: Causes the identified container to become the active one on the
        Sim.
      operationId: enableSubscriptionContainer
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: Identifier of the target container
        in: path
        name: containerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Enables a subscription container.
      tags:
      - Sim
      x-soracom-cli:
      - sims enable-subscription-container
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping:
    put:
      description: Inserts/updates Country (and optionally network) to subscription
        container mapping entries in the mapping table.
      operationId: putSubscriptionContainerCountryMappingEntries
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MappingEntries'
        description: collection of country (and optionally network) to subscription
          container mapping entries
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Updates subscription container country mapping entries.
      tags:
      - Sim
      x-soracom-cli:
      - sims put-country-mapping-entries
  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc}:
    delete:
      description: Delete subscription container country mapping entries
      operationId: deleteSubscriptionContainerCountryMappingEntry
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Iccid of the target profile
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: mobile country code
        in: path
        name: mcc
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: A schema listing subscription containers and containing a map
            of PLMN codes to subscription containers.
        "400":
          description: Missing parameter
        "404":
          description: No such profile or sim found
      security:
      - api_key: []
        api_token: []
      summary: Delete subscription container mapping entries
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-country-mapping-entry
  /sims/{sim_id}/register:
    post:
      description: Registers a SIM to an operator.
      operationId: registerSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSimRequest'
        description: A SIM registration request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: Sim registration complete.
      security:
      - api_key: []
        api_token: []
      summary: Register SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims register
  /sims/{sim_id}/report_local_info:
    post:
      description: Triggers SIM to report SIM local info.
      operationId: reportSimLocalInfo
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The local info reporting has successfully been triggered. The
            subscriber information is asynchronously updated when the SIM reports
            the information back.
        "400":
          description: The specified SIM active subscriber does not support local
            info reporting feature.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Triggers SIM to report SIM local info.
      tags:
      - Sim
      x-soracom-cli:
      - sims report-local-info
  /sims/{sim_id}/send_sms:
    post:
      description: Send SMS to the specified SIM.
      operationId: sendSmsToSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: SMS forwarding request that contains message body and its encoding
          type.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS forwarding report containing message ID.
        "400":
          description: The specified SIM does not support SMS API.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to SIM
      tags:
      - Sim
      x-soracom-cli:
      - sims send-sms
  /sims/{sim_id}/sessions/arc:
    post:
      description: Use this API to re-activate a session for a virtual SIM.
      operationId: createArcSession
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSessionCreateResponse'
          description: Arc session created
        "400":
          description: Arc credentials missing
      security:
      - api_key: []
        api_token: []
      summary: Re-create an Arc session.
      tags:
      - Sim
      x-soracom-cli:
      - sims create-arc-session
  /sims/{sim_id}/set_expiry_time:
    post:
      description: Updates expiry time of the specified SIM.
      operationId: setSimExpiryTime
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 'Expiry time after the update (unixtime: in milliseconds).'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update expiry time of SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-expiry-time
  /sims/{sim_id}/set_group:
    post:
      description: Sets or overwrites a group for the specified SIM.
      operationId: setSimGroup
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        description: Group (may include ID only).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Group id of a SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-group
  /sims/{sim_id}/set_imei_lock:
    post:
      description: Set IMEI that the SIM should be locked to.
      operationId: setSimImeiLock
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: IMEI lock configuration for the SIM. (IMEI can be left blank
          for locking to the current IMEI of an online SIM.)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "400":
          description: Invalid IMEI string or SIM is offline and IMEI not specified.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set IMEI lock configuration for the SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-imei-lock
  /sims/{sim_id}/set_to_standby:
    post:
      description: Set the specified SIM to standby mode.
      operationId: setSimToStandby
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "400":
          description: The specified SIM does not support standby mode.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set SIM to standby mode.
      tags:
      - Sim
      x-soracom-cli:
      - sims set-to-standby
  /sims/{sim_id}/suspend:
    post:
      description: Suspends the specified SIM
      operationId: suspendSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Suspend SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims suspend
  /sims/{sim_id}/tags:
    put:
      description: Inserts/updates tags for the specified SIM.
      operationId: putSimTags
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk insert or update SIM tags.
      tags:
      - Sim
      x-sam-operationId: putTags
      x-soracom-cli:
      - sims put-tags
  /sims/{sim_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified SIM.
      operationId: deleteSimTag
      parameters:
      - description: Sim Id of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified subscriber or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete SIM tag.
      tags:
      - Sim
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sims delete-tag
  /sims/{sim_id}/terminate:
    post:
      description: Terminates the specified SIM.
      operationId: terminateSim
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate
  /sims/{sim_id}/unset_expiry_time:
    post:
      description: Deletes expiry time of specified SIM and changes it to indefinite.
      operationId: unsetSimExpiryTime
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Change of specified SIM's expiry time to indefinite complete.
        "404":
          description: The specified SIM does not exist or the SIM does not have an
            expiry time.
      security:
      - api_key: []
        api_token: []
      summary: Delete expiry time of the SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-expiry-time
  /sims/{sim_id}/unset_group:
    post:
      description: Removes the group configuration from the specified SIM.
      operationId: unsetSimGroup
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist or the SIM does not belong
            to a group.
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-group
  /sims/{sim_id}/unset_imei_lock:
    post:
      description: Remove any existing IMEI lock configuration for the SIM.
      operationId: unsetSimImeiLock
      parameters:
      - description: Sim Id of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Unset IMEI lock configuration for SIM.
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-imei-lock
  /sims/{sim_id}/update_speed_class:
    post:
      description: Changes the speed class of the specified SIM.
      operationId: updateSimSpeedClass
      parameters:
      - description: SIM ID of the target SIM.
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: speed_class
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: The SIM's detailed information after the update.
        "404":
          description: The specified SIM does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update SIM speed class.
      tags:
      - Sim
      x-soracom-cli:
      - sims update-speed-class
  /soralets:
    get:
      description: Returns a list of Soralets.
      operationId: listSoralets
      parameters:
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: The maximum number of items in a response
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The identifier of the last Soralet retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next Soralet onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/Soralet'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List Soralets.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a Soralet.
      operationId: createSoralet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSoraletRequest'
        description: request
        required: true
      responses:
        "201":
          description: Successfully created a new Soralet.
        "400":
          description: The specified Soralet already exists or the specified soralet_id
            was invalid.
      security:
      - api_key: []
        api_token: []
      summary: Create a Soralet.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets create
  /soralets/{soralet_id}:
    delete:
      description: Delete the specified Soralet.
      operationId: deleteSoralet
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Successfully deleted the specified Soralet.
        "404":
          description: The specified Soralet is not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete Soralet.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete
    get:
      description: Returns a Soralet.
      operationId: getSoralet
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Soralet'
          description: OK.
        "404":
          description: The specified Soralet is not found.
      security:
      - api_key: []
        api_token: []
      summary: Get a Soralet.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get
  /soralets/{soralet_id}/logs:
    get:
      description: Returns a list of log messages from the specified Soralet.
      operationId: getSoraletLogs
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: The maximum number of items in a response.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The identifier of the last log message retrieved on the current
          page. By specifying this parameter, you can continue to retrieve the list
          from the next log message onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletLog'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get log messages from Soralet.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get-logs
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /soralets/{soralet_id}/test:
    post:
      description: Execute the specified Soralet with the specified arguments.
      operationId: testSoralet
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSoraletRequest'
        description: request
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ExecuteSoraletResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Execute Soralet with arguments.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets test
      - soralets exec
  /soralets/{soralet_id}/versions:
    get:
      description: Returns a list of Soralet versions.
      operationId: listSoraletVersions
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Sort order
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: The maximum number of items in a response.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The identifier of the last version retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next version onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletVersion'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List versions of Soralet.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list-versions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Upload code and create a new version.
      operationId: uploadSoraletCode
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Content type of the file to upload
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SoraletVersion'
          description: Successfully created a new version.
      security:
      - api_key: []
        api_token: []
      summary: Upload code and create a new version.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets upload
  /soralets/{soralet_id}/versions/{version}:
    delete:
      description: Delete the specified Soralet version.
      operationId: deleteSoraletVersion
      parameters:
      - description: The identifier of Soralet.
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: Soralet version.
        in: path
        name: version
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Successfully deleted the specified Soralet version.
        "404":
          description: The specified Soralet version is not found.
      security:
      - api_key: []
        api_token: []
      summary: Delete a Soralet version.
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete-version
  /stats/air/operators/{operator_id}/export:
    post:
      description: Retrieves a file containing the usage report of all subscribers
        for the specified operator. The report data range is specified with from,
        to in unixtime. The report contains monthly data. The file output destination
        is AWS S3. The file output format is CSV.
      operationId: exportAirStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: export time period
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Air Usage Report of All Subscribers.
      tags:
      - Stats
      x-soracom-cli:
      - stats air export
  /stats/air/sims/{simId}:
    get:
      description: Retrieves the usage report for the SIM specified by the simId.
      operationId: getAirStatsOfSim
      parameters:
      - description: SIM ID
        in: path
        name: simId
        required: true
        schema:
          type: string
      - description: Start time in unixtime for the aggregate data.
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: End time in unixtime for the aggregate data.
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: Units of aggregate data. For minutes, the interval is around
          5 minutes.
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Air Usage Report of SIM.
      tags:
      - Stats
      x-soracom-cli:
      - stats air sims get
  /stats/air/subscribers/{imsi}:
    get:
      description: Retrieves the usage report for the subscriber specified by the
        IMSI.
      operationId: getAirStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: Start time in unixtime for the aggregate data.
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: End time in unixtime for the aggregate data.
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: Units of aggregate data. For minutes, the interval is around
          5 minutes.
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Air Usage Report of Subscriber.
      tags:
      - Stats
      x-soracom-cli:
      - stats air get
  /stats/beam/operators/{operator_id}/export:
    post:
      description: Retrieves a file containing the usage report of all subscribers
        for the specified operator. The report data range is specified with from,
        to in unixtime. The report contains monthly data. The file output destination
        is AWS S3. The file output format is CSV.
      operationId: exportBeamStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: export time period
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Export Beam Usage Report of All Subscribers.
      tags:
      - Stats
      x-soracom-cli:
      - stats beam export
  /stats/beam/subscribers/{imsi}:
    get:
      description: Retrieves the Soracom Beam usage report for the subscriber specified
        by the IMSI.
      operationId: getBeamStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: Start time in unixtime for the aggregate data.
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: End time in unixtime for the aggregate data.
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: Units of aggregate data. For minutes, the interval is around
          5 minutes.
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BeamStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Beam Usage Report of Subscriber.
      tags:
      - Stats
      x-soracom-cli:
      - stats beam get
  /stats/harvest/operators/{operator_id}:
    get:
      description: Retrieves the SORACOM Harvest usage report for the operator.
      operationId: getHarvestExportedDataStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: Year/Month in 'YYYYMM' format.
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get 'Harvest usage report' for the specified operator.
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest get
  /stats/napter/audit_logs:
    get:
      description: Get Napter audit logs' monthly exported data stats
      operationId: getNapterAuditLogsExportedDataStats
      parameters:
      - description: Year/Month in 'YYYYMM' format.
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapterAuditLogsExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Get Napter audit logs' monthly exported data stats
      tags:
      - Stats
      x-soracom-cli:
      - stats napter audit-logs get
  /subscribers:
    get:
      description: Returns a list of subscribers that match certain criteria. If the
        total number of subscribers does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listSubscribers
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 'Status for filtering the search. Can specify multiple values
          delimited by `|`. Valid values include: `active`, `inactive`, `ready`, `instock`,
          `shipped`, `suspended`, and `terminated`.'
        in: query
        name: status_filter
        required: false
        schema:
          type: string
      - description: 'Speed class for filtering the search. Can specify multiple values
          delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`,
          `s1.fast`'
        in: query
        name: speed_class_filter
        required: false
        schema:
          type: string
      - description: Serial number for filtering the search. Can specify multiple
          values delimited by `|`. Returns subscribers with serial number starting
          with the specified value(s).
        in: query
        name: serial_number_filter
        required: false
        schema:
          type: string
      - description: Maximum number of subscribers to retrieve. Setting a limit does
          not guarantee the number of subscribers returned in the response (i.e. the
          response may contain fewer subscribers than the specified limit).
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: A list of subscribers.
      security:
      - api_key: []
        api_token: []
      summary: List Subscribers.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}:
    get:
      description: Returns information about the specified subscriber.
      operationId: getSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers get
  /subscribers/{imsi}/activate:
    post:
      description: Activates status of specified subscriber.
      operationId: activateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Activate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers activate
  /subscribers/{imsi}/bundles:
    put:
      description: Sets bundles to the specified subscriber.
      operationId: putBundles
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Array of bundles to be set.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Bundles to Subscriber.
      tags:
      - Subscriber
      x-sam-operationId: putBundles
      x-soracom-cli:
      - subscribers put-bundles
  /subscribers/{imsi}/data:
    get:
      description: Returns a list of data entries sent from a subscriber that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSubscriber
      parameters:
      - description: IMSI of the target subscriber that generated data entries.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: A list of data entries.
      security:
      - api_key: []
        api_token: []
      summary: Get data sent from a subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - data get
      - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/deactivate:
    post:
      description: Deactivates specified subscriber.
      operationId: deactivateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Deactivate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers deactivate
  /subscribers/{imsi}/delete_session:
    post:
      description: Deletes session for the specified subscriber.
      operationId: deleteSubscriberSession
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Session
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-session
  /subscribers/{imsi}/disable_termination:
    post:
      description: Disables termination of specified subscriber.
      operationId: disableTermination
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Disable Termination of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers disable-termination
  /subscribers/{imsi}/downlink/ping:
    post:
      description: Send ICMP ping requests to a subscriber.
      operationId: sendSubscriberDownlinkPing
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping options
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: Result of the ping
      security:
      - api_key: []
        api_token: []
      summary: Send ping requests to a subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers downlink-ping
  /subscribers/{imsi}/enable_termination:
    post:
      description: Enables termination of specified subscriber.
      operationId: enableTermination
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Enable Termination of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers enable-termination
  /subscribers/{imsi}/events/sessions:
    get:
      description: Returns the event history for the specified subscriber, including
        session creation, change, and deletion. If the total number of events does
        not fit in one page, a URL for accessing the next page is returned in the
        `Link` header of the response.
      operationId: listSessionEvents
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: Start time for the events search range (unixtime).
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: End time for the events search range (unixtime).
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: Maximum number of events to retrieve.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The time stamp of the last event retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next event onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: A list of session events
      security:
      - api_key: []
        api_token: []
      summary: List Session Events.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/register:
    post:
      description: Registers a subscriber.
      operationId: registerSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSubscribersRequest'
        description: subscriber
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Subscriber registration complete.
      security:
      - api_key: []
        api_token: []
      summary: Register Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers register
  /subscribers/{imsi}/report_local_info:
    post:
      description: Triggers Subscriber to report SIM local info.
      operationId: reportLocalInfo
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The local info reporting has successfully been triggered. The
            subscriber information is asynchronously updated when the SIM reports
            the information back.
        "400":
          description: The specified subscriber does not support local info reporting
            feature.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Triggers Subscriber to report SIM local info.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers report-local-info
  /subscribers/{imsi}/send_sms:
    post:
      description: Send SMS to the specified subscriber.
      operationId: sendSms
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: SMS forwarding request that contains message body and its encoding
          type.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS forwarding report containing message ID.
        "400":
          description: The specified subscriber does not support SMS API.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms
  /subscribers/{imsi}/set_expiry_time:
    post:
      description: Updates expiry time of specified subscriber.
      operationId: setExpiryTime
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 'Expiry time after the update (unixtime: in milliseconds).'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update Expiry Time of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-expiry-time
  /subscribers/{imsi}/set_group:
    post:
      description: Sets or overwrites a group for the specified subscriber.
      operationId: setGroup
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        description: Group (may include ID only).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Group to Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-group
  /subscribers/{imsi}/set_imei_lock:
    post:
      description: Set IMEI that the subscriber should be locked to.
      operationId: setImeiLock
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: IMEI lock configuration for the subscriber. (IMEI can be left
          blank for locking to the current IMEI of an online subscriber.)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "400":
          description: Invalid IMEI string or subscriber is offline and IMEI not specified.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-imei-lock
  /subscribers/{imsi}/set_to_standby:
    post:
      description: Set the specified subscriber to standby mode.
      operationId: setSubscriberToStandby
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "400":
          description: The specified subscriber does not support standby mode.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Set Subscriber to standby mode.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-to-standby
  /subscribers/{imsi}/suspend:
    post:
      description: Suspends the specified subscriber
      operationId: suspendSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Suspend Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers suspend
  /subscribers/{imsi}/tags:
    put:
      description: Inserts/updates tags for the specified subscriber.
      operationId: putSubscriberTags
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: Array of tags to be inserted/updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Bulk Insert or Update Subscriber Tags.
      tags:
      - Subscriber
      x-sam-operationId: putTags
      x-soracom-cli:
      - subscribers put-tags
  /subscribers/{imsi}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified subscriber.
      operationId: deleteSubscriberTag
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified subscriber or the tag does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Subscriber Tag.
      tags:
      - Subscriber
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - subscribers delete-tag
  /subscribers/{imsi}/terminate:
    post:
      description: Terminates the specified subscriber
      operationId: terminateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers terminate
  /subscribers/{imsi}/unset_expiry_time:
    post:
      description: Deletes expiry time of specified subscriber and changes it to indefinite.
      operationId: unsetExpiryTime
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Change of specified subscriber's expiry time to indefinite
            complete.
        "404":
          description: The specified subscriber does not exist or the subscriber does
            not have an expiry time.
      security:
      - api_key: []
        api_token: []
      summary: Delete Expiry Time of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-expiry-time
  /subscribers/{imsi}/unset_group:
    post:
      description: Removes the group configuration from the specified subscriber.
      operationId: unsetGroup
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist or the subscriber does
            not belong to a group.
      security:
      - api_key: []
        api_token: []
      summary: Unset Group to Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-group
  /subscribers/{imsi}/unset_imei_lock:
    post:
      description: Remove any existing IMEI lock configuration for the subscriber.
      operationId: unsetImeiLock
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Unset IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-imei-lock
  /subscribers/{imsi}/update_speed_class:
    post:
      description: Changes the speed class of the specified subscriber.
      operationId: updateSpeedClass
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: speed_class
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: The subscriber's detailed information after the update.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Update Subscriber speed class.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers update-speed-class
  /subscribers/export:
    post:
      description: Export all subscribers as a CSV file.
      operationId: exportSubscribers
      parameters:
      - description: export mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          default: sync
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: Where to export subscribers.
      security:
      - api_key: []
        api_token: []
      summary: Export all subscribers.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers export
  /subscribers/msisdn/{msisdn}/send_sms:
    post:
      description: Send SMS to a subscriber specified with MSISDN.
      operationId: sendSmsByMsisdn
      parameters:
      - description: MSISDN of the target subscriber.
        in: path
        name: msisdn
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: SMS forwarding request that contains message body and its encoding
          type.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS forwarding report containing message ID.
        "400":
          description: The specified subscriber does not support SMS API.
        "404":
          description: The specified subscriber does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Send SMS to Subscriber by MSISDN
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/{token}:
    delete:
      description: Deletes the subscriber's inter-operator control transfer token,
        and cancels the control transfer.
      operationId: deleteSubscriberTransferToken
      parameters:
      - description: token
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion implemented.
        "404":
          description: The token does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete Subscribers Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-transfer-token
  /subscribers/transfer_token/issue:
    post:
      description: Sends the subscriber's inter-operator control transfer token to
        the control destination operator.
      operationId: issueSubscriberTransferToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueSubscriberTransferTokenRequest'
        description: Destination operator's email address, Operator ID, transferring
          IMSI
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueSubscriberTransferTokenResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: Issue Subscribers Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      description: Verifies the subscriber's control transfer token, and executes
        the transfer. This API is called from the operator of the control destination.
      operationId: verifySubscriberTransferToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySubscriberTransferTokenRequest'
        description: Subscriber transfer token that noticed via email.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifySubscriberTransferTokenResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Verify Subscriber Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers verify-transfer-token
  /virtual_private_gateways:
    get:
      description: Returns a list of VPGs.
      operationId: listVirtualPrivateGateways
      parameters:
      - description: Tag name of the VPG. Filters through all VPGs that exactly match
          the tag name. When tag_name is specified, tag_value is required.
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Tag value of the VPGs.
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: Tag match mode.
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The last group ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next VPG
          onward.
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualPrivateGateway'
                type: array
          description: List of VPGs.
      security:
      - api_key: []
        api_token: []
      summary: List Virtual Private Gateways.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create new VPG.
      operationId: createVirtualPrivateGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualPrivateGatewayRequest'
        description: Request containing information for the new VPG to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create
  /virtual_private_gateways/{vpg_id}:
    get:
      description: Retrieves information about the specified VPG.
      operationId: getVirtualPrivateGateway
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The specified VPG.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Get Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get
  /virtual_private_gateways/{vpg_id}/gate/close:
    post:
      description: Close SORACOM Gate on the specified VPG.
      operationId: closeGate
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: SORACOM Gate is successfully closed on the VPG.
        "400":
          description: Client side error.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Close SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg close-gate
  /virtual_private_gateways/{vpg_id}/gate/open:
    post:
      description: Open SORACOM Gate on the specified VPG.
      operationId: openGate
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenGateRequest'
        description: Optional configuration parameters for Gate.
      responses:
        "200":
          description: SORACOM Gate is successfully opened on the VPG.
        "400":
          description: Client side error.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Open SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg open-gate
  /virtual_private_gateways/{vpg_id}/gate/peers:
    get:
      description: List Gate peers registered in the Virtual Private Gateway
      operationId: listGatePeers
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GatePeer'
                type: array
          description: List of peers registered in the VPG.
        "400":
          description: Client side error in the request.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: List VPG Gate peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-gate-peers
    post:
      description: Register a host as a gate peer in the Virtual Private Gateway
      operationId: registerGatePeer
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterGatePeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatePeer'
          description: Gate peer is successfully registered.
        "400":
          description: Client side error in the request.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Register VPG Gate peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg register-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:
    delete:
      description: Unregister a gate peer from the Virtual Private Gateway
      operationId: unregisterGatePeer
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: ID of the target node.
        in: path
        name: outer_ip_address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Successfully deregistered the Gate peer.
        "400":
          description: Error in the request.
        "404":
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Unregister VPG gate peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unregister-gate-peer
  /virtual_private_gateways/{vpg_id}/ip_address_map:
    get:
      description: Describes the list of IP address map entries in the Virtual Private
        Gateway
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpAddressMapEntry'
                type: array
          description: Successfully fetched the list of IP address map entries.
        "400":
          description: Error in the request.
        "404":
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
        api_token: []
      summary: List VPG IP address map entries
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-ip-address-map-entries
    post:
      description: Puts an entry in VPG IP address map.
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIpAddressMapEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressMapEntry'
          description: Successfully put an entry for the specified key and IP address.
        "400":
          description: Error in the request.
        "404":
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Put an entry in VPG IP address map
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:
    delete:
      description: Deletes an entry in VPG IP address map.
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Target key to remove.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressMapEntry'
          description: Successfully deleted the entry from the VPG IP address map.
        "400":
          description: Error in the request.
        "404":
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:
    post:
      description: Add node in the list of Junction mirroring peers
      operationId: createMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionMirroringPeer'
        description: Mirroring peer
        required: true
      responses:
        "201":
          description: Mirroring peer added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Add node in the list of Junction mirroring peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:
    delete:
      description: Remove peer from the list of Junction mirroring peers
      operationId: deleteMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: IP address of mirroring peer
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Mirroring peer removed
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Remove peer from the list of Junction mirroring peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-mirroring-peer
    put:
      description: Update a Junction mirroring peer
      operationId: updateMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Mirroring peer IP address
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AttributeUpdate'
              type: array
        description: List of attributes to update
        required: true
      responses:
        "200":
          description: Mirroring peer updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Update a Junction mirroring peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/set_inspection:
    post:
      description: Set configuration for Junction inspection feature
      operationId: setInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionInspectionConfiguration'
        description: Inspection configuration
        required: true
      responses:
        "200":
          description: Configuration added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Set configuration for Junction inspection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-inspection
  /virtual_private_gateways/{vpg_id}/junction/set_redirection:
    post:
      description: Set configuration for Junction redirection feature
      operationId: setRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionRedirectionConfiguration'
        description: Redirection configuration
        required: true
      responses:
        "200":
          description: Configuration added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Set configuration for Junction redirection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-redirection
  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:
    post:
      description: Unset configuration for Junction inspection feature
      operationId: unsetInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Configuration unset
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Unset configuration for Junction inspection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-inspection
  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:
    post:
      description: Unset configuration for Junction redirection feature
      operationId: unsetRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Configuration unset
        "404":
          description: No such VPG found
      security:
      - api_key: []
        api_token: []
      summary: Unset configuration for Junction redirection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-redirection
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions:
    get:
      description: List packet capture sessions associated with the VPG
      operationId: listPacketCaptureSessions
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: ID of the last group in the previous page
        in: query
        name: last_evaluated_key
        required: false
        schema:
          default: "null"
          type: string
      - description: Max number of results in a response
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: List of packet capture sessions associated with the VPG
        "400":
          description: Failed to list packet capture sessions associated with the
            VPG
      security:
      - api_key: []
        api_token: []
      summary: List Packet Capture Sessions
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-packet-capture-sessions
    post:
      description: Create a packet capture sessions associated the VPG
      operationId: createPacketCaptureSession
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: A packet capture session request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: Created a new packet capture sessions associated with the VPG
        "400":
          description: Failed to create a packet capture sessions associated with
            the VPG
      security:
      - api_key: []
        api_token: []
      summary: Create Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}:
    delete:
      description: Delete a packet capture sessions associated the VPG
      operationId: deletePacketCaptureSession
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: Deleted the packet capture sessions associated with the VPG
        "400":
          description: Failed to delete the packet capture sessions associated with
            the VPG was not found
        "404":
          description: The packet capture sessions associated with the VPG was not
            found
      security:
      - api_key: []
        api_token: []
      summary: Delete Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-packet-capture-session
    get:
      description: Get a packet capture sessions associated the VPG
      operationId: getPacketCaptureSession
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: The packet capture sessions associated with the VPG
        "404":
          description: The packet capture sessions associated with the VPG was not
            found
      security:
      - api_key: []
        api_token: []
      summary: Get Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: Stop a packet capture session associated with the VPG
      operationId: stopPacketCaptureSession
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Packet capture session ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: The stopped packet capture session associated with the VPG
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: The packet capture session associated with the VPG was not
            found
        "500":
          description: The packet capture session could not be stopped
      security:
      - api_key: []
        api_token: []
      summary: Stop Packet Capture Session
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg stop-packet-capture-session
  /virtual_private_gateways/{vpg_id}/set_routing_filter:
    post:
      description: Sets Virtual Private Gateway outbound routing filter.
      operationId: setRoutingFilter
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoutingFilterEntry'
              type: array
        description: List of routing filter entries
        required: true
      responses:
        "200":
          description: The routing filter is successfully configured.
        "400":
          description: Invalid argument is given
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Sets Virtual Private Gateway outbound routing filter.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-routing-filter
  /virtual_private_gateways/{vpg_id}/terminate:
    post:
      description: Terminates the specified VPG.
      operationId: terminateVirtualPrivateGateway
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Termination of specified VPG started.
        "400":
          description: There is a reason why the specified VPG cannot be terminated.
        "404":
          description: The specified VPG does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Terminate Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg terminate
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:
    post:
      description: Creates a VPC peering connection for the specified VPG.
      operationId: createVpcPeeringConnection
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
        description: VPC peering connection to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
          description: The created VPC peering connection.
        "404":
          description: The specified VPC peering connection does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Create VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-vpc-peering-connection
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:
    delete:
      description: Deletes the specified VPC peering connection.
      operationId: deleteVpcPeeringConnection
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: VPC peering connection ID to be deleted.
        in: path
        name: pcx_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deletion of specified VPC peering connection complete.
        "404":
          description: The specified VPC peering connection does not exist.
      security:
      - api_key: []
        api_token: []
      summary: Delete VPC Peering Connection.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      description: Returns a list of contracted long term discounts.
      operationId: listVolumeDiscounts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ListVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List long term discounts.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts list
    post:
      description: Creates a new long term discount quotation. If the orderId is put
        in /confirm, the order is complete. (Currently, long term discount is only
        applied to plan-D, plan-K)
      operationId: createVolumeDiscountQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedVolumeDiscountRequest'
        description: Long term discount contract details
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EstimatedVolumeDiscountModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: Create long term discount quotation.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts create
  /volume_discounts/{contract_id}:
    get:
      description: Returns contracted long term discount.
      operationId: getVolumeDiscount
      parameters:
      - description: contract_id
        in: path
        name: contract_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
        "400":
          description: Long term discount not found.
      security:
      - api_key: []
        api_token: []
      summary: Get long term discount.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts get
  /volume_discounts/{order_id}/confirm:
    put:
      description: Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmVolumeDiscountOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Confirm long term discount order.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts confirm
  /volume_discounts/available_discounts:
    get:
      description: Returns a list of available long term discounts.
      operationId: listAvailableDiscounts
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AvailableLongTermDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: List available long term discounts.
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts available-discounts
components:
  examples:
    APITokenCredentials:
      value:
        credentials:
          token: sample_token
        type: api-token-credentials
    AWSCredentials:
      value:
        credentials:
          accessKeyId: sampleAccessKeyId
          secretAccessKey: sampleSecret
        type: aws-credentials
    AzureCredentials:
      value:
        credentials:
          key: your_key
          policyName: your_policy_name
        type: azure-credentials
    AzureIoTCredentials:
      value:
        credentials:
          sharedAccessKey: sample_access_key
          sharedAccessKeyName: sample
        type: azureIoT-credentials
    EsrijCredentials:
      value:
        credentials:
          refererUrl: https://example.com
        type: esrij-credentials
    GoogleIoTCredentials:
      value:
        credentials:
          algorithm: RS256
          deviceId: sample_device
          privateKey: your_private_key
          projectId: sample_projectID
          region: asia-east1
          registryId: sample
        type: googleIoT-credentials
    GoogleServiceAccountJson:
      value:
        credentials:
          credentials: '{"sample": "value"}'
        type: google-service-account-json
    IAMRoleCredentials:
      value:
        credentials:
          externalId: your_external_id
          roleArn: sample_role
        type: aws-iam-role-credentials
    InfoteriaPlatioCredentials:
      value:
        credentials:
          secretToken: sample_secret
          tokenId: sample_token
        type: infoteria-platio-credentials
    KiiThingifCredentials:
      value:
        credentials:
          app_id: sample_app
          app_key: sample_key
          client_id: sample_id
          client_secret: sample_secret
        type: kii-thingif-credentials
    LandlogCredentials:
      value:
        credentials:
          client_id: sample_id
          client_secret: sample_secret
        type: landlog-credentials
    MmcloudCredentials:
      value:
        credentials:
          commandcode: sample_code
          customerid: sample_customer
          machineid: sample_id
          machineidtype: sample_type
        type: mmcloud-credentials
    MockmockDatarecorderCredentials:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: mockmock-datarecorder-credentials
    MotionboardCredentials:
      value:
        credentials:
          authkey: sample_auth
          template: temple_temp
          tenant: sample_tenant
        type: motionboard-credentials
    OptimCloudCredentials:
      value:
        credentials:
          client_id: sample_client
          client_secret: sample_secret
        type: optim-cloud-IoT-OS-credentials
    PreSharedKey:
      value:
        credentials:
          key: sample_key
        type: psk
    PubnubCredentials:
      value:
        credentials:
          pubKey: sample
          subKey: sample_sub
        type: pubnub-credentials
    SensorcorpusCredentials:
      value:
        credentials:
          session_code: sample_code
        type: sensorcorpus-credentials
    UsernamePasswordCredentials:
      value:
        credentials:
          password: sample_pass
          username: sample_user
        type: username-password-credentials
    WatsonIoTCredentials:
      value:
        credentials:
          authToken: sample_token
          deviceId: sample_id
          deviceType: sample_type
        type: watsonIoT-credentials
    X509Certificate:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: x509
  requestBodies:
    CreateAndUpdateCredentialsModel:
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
      description: credentials
      required: true
    DeviceObjectModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
        application/xml:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
      description: Device object model definition in either XML or JSON format.
      required: true
    ExpiryTime:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpiryTime'
      description: 'Expiry time after the update (unixtime: in milliseconds).'
      required: true
    Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
      description: Group (may include ID only).
      required: true
    LagoonPlanChangingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LagoonPlanChangingRequest'
      description: req
      required: true
    MFAAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MFAAuthenticationRequest'
      description: request
      required: true
  schemas:
    APIAuditLogEntry:
      properties:
        apiKind:
          description: The kind of the API (e.g. `/v1/auth`).
          type: string
        operatorId:
          description: The operator ID that called the API.
          type: string
        remoteIpAddress:
          description: The IP address of the caller.
          type: string
        requestPath:
          description: The request path that has been called.
          type: string
        requestedTimeEpochMs:
          description: The timestamp of the API call. This can be used as the `last_evaluated_key`
            request parameter, for pagination.
          format: int64
          type: integer
        userName:
          description: The SAM username that called the API, if this parameter is
            empty, it means the caller user is the root user.
          type: string
      type: object
    APICallError:
      properties:
        errorMessage:
          $ref: '#/components/schemas/APICallErrorMessage'
        httpStatus:
          format: int32
          type: integer
      type: object
    APICallErrorMessage:
      properties:
        code:
          description: エラーコード
          type: string
        message:
          description: エラーメッセージ。リクエスト時にX-Soracom-Langヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。
          type: string
      required:
      - code
      - message
      type: object
    ActionConfig:
      properties:
        properties:
          $ref: '#/components/schemas/ActionConfigProperty'
        type:
          enum:
          - ChangeSpeedClassAction
          - InvokeAWSLambdaAction
          - ExecuteWebRequestAction
          - SendMailAction
          - SendMailToOperatorAction
          - ActivationAction
          - DeactivationAction
          - StandbyAction
          - SuspendAction
          type: string
      required:
      - properties
      - type
      type: object
    ActionConfigProperty:
      properties:
        accessKey:
          description: Only for InvokeAWSLambdaAction
          type: string
        body:
          description: Only for ExecuteWebRequestAction (Optional)
          type: string
        contentType:
          description: Only for ExecuteWebRequestAction
          type: string
        endpoint:
          description: Only for InvokeAWSLambdaAction
          type: string
        executionDateTimeConst:
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        executionOffsetMinutes:
          description: Run in the minutes after the timing of executionDateTimeConst
          type: string
        functionName:
          description: Only for InvokeAWSLambdaAction
          type: string
        headers:
          description: Only for ExecuteWebRequestAction (Optional)
          type: object
        httpMethod:
          description: Only for ExecuteWebRequestAction
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          type: string
        message:
          description: Only for SendMailAction, SendMailToOperatorAction
          type: string
        parameter1:
          description: Only for InvokeAWSLambdaAction
          type: string
        parameter2:
          description: Only for InvokeAWSLambdaAction
          type: string
        parameter3:
          description: Only for InvokeAWSLambdaAction
          type: string
        parameter4:
          description: Only for InvokeAWSLambdaAction
          type: string
        parameter5:
          description: Only for InvokeAWSLambdaAction
          type: string
        secretAccessKey:
          description: Only for InvokeAWSLambdaAction
          type: string
        speedClass:
          description: Only for ChangeSpeedClassAction
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          type: string
        title:
          description: Only for SendMailAction, SendMailToOperatorAction
          type: string
        to:
          description: Only for SendMailAction
          type: string
        url:
          description: Access URL and parameters. Only for ExecuteWebRequestAction
          type: string
      required:
      - executionDateTimeConst
      type: object
    AirStatsResponse:
      properties:
        dataTrafficStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/DataTrafficStats'
          type: object
        date:
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    ArcCredentialAttachRequest:
      properties:
        arcClientPeerPublicKey:
          description: if this parameter is missing, the sever generates keypair
          type: string
      type: object
    ArcCredentialAttachResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcCredentialRenewRequest:
      properties:
        arcClientPeerPublicKey:
          description: if this parameter is missing, the sever generates keypair
          type: string
      type: object
    ArcCredentialRenewResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcSessionCreateResponse:
      properties:
        arcAllowedIPs:
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          type: string
        arcServerPeerPublicKey:
          type: string
      type: object
    ArcSessionStatus:
      properties:
        arcAllowedIPs:
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          type: string
        arcServerPeerPublicKey:
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        lastUpdatedAt:
          format: int64
          type: integer
        vpgId:
          type: string
      type: object
    AttachRoleRequest:
      properties:
        roleId:
          type: string
      type: object
    AttributeUpdate:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    AuthKeyResponse:
      properties:
        authKeyId:
          type: string
        createDateTime:
          format: int64
          type: integer
        lastUsedDateTime:
          format: int64
          type: integer
      type: object
    AuthRequest:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
        email:
          type: string
        mfaOTPCode:
          type: string
        operatorId:
          type: string
        password:
          type: string
        tokenTimeoutSeconds:
          default: 86400
          format: int64
          maximum: 172800
          type: integer
        userName:
          type: string
      type: object
    AuthResponse:
      properties:
        apiKey:
          type: string
        operatorId:
          type: string
        token:
          type: string
        userName:
          type: string
      type: object
    AvailableLongTermDiscountModel:
      properties:
        contractTermMonth:
          default: 12
          description: Contract months
          format: int32
          type: integer
        unitPrice:
          description: Unit price
          format: double
          type: number
        volumeDiscountPaymentType:
          description: Payment type
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: Long term discount type
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    AvailableLongTermDiscountResponse:
      properties:
        availableLongTermDiscounts:
          description: List of available long term discounts
          items:
            $ref: '#/components/schemas/AvailableLongTermDiscountModel'
          type: array
      type: object
    BeamStatsResponse:
      properties:
        beamStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomBeamStats'
          type: object
        date:
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    Capabilities:
      properties:
        data:
          type: boolean
        sms:
          type: boolean
      type: object
    Cell:
      properties:
        ci:
          description: The Cell Identity (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.3)
          type: integer
        eci:
          description: The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value
            represented in decimal form as a long. (See 3GPP TS 23.003 19.6)
          type: integer
        lac:
          description: The Location Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.1)
          type: integer
        mcc:
          description: The Mobile Country Code, a 3 digit number.
          type: integer
        mnc:
          description: The Mobile Network Code, a 2 or 3 digit number. If the value
            returned is only 1 digit in length, then you should prepend the value
            with a leading zero.
          type: integer
        rac:
          description: The Routing Area Code (for 2G and 3G networks), an 8 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.2)
          type: integer
        radioType:
          description: The Radio Access Technology or type of network that the device
            is connected to. Possible values are "gsm" for 2G or 3G networks, or "lte"
            for LTE networks. Unfortunately, it is not possible to differentiate 2G
            from 3G, or LTE from LTE Cat-M1.
          type: string
        sac:
          description: The Service Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 12.5)
          type: integer
        tac:
          description: The Tracking Area Code (for LTE networks), a 16 bit value represented
            in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3)
          type: integer
      type: object
    CellIdentifier:
      properties:
        cid:
          type: string
        eci:
          type: string
        ecid:
          type: string
        identifier:
          description: optionally link the result to the request
          type: string
        lac:
          type: string
        mcc:
          type: string
        mnc:
          type: string
        tac:
          type: string
      type: object
    CellLocation:
      properties:
        avg_strength:
          description: Average signal strength from all observations for the cell
            network. This is an integer value, in dBm.
          format: int32
          type: integer
        created:
          description: Timestamp of the time when this record was first created.
          format: date-time
          type: string
        exact:
          description: Whether or not this cell is a position estimate based on observations
            subject to change in the future (`0`) or an exact location entered from
            a knowledgeable source (`1`).
          format: int32
          type: integer
        lat:
          description: Latitude
          format: double
          type: number
        lon:
          description: Longitude
          format: double
          type: number
        range:
          description: Estimate of radio range, in meters. This is an estimate on
            how large each cell area is, as a radius around the estimated position
            and is based on the observations or a knowledgeable source.
          format: int32
          type: integer
        samples:
          description: Total number of observations used to calculate the estimated
            position, range and avg_strength.
          format: int32
          type: integer
        updated:
          description: Timestamp of the time when this record was most recently modified.
          format: date-time
          type: string
      type: object
    CompanyInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        contactPersonName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        vatIdentificationNumber:
          type: string
        zipCode:
          type: string
      required:
      - companyName
      - countryCode
      - zipCode
      - department
      - contactPersonName
      - phoneNumber
      type: object
    ContractUpdatedResponse:
      properties:
        contractDetail:
          type: object
        contractName:
          type: string
      type: object
    ContractUpdatingRequest:
      properties:
        contractDetail:
          type: object
        contractName:
          type: string
      type: object
    CouponResponse:
      properties:
        amount:
          description: Amount
          format: double
          type: number
        balance:
          description: Balance
          format: double
          type: number
        billItemName:
          description: Item
          type: string
        couponCode:
          description: Coupon code
          type: string
        expiryYearMonth:
          description: Expiry month
          example: yyyyMM
          type: string
        orderId:
          description: Order ID
          type: string
      type: object
    CreateAndUpdateCredentialsModel:
      properties:
        credentials:
          type: object
        description:
          type: string
        type:
          enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
          type: string
      type: object
    CreateEstimatedCouponRequest:
      properties:
        amount:
          description: Amount
          format: double
          type: number
      required:
      - amount
      type: object
    CreateEstimatedOrderRequest:
      properties:
        orderItemList:
          description: Order item list
          items:
            $ref: '#/components/schemas/OrderItemModel'
          type: array
        shippingAddressId:
          description: Shipping address ID
          type: string
      type: object
    CreateEstimatedVolumeDiscountRequest:
      properties:
        contractTermMonth:
          default: 12
          description: Contract months
          format: int32
          type: integer
        quantity:
          description: Quantity
          format: int32
          type: integer
        startDate:
          description: Start date
          example: yyyyMMdd
          type: string
        volumeDiscountPaymentType:
          description: Payment type
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: Long term discount type
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      required:
      - volumeDiscountType
      - volumeDiscountPaymentType
      - contractTermMonth
      - quantity
      type: object
    CreateEventHandlerRequest:
      properties:
        actionConfigList:
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          type: string
        name:
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
        status:
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          type: string
        targetImsi:
          type: string
        targetOperatorId:
          type: string
        targetSimId:
          type: string
      required:
      - actionConfigList
      - ruleConfig
      - status
      type: object
    CreateGroupRequest:
      properties:
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    CreateOrUpdateRoleRequest:
      properties:
        description:
          type: string
        permission:
          description: PermissionのJSON
          type: string
      required:
      - permission
      type: object
    CreatePortMappingRequest:
      properties:
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: Specify the duration, in seconds, that remote access should
            be enabled.
          type: number
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: Specify whether access uses TLS.
          type: boolean
      required:
      - destination
      type: object
    CreateRoleResponse:
      properties:
        roleId:
          type: string
      type: object
    CreateSimRequest:
      properties:
        subscription:
          type: string
          nullable: true
        type:
          enum:
          - virtual
          type: string
      required:
      - type
      - subscription
      type: object
    CreateSoraletRequest:
      properties:
        description:
          type: string
        soraletId:
          type: string
      required:
      - soraletId
      type: object
    CreateUserPasswordRequest:
      properties:
        password:
          type: string
      type: object
    CreateUserRequest:
      properties:
        description:
          type: string
      type: object
    CreateVirtualPrivateGatewayRequest:
      properties:
        deviceSubnetCidrRange:
          default: 10.128.0.0/9
          type: string
        type:
          description: |-
            VPG Type.
             - `14` : Type-E
             - `15` : Type-F
          enum:
          - 14
          - 15
          type: integer
        useInternetGateway:
          default: true
          type: boolean
      required:
      - type
      type: object
    CreateVpcPeeringConnectionRequest:
      properties:
        destinationCidrBlock:
          type: string
        peerOwnerId:
          type: string
        peerRegion:
          type: string
        peerVpcId:
          type: string
      type: object
    CredentialsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        credentials:
          type: object
        credentialsId:
          type: string
        description:
          type: string
        lastUsedDateTime:
          format: int64
          type: integer
        type:
          enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    CreditCard:
      properties:
        cvc:
          type: string
        expireMonth:
          format: int32
          type: integer
        expireYear:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
      type: object
    DailyBill:
      properties:
        amount:
          description: 金額
          format: int64
          type: integer
        date:
          description: 年月日
          example: yyyyMMdd
          type: string
      type: object
    DailyBillResponse:
      properties:
        billList:
          description: 日ごとの利用料リスト
          items:
            $ref: '#/components/schemas/DailyBill'
          type: array
      type: object
    DataEntry:
      properties:
        content:
          type: string
        contentType:
          type: string
        time:
          format: int64
          type: integer
      type: object
    DataSourceResourceMetadata:
      properties:
        attributeNames:
          items:
            type: string
          type: array
        lastModifiedTime:
          format: int64
          type: integer
        resourceId:
          type: string
        resourceType:
          type: string
      type: object
    DataTrafficStats:
      properties:
        downloadByteSizeTotal:
          format: int64
          type: integer
        downloadPacketSizeTotal:
          format: int64
          type: integer
        uploadByteSizeTotal:
          format: int64
          type: integer
        uploadPacketSizeTotal:
          format: int64
          type: integer
      type: object
    Device:
      properties:
        device_id:
          type: string
        endpoint:
          type: string
        firmwareVersion:
          type: string
        groupId:
          type: string
          nullable: true
        ipAddress:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastRegistrationUpdate:
          format: date-time
          type: string
        manufacturer:
          type: string
        modelNumber:
          type: string
        objects:
          type: object
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        registrationId:
          type: string
        registrationLifeTime:
          format: int64
          type: integer
        serialNumber:
          type: string
          nullable: true
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    DeviceObjectModel:
      properties:
        createdTime:
          format: date-time
          type: string
        format:
          enum:
          - xml
          - json
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        objectId:
          type: string
        objectName:
          type: string
        operatorId:
          type: string
        scope:
          type: string
      type: object
    DiagnosticRequest:
      properties:
        from:
          description: Start time for diagnostic (unixtime milliseconds)
          format: int64
          type: integer
        resourceId:
          description: resourceId according to resourceType
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        to:
          description: End time for diagnostic (unixtime milliseconds)
          format: int64
          type: integer
      required:
      - service
      - resourceType
      - resourceId
      type: object
    DiagnosticResponse:
      properties:
        diagnosticId:
          type: string
        from:
          description: Start time for diagnostic (unixtime milliseconds)
          format: int64
          type: integer
        insights:
          items:
            additionalProperties:
              $ref: '#/components/schemas/Insight'
            type: object
          type: array
        resourceId:
          description: resourceId according to resourceType
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        status:
          enum:
          - diagnosing
          - done
          - failed
          type: string
        to:
          description: End time for diagnostic (unixtime milliseconds)
          format: int64
          type: integer
      type: object
    DownlinkPingRequest:
      properties:
        numberOfPingRequests:
          default: 1
          description: the number of attempt ping
          maximum: 5
          type: integer
        timeoutSeconds:
          default: 1
          description: the timeout duration of each ping
          maximum: 3
          type: integer
      type: object
    DownlinkPingResponse:
      properties:
        rtt:
          description: the RTT of the ping result
          type: string
        stat:
          description: the stats information of the ping result
          type: string
        success:
          description: whether the ping was succeeded or not
          type: boolean
      type: object
    EmailsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        email:
          type: string
        emailId:
          type: string
        updateDateTime:
          format: int64
          type: integer
        verified:
          description: Whether the email address was verified by token.
          type: boolean
      type: object
    EnableMFAOTPResponse:
      properties:
        totpUri:
          type: string
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        fields:
          type: string
        message:
          type: string
      type: object
    EstimatedCouponModel:
      properties:
        amount:
          description: Amount
          format: double
          type: number
        currency:
          description: Currency
          enum:
          - JPY
          - USD
          type: string
        expiryYearMonth:
          description: Expiry month
          example: yyyyMM
          type: string
        orderId:
          description: Order ID
          type: string
        taxAmount:
          description: Tax amount
          format: double
          type: number
        totalAmount:
          description: Total amount
          format: double
          type: number
      type: object
    EstimatedOrderItemModel:
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        productAmount:
          description: Product amount
          format: double
          type: number
        quantity:
          description: Quantity
          format: int32
          type: integer
      type: object
    EstimatedOrderModel:
      properties:
        email:
          description: Email address
          type: string
        orderId:
          description: Order ID
          type: string
        orderItemList:
          description: Order item list
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
        shippingAddressId:
          description: Shipping address ID
          type: string
        shippingCost:
          description: Shipping cost
          format: double
          type: number
        taxAmount:
          description: Tax amount
          format: double
          type: number
        totalAmount:
          description: Total amount
          format: double
          type: number
      type: object
    EstimatedVolumeDiscountModel:
      properties:
        currency:
          description: Currency
          enum:
          - JPY
          - USD
          type: string
        orderId:
          description: Order ID
          type: string
        taxAmount:
          description: Tax amount
          format: double
          type: number
        totalAmount:
          description: Total amount
          format: double
          type: number
        volumeDiscount:
          $ref: '#/components/schemas/VolumeDiscountModel'
      type: object
    EventHandlerModel:
      properties:
        actionConfigList:
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          type: string
        handlerId:
          type: string
        name:
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
        status:
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          type: string
        targetImsi:
          type: string
        targetOperatorId:
          type: string
        targetSimId:
          type: string
      required:
      - actionConfigList
      - handlerId
      - ruleConfig
      - status
      - name
      type: object
    ExecuteSoraletRequest:
      properties:
        contentType:
          type: string
        direction:
          enum:
          - uplink
          - downlink
          type: string
        encodingType:
          enum:
          - text
          - binary
          type: string
        payload:
          type: string
        source:
          additionalProperties:
            $ref: '#/components/schemas/SoraletDataSource'
          type: object
        userdata:
          type: string
        version:
          type: string
      required:
      - version
      - direction
      - contentType
      - payload
      - source
      type: object
    ExecuteSoraletResponse:
      properties:
        body:
          type: string
        contentType:
          type: string
        encodingType:
          type: string
        resultCode:
          format: int32
          type: integer
      type: object
    ExpiryTime:
      properties:
        expiryAction:
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          type: string
          nullable: true
        expiryTime:
          description: The timestamp (in Unix milliseconds) of a date and time set
            using the Expiration function. If no Expiration function is set, null
            is returned.
          format: int64
          type: integer
          nullable: true
      required:
      - expiryTime
      type: object
    ExportRequest:
      properties:
        from:
          format: int64
          type: integer
        period:
          enum:
          - month
          - day
          - minutes
          type: string
        to:
          format: int64
          type: integer
      type: object
    FileEntry:
      properties:
        contentLength:
          description: Content length of the file
          format: int64
          type: integer
        contentType:
          description: Content type of the file
          type: string
        createdTime:
          description: Created time of the file
          format: int64
          type: integer
        directory:
          description: Parent directory name
          type: string
        etag:
          description: Etag of the file
          type: string
        filePath:
          description: Absolute path of the file
          type: string
        filename:
          description: File name
          type: string
        isDirectory:
          description: Whether the entry is directory or not
          type: boolean
        lastModifiedTime:
          description: Last modified time of the file
          format: int64
          type: integer
      type: object
    FileExportResponse:
      properties:
        exportedFileId:
          description: ファイル出力ID(リクエストにexport_mode=asyncを指定した場合）
          type: string
        exportedFilePath:
          description: 出力済みファイル取得パス(リクエストにexport_mode=asyncを付与した場合）
          type: string
        url:
          description: ファイルダウンロードURL(export_mode指定なし、もしくはexport_mode=syncの場合
          type: string
      type: object
    FunnelAWSFirehoseDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://firehose.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - firehose
          type: string
      type: object
    FunnelAWSIoTDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://<id>.iot.<region>.amazonaws.com/<topic>
          type: string
        service:
          enum:
          - aws-iot
          type: string
      type: object
    FunnelAWSKinesisDestination:
      properties:
        provider:
          enum:
          - aws
          type: string
        randomizePartitionKey:
          type: boolean
        resourceUrl:
          example: https://kinesis.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - kinesis
          type: string
      type: object
    FunnelAcroquestTorrentioDestination:
      properties:
        endpointId:
          type: string
        provider:
          enum:
          - acroquest
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - torrentio
          type: string
        tenantId:
          type: string
      type: object
    FunnelAppressoDataSpiderDestination:
      properties:
        provider:
          enum:
          - appresso
          type: string
        resourceUrl:
          example: https://ss.dataspidercloud.com/ws/trigger/funnel?cid=<cid>&sid=<sid>
          type: string
        service:
          enum:
          - dataspider
          type: string
      type: object
    FunnelAzureEventHubDestination:
      properties:
        provider:
          enum:
          - azure
          type: string
        resourceUrl:
          example: https://<namespace>.servicebus.windows.net/<event hubs name>/messages
          type: string
        service:
          enum:
          - eventhubs
          type: string
      type: object
    FunnelBrainsTechImpulseDestination:
      properties:
        provider:
          enum:
          - brains-tech
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - impulse
          type: string
      type: object
    FunnelConfiguration:
      properties:
        addSimId:
          default: false
          type: boolean
        contentType:
          $ref: '#/components/schemas/FunnelContentType'
        credentialsId:
          type: string
        destination:
          $ref: '#/components/schemas/FunnelDestination'
        enabled:
          default: false
          type: boolean
      type: object
    FunnelContentType:
      enum:
      - json
      - text
      - unspecified
      - binary
      - application/x-soracom-bf-v1
      type: string
    FunnelDestination:
      properties:
        provider:
          type: string
        resourceUrl:
          type: string
        service:
          type: string
      type: object
    FunnelEsrijArcgisOnlineDestination:
      properties:
        config:
          type: string
        provider:
          enum:
          - esrij
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - arcgis-online
          type: string
      type: object
    FunnelFusicMockmockDatarecorderDestination:
      properties:
        provider:
          enum:
          - fusic
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - mockmock-datarecorder
          type: string
      type: object
    FunnelGooglePubSubDestination:
      properties:
        provider:
          enum:
          - google
          type: string
        resourceUrl:
          example: your_topic_name
          type: string
        service:
          enum:
          - pubsub
          type: string
      type: object
    FunnelInfoteriaPlatioDestination:
      properties:
        applicationId:
          type: string
        collectionId:
          type: string
        passAll:
          type: boolean
        provider:
          enum:
          - infoteria
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - platio
          type: string
        values:
          type: string
      type: object
    FunnelKiiThingifDestination:
      properties:
        provider:
          enum:
          - kii
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - thingif
          type: string
      type: object
    FunnelLandlogDestination:
      properties:
        channel_id:
          type: string
        data_format:
          enum:
          - json
          - text
          - xml
          type: string
        provider:
          enum:
          - landlog
          type: string
        resourceUrl:
          example: https://api.landlog.info
          type: string
        service:
          enum:
          - landlog
          type: string
      type: object
    FunnelOptimCloudiotosDestination:
      properties:
        channel_id:
          type: string
        data_format:
          type: string
        provider:
          enum:
          - optim
          type: string
        resourceUrl:
          example: https://messaging.optimcloudapis.com
          type: string
        service:
          enum:
          - cloudiotos
          type: string
      type: object
    FunnelSensorCorpusDestination:
      properties:
        additionalData:
          type: string
        provider:
          enum:
          - infocorpus
          type: string
        resourceUrl:
          example: https://www.sensorcorpus.net/
          type: string
        service:
          enum:
          - sensorcorpus
          type: string
      type: object
    FunnelTeradataIntellicloudDestination:
      properties:
        provider:
          enum:
          - teradata
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - intellicloud
          type: string
      type: object
    FunnelWingarcMotionboardDestination:
      properties:
        provider:
          enum:
          - wingarc
          type: string
        resourceUrl:
          example: https://iot-cloud.motionboard.jp/motionboard/
          type: string
        service:
          enum:
          - motionboard
          type: string
      type: object
    FunnelYaskawaMmcloudDestination:
      properties:
        desthost:
          type: string
        destport:
          maximum: 0
          minimum: 65535
          type: integer
        provider:
          enum:
          - yaskawa
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - mmcloud
          type: string
      type: object
    Gadget:
      properties:
        attributes:
          type: object
        groupId:
          type: string
          nullable: true
        id:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          type: object
        operatorId:
          type: string
        product_id:
          type: string
        serial_number:
          type: string
        status:
          enum:
          - active
          - terminated
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    GadgetRegistrationRequest:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    GatePeer:
      properties:
        innerIpAddress:
          type: string
        outerIpAddress:
          type: string
        ownedByCustomer:
          type: boolean
      type: object
    GenerateOperatorsAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GenerateTokenRequest:
      properties:
        tokenTimeoutSeconds:
          default: 86400
          description: |
            新しい API トークンの有効期限の長さ（秒単位）。
            指定しなければデフォルトは 86400 [秒]（24時間）。
            最大値は 172800 [秒]（48時間）。
          maximum: 172800
          type: integer
      type: object
    GenerateTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    GenerateUserAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GetBillingHistoryResponse:
      properties:
        billList:
          description: 月ごとの利用料リスト
          items:
            $ref: '#/components/schemas/MonthlyBill'
          type: array
      type: object
    GetDefaultPermissionsResponse:
      properties:
        defaultPermissions:
          type: string
      type: object
    GetExportedFileResponse:
      properties:
        status:
          description: ファイル出力ステータス
          enum:
          - processing
          - exported
          - failed
          type: string
        url:
          description: ファイルダウンロードURL
          type: string
      type: object
    GetLatestBill:
      properties:
        amount:
          description: 金額
          format: int64
          type: integer
        lastEvaluatedTime:
          description: 利用額計算を実施した時間
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetOperatorResponse:
      properties:
        createDate:
          type: string
        description:
          type: string
        email:
          type: string
        operatorId:
          type: string
        rootOperatorId:
          type: string
        updateDate:
          type: string
      required:
      - createDate
      - description
      - email
      - operatorId
      - rootOperatorId
      - updateDate
      type: object
    GetOrderResponse:
      properties:
        email:
          description: Email address
          type: string
        orderDateTime:
          description: Order date and time
          example: yyyyMMddHHmmss
          type: string
        orderId:
          description: Order ID
          type: string
        orderItemList:
          description: Order item list
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        orderStatus:
          description: Order status
          enum:
          - ordering
          - ordered
          - kitting
          - shipped
          - received
          - cancelling
          - cancelled
          - failed
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
        shippingAddressId:
          description: Shipping address ID
          type: string
        shippingCost:
          description: Shipping cost
          format: double
          type: number
        shippingLabelNumber:
          description: Shipping label number
          type: string
        taxAmount:
          description: Tax amount
          format: double
          type: number
        totalAmount:
          description: Total amount
          format: double
          type: number
      type: object
    GetPaymentMethodResult:
      properties:
        errorCode:
          description: Error code (only if payment information is invalid)
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        errorMessage:
          description: Error message (only if payment information is invalid)
          type: string
        properties:
          description: Payment information
          type: string
        providerType:
          description: Provider type
          enum:
          - WebPay
          type: string
        updateDate:
          description: Update date
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetPaymentTransactionResult:
      properties:
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        description:
          $ref: '#/components/schemas/PaymentDescription'
        message:
          description: Message
          type: string
        messageCode:
          description: Message code
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        status:
          description: Status
          enum:
          - success
          - error
          type: string
      type: object
    GetShippingAddressResponse:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        department:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        shippingAddressId:
          description: 配送先ID
          type: string
        shippingArea:
          description: 配送先エリア
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - phoneNumber
      - shippingAddressId
      - shippingArea
      - state
      - zipCode
      type: object
    GetUserPasswordResponse:
      properties:
        hasPassword:
          type: boolean
      type: object
    GetUserPermissionResponse:
      properties:
        permission:
          description: JSON string of permissions
          type: string
      required:
      - permission
      type: object
    GetVolumeDiscountResponse:
      properties:
        contractDateTime:
          description: Contract date time
          example: yyyyMMddHHmmss
          type: string
        contractId:
          description: Contract ID
          type: string
        contractTermMonth:
          default: 12
          description: Contract months
          format: int32
          type: integer
        endDate:
          description: End date
          example: yyyyMMdd
          type: string
        initialCost:
          description: Initial cost
          format: double
          type: number
        quantity:
          description: Quantity
          format: int32
          type: integer
        startDate:
          description: Start date
          example: yyyyMMdd
          type: string
        status:
          description: Status
          enum:
          - active
          - expired
          type: string
        unitPrice:
          description: Unit price
          format: double
          type: number
        volumeDiscountPaymentType:
          description: Payment type
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: Long term discount type
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    GlobalSimAppletPLMNRecord:
      properties:
        containerId:
          format: int64
          type: integer
        mcc:
          type: string
        mnc:
          type: string
      required:
      - mcc
      - containerId
      type: object
    Group:
      properties:
        configuration:
          $ref: '#/components/schemas/Map'
        createdTime:
          format: int64
          type: integer
        groupId:
          type: string
          nullable: true
        lastModifiedTime:
          format: int64
          type: integer
        operatorId:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    GroupConfigurationUpdateRequest:
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    HarvestExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    ImeiLock:
      properties:
        imei:
          type: string
          nullable: true
      type: object
      nullable: true
    IndividualInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        countryCode:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - fullName
      - countryCode
      - zipCode
      - phoneNumber
      type: object
    Insight:
      properties:
        anomalyDetectedTimes:
          description: Times that possible anomaly behaviors were detected. The format
            depends on the timestamp of events relating to the category. (e.g. unixtime
            milliseconds for session category)
          items:
            type: string
          type: array
        category:
          enum:
          - data
          - session
          - sim
          - others
          - unknown
          type: string
        insightId:
          type: string
        message:
          type: string
        referenceUrls:
          description: Reference URLs that is related to the insight
          items:
            additionalProperties:
              $ref: '#/components/schemas/ReferenceUrl'
            type: object
          type: array
        severity:
          enum:
          - error
          - warning
          - info
          - none
          - unknown
          type: string
      type: object
    IpAddressMapEntry:
      properties:
        ipAddress:
          type: string
        key:
          type: string
        type:
          enum:
          - static
          - dynamic
          - customerGatePeer
          - gatePeer
          type: string
      type: object
    IssueAddEmailTokenRequest:
      properties:
        email:
          description: Email address to be added
          type: string
        password:
          description: Password of the operator
          type: string
      required:
      - email
      - password
      type: object
    IssuePasswordResetTokenRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    IssueSubscriberTransferTokenRequest:
      properties:
        transferDestinationOperatorEmail:
          description: 移管先オペレーターEmail
          type: string
        transferDestinationOperatorId:
          description: 移管先オペレーターID
          type: string
        transferImsi:
          description: 移管するIMSIリスト
          items:
            type: string
          type: array
      required:
      - transferDestinationOperatorEmail
      - transferDestinationOperatorId
      - transferImsi
      type: object
    IssueSubscriberTransferTokenResponse:
      properties:
        token:
          description: トークン
          type: string
      required:
      - token
      type: object
    JunctionInspectionConfiguration:
      properties:
        enabled:
          default: false
          type: boolean
        report:
          $ref: '#/components/schemas/FunnelConfiguration'
      type: object
    JunctionMirroringConfiguration:
      properties:
        peers:
          additionalProperties:
            $ref: '#/components/schemas/JunctionMirroringPeer'
          type: object
      type: object
    JunctionMirroringPeer:
      properties:
        description:
          type: string
        enabled:
          default: false
          type: boolean
        ipAddress:
          type: string
        protocol:
          enum:
          - gre
          type: string
      type: object
    JunctionRedirectionConfiguration:
      properties:
        description:
          type: string
        enabled:
          default: false
          type: boolean
        gateway:
          type: string
      type: object
    LagoonDashboardPermissionsResponse:
      properties:
        dashboardId:
          format: int64
          type: number
        dashboardTitle:
          type: string
        permissions:
          items:
            properties:
              dashboardId:
                format: int64
                type: number
              dashboardTitle:
                type: string
              permissionName:
                enum:
                - View
                - Edit
                - Admin
                type: string
              userEmail:
                type: string
              userId:
                format: int64
                type: number
            type: object
          type: array
      type: object
    LagoonDashboardPermissionsUpdatingRequest:
      properties:
        permissions:
          items:
            properties:
              permission:
                type: string
              userId:
                format: int64
                type: integer
            type: object
          type: array
      type: object
    LagoonLicensePackStatusResponse:
      properties:
        licensePackName:
          type: string
        quantity:
          format: int32
          type: integer
      type: object
    LagoonLicensePacksUpdatingRequest:
      properties:
        licensePackQuantities:
          items:
            properties:
              desiredQuantity:
                format: int32
                type: integer
              licensePackName:
                type: string
            type: object
          type: array
      type: object
    LagoonMigrationFromClassicRequest:
      properties:
        dashboardIds:
          description: A list of dashboard IDs to migrate
          items:
            type: string
          type: array
      type: object
    LagoonPlanChangingRequest:
      properties:
        plan:
          enum:
          - maker
          - pro
          - free
          type: string
      type: object
    LagoonRegistrationRequest:
      properties:
        plan:
          enum:
          - free
          - maker
          - pro
          type: string
        userPassword:
          description: This password is used by the initial user's login.
          type: string
      type: object
    LagoonRegistrationResponse:
      properties:
        lagoonUserEmail:
          description: This email address is used on login with the initial user.
          type: string
      type: object
    LagoonUser:
      properties:
        email:
          description: This value used on login.
          type: string
        id:
          type: number
        lastSeenAt:
          description: The last login datetime.
          type: string
        lastSeenAtAge:
          description: The last login datetime as age.
          type: string
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LagoonUserCreationRequest:
      properties:
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
        userEmail:
          type: string
        userPassword:
          type: string
      type: object
    LagoonUserCreationResponse:
      properties:
        id:
          description: Lagoon user ID assigned to the created user.
          type: integer
      type: object
    LagoonUserEmailUpdatingRequest:
      properties:
        userEmail:
          type: string
      type: object
    LagoonUserPasswordUpdatingRequest:
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
      type: object
    LagoonUserPermissionUpdatingRequest:
      properties:
        role:
          description: A role that represents the permission.
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LastSeen:
      properties:
        rssi:
          format: int32
          type: integer
        snr:
          format: int32
          type: integer
        time:
          format: date-time
          type: string
      type: object
    ListCouponResponse:
      properties:
        couponList:
          description: Coupons
          items:
            $ref: '#/components/schemas/CouponResponse'
          type: array
      type: object
    ListOrderResponse:
      properties:
        orderList:
          description: List of confirmed orders
          items:
            $ref: '#/components/schemas/GetOrderResponse'
          type: array
      type: object
    ListOrderedSubscriberResponse:
      properties:
        orderedSubscriberList:
          description: List of ordered SIMs
          items:
            $ref: '#/components/schemas/OrderedSubscriber'
          type: array
      type: object
    ListPaymentStatementResponse:
      properties:
        paymentStatementsList:
          description: Payment statements
          items:
            $ref: '#/components/schemas/PaymentStatementResponse'
          type: array
      type: object
    ListProductResponse:
      properties:
        productList:
          items:
            $ref: '#/components/schemas/ProductModel'
          type: array
        shippingCostList:
          items:
            $ref: '#/components/schemas/ShippingCostModel'
          type: array
      type: object
    ListRolesResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    ListShippingAddressResponse:
      properties:
        shippingAddresses:
          items:
            $ref: '#/components/schemas/GetShippingAddressResponse'
          type: array
      type: object
    ListVolumeDiscountResponse:
      properties:
        volumeDiscountList:
          description: Contracted long term discounts
          items:
            $ref: '#/components/schemas/GetVolumeDiscountResponse'
          type: array
      type: object
    LogEntry:
      properties:
        body:
          type: object
        resourceId:
          type: string
        resourceType:
          enum:
          - Subscriber
          - EventHandler
          - VirtualPrivateGateway
          type: string
        service:
          enum:
          - Air
          - Beam
          - Canal
          - Direct
          - Door
          - Endorse
          - Funnel
          - Gate
          type: string
        time:
          format: int64
          type: integer
      type: object
    LoraData:
      properties:
        data:
          type: string
        fPort:
          default: 2
          type: integer
      type: object
    LoraDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
          nullable: true
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraGateway:
      properties:
        address:
          type: string
        createdTime:
          format: date-time
          type: string
        gatewayId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        owned:
          default: false
          type: boolean
        status:
          enum:
          - active
          - terminated
          - ready
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraNetworkSet:
      properties:
        allowedOperators:
          items:
            type: string
          type: array
          uniqueItems: true
        createdTime:
          format: date-time
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        operatorId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    MFAAuthenticationRequest:
      properties:
        mfaOTPCode:
          type: string
      type: object
    MFAIssueRevokingTokenRequest:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    MFARevokingTokenVerifyRequest:
      properties:
        backupCode:
          type: string
        email:
          type: string
        password:
          type: string
        token:
          type: string
      type: object
    MFAStatusOfUseResponse:
      properties:
        status:
          type: string
      type: object
    Map:
      # fixme: commented out to avoid invalid schema issue
      # additionalProperties:
      #   type: string
      type: object
    MappingEntries:
      properties:
        mappingEntries:
          items:
            $ref: '#/components/schemas/GlobalSimAppletPLMNRecord'
          type: array
      type: object
    MonthlyBill:
      properties:
        amount:
          description: 金額
          format: int64
          type: integer
        paymentStatus:
          description: 直近の課金ステータス
          enum:
          - lessThanMinimumCharge
          - paying
          - paid
          - refunding
          - refunded
          - fail
          type: string
        paymentTransactionId:
          description: 課金詳細取得用のID
          type: string
        yearMonth:
          description: 年月
          example: yyyyMM
          type: string
      type: object
    NapterAuditLogDirection:
      properties:
        destinationIPAddress:
          type: string
        destinationPort:
          format: int64
          type: integer
        sourceIPAddress:
          type: string
        sourcePort:
          format: int64
          type: integer
      type: object
    NapterAuditLogEntry:
      properties:
        connectionId:
          type: string
        createdAt:
          format: int64
          type: integer
        direction:
          $ref: '#/components/schemas/NapterAuditLogDirection'
        imsi:
          type: string
        isTLS:
          type: boolean
        operatorId:
          type: string
        type:
          enum:
          - ACCESS
          - DENIED
          - CONNECTED
          - CLOSED
          - REFUSED
          - CREATED
          - DELETED
          - EXPIRED
          type: string
      type: object
    NapterAuditLogsExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    ObjectInstance:
      properties:
        id:
          format: int32
          type: integer
        observed:
          default: false
          type: boolean
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ResourceInstance'
          type: object
      type: object
    OpenGateRequest:
      properties:
        privacySeparatorEnabled:
          default: false
          type: boolean
        vxlanId:
          default: 10
          format: int32
          type: integer
      type: object
    OperatorMFAVerifyingResponse:
      properties:
        backupCodes:
          items:
            type: string
          type: array
      type: object
    OrderItemModel:
      properties:
        productCode:
          description: Product code
          type: string
        quantity:
          description: Quantity
          format: int32
          type: integer
      type: object
    OrderedSubscriber:
      properties:
        imsi:
          description: IMSI
          type: string
        msisdn:
          description: MSISDN
          type: string
        serialNumber:
          description: serialNumber
          type: string
          nullable: true
      type: object
    PacketCaptureSession:
      properties:
        createdTime:
          format: date-time
          type: string
        duration:
          format: int32
          type: integer
        endedTime:
          format: date-time
          type: string
        failedReason:
          type: string
        prefix:
          type: string
        startedTime:
          format: date-time
          type: string
        status:
          enum:
          - REQUESTED
          - ACCEPTED
          - CAPTURING
          - POST_PROCESSING
          - DONE
          - FAILED
          type: string
        url:
          format: uri
          type: string
      type: object
    PacketCaptureSessionRequest:
      properties:
        duration:
          format: int32
          maximum: 86400
          minimum: 30
          type: integer
        prefix:
          pattern: ^[0-9A-Za-z_\-]{0,100}$
          type: string
      required:
      - duration
      type: object
    PaymentAmount:
      description: Payment amount
      properties:
        taxAmount:
          format: double
          type: number
        totalAmount:
          format: double
          type: number
      type: object
    PaymentDescription:
      description: Payment description
      properties:
        description:
          type: string
        itemList:
          items:
            type: string
          type: array
      type: object
    PaymentStatementResponse:
      properties:
        amount:
          description: Amount
          format: double
          type: number
        paymentDateTime:
          description: Payment date time
          format: int64
          type: integer
        paymentInstrument:
          description: Payment instrument
          type: string
        paymentMethod:
          description: Payment method
          type: string
        paymentStatementId:
          description: Payment statement ID
          type: string
        paymentStatementInfo:
          description: Payment statement information
          type: string
      type: object
    Placement:
      properties:
        region:
          default: eu-central-1
          type: string
      type: object
    PortMapping:
      properties:
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: The duration that remote access is enabled, in seconds.
          type: number
        endpoint:
          description: SORACOM Napter endpoint (IP address and port number) for remote
            access.
          type: string
        hostname:
          description: SORACOM Napter hostname for remote access.
          type: string
        ipAddress:
          description: SORACOM Napter IP Address for remote access.
          type: string
        port:
          description: SORACOM Napter port number for remote access.
          type: number
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: Indicates TLS is required.
          type: boolean
      type: object
    PortMappingDestination:
      properties:
        imsi:
          description: The target IMSI of the subscriber.
          type: string
        port:
          description: The port on your device used for access.
          type: number
      required:
      - imsi
      - port
      type: object
    PortMappingSource:
      properties:
        ipRanges:
          description: The range of IP addresses in CIDR notation which will be allowed
            to access the port mapping.
          items:
            type: string
          type: array
      type: object
    PreviousSessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        createdTime:
          description: The time when the previous session was created.
          format: int64
          type: integer
        deletedTime:
          description: The time when the previous session was deleted.
          format: int64
          type: integer
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
          nullable: true
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
          nullable: true
        ueIpAddress:
          description: The IP address of the device.
          type: string
          nullable: true
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    PriceByQuantity:
      properties:
        minQuantity:
          description: Min quantity
          format: int32
          type: integer
        price:
          description: Price
          format: double
          type: number
        taxIncludedPrice:
          description: TaxIncluded price
          format: double
          type: number
      type: object
    ProductModel:
      description: Product
      properties:
        campaignCode:
          description: Campaign code
          type: string
        consignorId:
          description: Consignor ID
          type: string
        consignorName:
          description: Consignor name
          type: string
        count:
          description: Count
          format: double
          type: number
        currency:
          description: Currency
          enum:
          - JPY
          - USD
          type: string
        description:
          description: Product Description
          type: string
        maxQuantity:
          description: Max quantity
          format: int32
          type: integer
        price:
          description: Price
          format: double
          type: number
        priceByQuantityList:
          items:
            $ref: '#/components/schemas/PriceByQuantity'
          type: array
        productCode:
          description: Product code
          type: string
        productInfoURL:
          description: URL of product page
          type: string
        productName:
          description: Product name
          type: string
        productType:
          description: Product type
          enum:
          - sim
          - lora
          - sigfox
          - network_module
          - misc
          type: string
        properties:
          additionalProperties:
            type: string
          description: Properties
          type: object
        regularPrice:
          description: Regular price
          format: double
          type: number
        taxIncludedPrice:
          description: Price
          format: double
          type: number
        taxIncludedRegularPrice:
          description: TaxIncluded regular price
          format: double
          type: number
      type: object
    PutIpAddressMapEntryRequest:
      properties:
        ipAddress:
          type: string
        key:
          type: string
      required:
      - key
      - ipAddress
      type: object
    ReferenceUrl:
      properties:
        title:
          type: string
        url:
          type: string
      type: object
    RegisterGatePeerRequest:
      properties:
        innerIpAddress:
          type: string
        outerIpAddress:
          type: string
      required:
      - outerIpAddress
      type: object
    RegisterLoraDeviceRequest:
      properties:
        groupId:
          type: string
          nullable: true
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    RegisterOperatorsRequest:
      properties:
        email:
          type: string
        password:
          description: パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z)
            を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
          type: string
      required:
      - email
      - password
      type: object
    RegisterPayerInformationModel:
      properties:
        companyName:
          description: Company name
          type: string
        department:
          description: Department
          type: string
        fullName:
          description: Full name
          type: string
      type: object
    RegisterSimRequest:
      properties:
        groupId:
          type: string
          nullable: true
        registrationSecret:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagUpdateRequest'
          type: array
      required:
      - registrationSecret
      type: object
    RegisterSubscribersRequest:
      properties:
        groupId:
          type: string
          nullable: true
        registrationSecret:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagUpdateRequest'
          type: array
      required:
      - registrationSecret
      type: object
    ResourceInstance:
      properties:
        description:
          type: string
        id:
          format: int32
          type: integer
        mandatory:
          default: false
          type: boolean
        multiple:
          default: false
          type: boolean
        name:
          type: string
        observed:
          default: false
          type: boolean
        operations:
          enum:
          - NONE
          - R
          - W
          - RW
          - E
          - RE
          - WE
          - RWE
          type: string
        rangeEnumeration:
          type: string
        type:
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - OPAQUE
          - TIME
          - OBJLNK
          type: string
        units:
          type: string
        value:
          type: object
        values:
          type: object
      type: object
    RoleResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        permission:
          description: PermissionのJSON
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    RoutingFilterEntry:
      properties:
        action:
          description: Whether to allow or deny the outbound packets with a destination
            in the specified range
          enum:
          - allow
          - deny
          type: string
        ipRange:
          description: IPv4 address range in CIDR format, e.g. a.b.c.d/x
          type: string
      required:
      - action
      - ipRange
      type: object
    RuleConfig:
      properties:
        properties:
          $ref: '#/components/schemas/RuleConfigProperty'
        type:
          enum:
          - SubscriberDailyTrafficRule
          - SubscriberMonthlyTrafficRule
          - SubscriberCumulativeTrafficRule
          - SubscriberFirstTrafficRule
          - SubscriberStatusAttributeRule
          - SubscriberSpeedClassAttributeRule
          - SubscriberExpiredRule
          - SubscriberImeiMismatchedRule
          - SimDailyTotalTrafficRule
          - SimMonthlyTotalTrafficRule
          - SimCumulativeTotalTrafficRule
          - SimStatusAttributeRule
          - SimSpeedClassAttributeRule
          - SimExpiredRule
          - SimImeiMismatchedRule
          - SimSubscriptionStatusRule
          - DailyTotalTrafficRule
          - MonthlyTotalTrafficRule
          type: string
      required:
      - properties
      - type
      type: object
    RuleConfigProperty:
      properties:
        inactiveTimeoutDateConst:
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        inactiveTimeoutOffsetMinutes:
          type: string
        limitTotalTrafficMegaByte:
          type: string
        runOnceAmongTarget:
          type: boolean
        targetOtaStatus:
          description: Only for SimSubscriptionStatusRule
          enum:
          - started
          - finished
          - failed
          type: string
        targetSpeedClass:
          description: Only for SubscriberSpeedClassAttributeRule, SimSpeedClassAttributeRule
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          type: string
        targetStatus:
          description: Only for SubscriberStatusAttributeRule, SimStatusAttributeRule
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
          type: string
      required:
      - inactiveTimeoutDateConst
      - limitTotalTrafficMegaByte
      type: object
    SessionEvent:
      properties:
        apn:
          description: The Access Point Name configured.
          type: string
        dns0:
          description: First IP address of DNS servers.
          type: string
        dns1:
          description: Second IP address of DNS servers.
          type: string
        event:
          description: The type of behavior for the event. Possible values are "Created"
            indicates the device created a new session, "Modified" indicates that
            an existing connection was modified, "Deleted" indicates a network connection
            was closed.
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
          nullable: true
        imsi:
          description: The IMSI of the SIM.
          type: string
        operatorId:
          description: The operator ID of the session event.
          type: string
        time:
          description: The timestamp of the session event.
          format: int64
          type: integer
        ueIpAddress:
          description: The IP address of the device.
          type: string
          nullable: true
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    SessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
          nullable: true
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
          nullable: true
        lastUpdatedAt:
          format: int64
          type: integer
        online:
          description: Whether or not the SIM is online.
          type: boolean
        ueIpAddress:
          description: The IP address of the device.
          type: string
          nullable: true
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
      nullable: true
    SetDeviceObjectModelScopeRequest:
      properties:
        scope:
          type: string
      type: object
    SetGroupRequest:
      properties:
        groupId:
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    SetImeiLockRequest:
      properties:
        imei:
          type: string
          nullable: true
      type: object
    SetNetworkSetRequest:
      properties:
        networkSetId:
          type: string
      type: object
    SetSystemNotificationsRequest:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        password:
          description: Password of the operator. This is necessary when type is primary.
          type: string
      required:
      - emailIdList
      type: object
    SetUserPermissionRequest:
      properties:
        description:
          type: string
        permission:
          description: JSON string of permissions
          type: string
      required:
      - permission
      type: object
    ShippingAddressModel:
      description: Shipping address
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        email:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - state
      - zipCode
      type: object
    ShippingCostModel:
      description: Shipping cost
      properties:
        shippingArea:
          description: (Japan coverage only) Shipping area
          enum:
          - hokkaido
          - kita_tohoku
          - minami_tohoku
          - kanto
          - shinetsu
          - chubu
          - hokuriku
          - kansai
          - chugoku
          - shikoku
          - kyushu
          - okinawa
          type: string
        shippingAreaName:
          description: Shipping Area name
          type: string
        shippingCost:
          description: Shipping Cost
          format: double
          type: number
        size:
          description: Size
          format: int32
          type: integer
      type: object
    SigfoxData:
      properties:
        data:
          type: string
      type: object
    SigfoxDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
          nullable: true
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    SigfoxRegistrationRequest:
      properties:
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Sim:
      properties:
        activeProfileId:
          type: string
        arcSessionStatus:
          $ref: '#/components/schemas/ArcSessionStatus'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        createdTime:
          format: int64
          type: integer
        expiryAction:
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          type: string
          nullable: true
        expiryTime:
          format: int64
          type: integer
          nullable: true
        groupId:
          type: string
          nullable: true
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        lastModifiedTime:
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          format: int64
          type: integer
          nullable: true
        localInfo:
          $ref: '#/components/schemas/Map'
        moduleType:
          type: string
        operatorId:
          type: string
        otaSerialNumber:
          type: string
        pcapEndTime:
          format: int64
          type: integer
          nullable: true
        pcapStartTime:
          format: int64
          type: integer
          nullable: true
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        profiles:
          additionalProperties:
            $ref: '#/components/schemas/SimProfile'
          type: object
        serialNumber:
          type: string
          nullable: true
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          type: string
        speedClass:
          type: string
        status:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          type: boolean
        type:
          enum:
          - euicc
          - uicc
          - virtual
          type: string
      type: object
    SimProfile:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
        iccid:
          type: string
        otaSupported:
          type: boolean
        primaryImsi:
          type: string
        subscribers:
          additionalProperties:
            $ref: '#/components/schemas/SimplifiedSubscriber'
          type: object
      type: object
    SimplifiedSubscriber:
      properties:
        bundles:
          items:
            type: string
          type: array
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        imsi:
          type: string
        msisdn:
          type: string
        status:
          type: string
        subscription:
          type: string
          nullable: true
      type: object
    SmsForwardingReport:
      properties:
        messageId:
          type: string
      type: object
    SmsForwardingRequest:
      properties:
        encodingType:
          default: 2
          description: Encoding type of the message body. `1` indicates the body is
            `DCS_7BIT` that only supports single byte characters. `2` is `DCS_UCS2`
            that supports multi-byte text. When omitted, it is treated as `2` (`DCS_UCS2`).
          type: integer
        payload:
          type: string
      type: object
    SoracomBeamStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    Soralet:
      properties:
        createdTime:
          format: int64
          type: integer
        description:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        updatedTime:
          format: int64
          type: integer
      type: object
    SoraletDataSource:
      properties:
        resourceId:
          type: string
        resourceType:
          type: string
      required:
      - resourceType
      - resourceId
      type: object
    SoraletLog:
      properties:
        createdTime:
          format: int64
          type: integer
        message:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        version:
          format: int64
          type: integer
      type: object
    SoraletVersion:
      properties:
        createdTime:
          format: int64
          type: integer
        hash:
          type: string
        operatorId:
          type: string
        size:
          format: int64
          type: integer
        soraletId:
          type: string
        srn:
          type: string
        version:
          format: int64
          type: integer
      type: object
    Subscriber:
      properties:
        apn:
          description: The Access Point Name configured.
          type: string
        bundles:
          items:
            type: string
          type: array
        createdAt:
          description: The timestamp that the SIM was created.
          format: int64
          type: integer
        expiredAt:
          description: The timestamp of a date and time where the SIM was expired.
          format: int64
          type: integer
          nullable: true
        expiredTime:
          description: The timestamp of a date and time where the SIM was expired.
          format: int64
          type: integer
        expiryAction:
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          type: string
          nullable: true
        groupId:
          description: The SIM group ID where the SIM belongs to.
          type: string
          nullable: true
        iccid:
          description: The ICCID of the SIM.
          type: string
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        imsi:
          description: The IMSI of the SIM.
          type: string
        ipAddress:
          type: string
        lastModifiedAt:
          description: The timestamp when the SIM information was modified.
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          description: The timestamp (in Unix milliseconds) of the last instance where
            the Napter On-Demand Remote Access service was used with the subscriber.
            If Napter has never been used with the subscriber, null is returned.
          format: int64
          type: integer
          nullable: true
        moduleType:
          description: The form factor of the physical SIM. Possible values are "mini"
            for 2FF SIM card, "micro" for 3FF SIM card, "nano" for 4FF SIM card, "trio"
            for a Universal 3-in-1 (2FF/3FF/4FF) SIM card, or "embedded" for MFF2
            or Embedded SIM (eSIM).
          type: string
        msisdn:
          description: The MSISDN of the SIM.
          type: string
        operatorId:
          description: The Operator ID of the SIM.
          type: string
        plan:
          description: Whether or not the subscription supports SMS functionality.
            0 = SMS not supported; 1 = SMS supported.
          type: integer
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        registeredTime:
          description: The timestamp (in Unix milliseconds) that the subscriber was
            manually registered to your account. When purchasing SIMs directly through
            the User Console, SIMs will automatically be registered to your account,
            and null is returned.
          format: int64
          type: integer
        serialNumber:
          description: The serial number of the SIM.
          type: string
          nullable: true
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          description: The SIM ID of the SIM.
          type: string
        speedClass:
          description: The speed class of the SIM.
          type: string
        status:
          description: The subscription status of the subscriber. Possible values
            are "ready", "active", "inactive", "standby", "suspended", or "terminated".
          type: string
        subscription:
          description: The name of the subscription for the SIM.
          type: string
          nullable: true
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          type: boolean
        type:
          description: The speed class of the SIM.
          type: string
      type: object
    SubscriptionContainer:
      properties:
        containerId:
          format: int64
          type: integer
        downloaded:
          type: boolean
        subscriber:
          additionalProperties:
            $ref: '#/components/schemas/Subscriber'
          type: object
      type: object
    SubscriptionContainerStatus:
      properties:
        containers:
          items:
            $ref: '#/components/schemas/SubscriptionContainer'
          type: array
        countryMapping:
          additionalProperties:
            properties:
              mappingRecord:
                properties:
                  containerId:
                    format: int64
                    type: integer
                  subscription:
                    type: string
                    nullable: true
                type: object
              plmnCode:
                type: string
            type: object
          type: object
      type: object
    SupportTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    SystemNotificationsModel:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        type:
          description: Notification type
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    TagSet:
      additionalProperties:
        type: string
      description: An object which always contains at least one property "name" with
        a string value. If you give a subscriber/SIM a name, the name will be returned
        as the value of the "name" property. If the subscriber/SIM does not have a
        name, an empty string "" is returned. In addition, if you create any custom
        tags for the subscriber/SIM, each custom tag will appear as additional properties
        in the object.
      example:
        tagName1: tagValue1
        tagName2: tagValue2...
      type: object
    TagUpdateRequest:
      properties:
        tagName:
          type: string
        tagValue:
          type: string
      required:
      - tagName
      - tagValue
      type: object
    TrafficVolumeRanking:
      properties:
        imsi:
          type: string
        trafficVolume:
          format: int64
          type: integer
      type: object
    UpdateDefaultPermissionsRequest:
      properties:
        permissions:
          description: JSON string of permissions
          type: string
      required:
      - permissions
      type: object
    UpdateEventHandlerRequest:
      $ref: '#/components/schemas/CreateEventHandlerRequest'
    UpdatePasswordRequest:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    UpdatePermissionRequest:
      properties:
        operatorId:
          type: string
      type: object
    UpdateSpeedClassRequest:
      properties:
        speedClass:
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          type: string
      required:
      - speedClass
      type: object
    UpdateUserRequest:
      properties:
        description:
          type: string
      type: object
    UserDetailResponse:
      properties:
        authKeyList:
          items:
            $ref: '#/components/schemas/AuthKeyResponse'
          type: array
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        hasPassword:
          type: boolean
        permission:
          type: string
        roleList:
          items:
            $ref: '#/components/schemas/ListRolesResponse'
          type: array
        updateDateTime:
          format: int64
          type: integer
        userName:
          type: string
      type: object
    VerifyAddEmailTokenRequest:
      properties:
        token:
          description: Token sent by email
          type: string
      required:
      - token
      type: object
    VerifyOperatorsRequest:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    VerifyPasswordResetTokenRequest:
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
      type: object
    VerifySubscriberTransferTokenRequest:
      properties:
        token:
          description: トークン
          type: string
      required:
      - token
      type: object
    VerifySubscriberTransferTokenResponse:
      properties:
        transferredImsi:
          description: 移管されたIMSIリスト
          items:
            type: string
          type: array
      required:
      - transferredImsi
      type: object
    VirtualPrivateGateway:
      properties:
        createdTime:
          format: int64
          type: integer
        id:
          type: string
        lastModifiedTime:
          format: int64
          type: integer
        operatorId:
          type: string
        placement:
          $ref: '#/components/schemas/Placement'
        status:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        type:
          enum:
          - 12
          - 13
          - 14
          - 15
          type: integer
        useInternetGateway:
          type: boolean
        virtualInterfaces:
          $ref: '#/components/schemas/Map'
        vpcPeeringConnections:
          $ref: '#/components/schemas/Map'
      type: object
    VolumeDiscountModel:
      description: Long term discount
      properties:
        contractTermMonth:
          default: 12
          description: Contract months
          format: int32
          type: integer
        endDate:
          description: End date
          example: yyyyMMdd
          type: string
        initialCost:
          description: Initial cost
          format: double
          type: number
        quantity:
          description: Quantity
          format: int32
          type: integer
        startDate:
          description: Start date
          example: yyyyMMdd
          type: string
        unitPrice:
          description: Unit price
          format: double
          type: number
        volumeDiscountPaymentType:
          description: Payment type
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: Long term discount type
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    VpcPeeringConnection:
      properties:
        destinationCidrBlock:
          type: string
        id:
          type: string
        peerOwnerId:
          type: string
        peerVpcId:
          type: string
      type: object
  securitySchemes:
    api_key:
      in: header
      name: X-Soracom-API-Key
      type: apiKey
    api_token:
      in: header
      name: X-Soracom-Token
      type: apiKey
